[{"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_LEFT", "output": "turn left after run opposite right twice, run opposite right twice and turn left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run around left and run opposite right, run opposite right after run around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_LOOK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump around right twice after look twice, look twice and jump around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "run right thrice after look right, look right and run right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "run around right thrice after run around left twice, run around left twice and run around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "run right thrice and look around right twice, look around right twice after run right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_LOOK", "output": "look right after jump right twice, jump right twice and look right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT", "output": "run opposite right thrice and turn opposite right, run opposite right thrice and turn right twice, turn right twice after run opposite right thrice, turn opposite right after run opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "run left twice and jump around right, jump around right after run left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump around right after turn around right thrice, turn around right thrice and jump around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "look around left twice and walk around left thrice, walk around left thrice after look around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "run opposite left thrice after walk around right twice, walk around right twice and run opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "turn around left thrice and walk left thrice, walk left thrice after turn around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "jump opposite left and look opposite left, look opposite left after jump opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_LOOK I_TURN_LEFT", "output": "turn left after look twice, look twice and turn left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_LOOK", "output": "look around right thrice and look, look after look around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "run opposite left after turn around right twice, turn around right twice and run opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "turn left thrice and jump opposite left thrice, jump opposite left thrice after turn left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_WALK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "walk twice and run around left thrice, run around left thrice after walk twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_JUMP", "output": "jump left after look around left twice, look around left twice and jump left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_LOOK I_LOOK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around left after look thrice, look thrice and turn opposite left twice, look thrice and turn around left, turn opposite left twice after look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_LOOK I_TURN_LEFT I_JUMP", "output": "look twice and jump left, jump left after look twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "jump thrice and look opposite left twice, look opposite left twice after jump thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "turn left thrice and walk around right thrice, walk around right thrice after turn left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look around left thrice after look opposite left thrice, look opposite left thrice and look around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT I_LOOK", "output": "walk around right thrice and look left, look left after walk around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "walk opposite right after turn right, turn right thrice and walk, turn right and walk opposite right, walk after turn right thrice, turn right twice and walk right, walk right after turn right twice, walk right after turn opposite right, turn opposite right and walk right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_RUN", "output": "turn left twice and run right, run right after turn opposite left, turn opposite left and run right, run right after turn left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn opposite right thrice after run, run and turn opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT", "output": "turn right after run left thrice, run left thrice and turn right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "jump opposite right twice after turn left, turn left and jump opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "turn right twice and jump around left thrice, turn opposite right and jump around left thrice, jump around left thrice after turn opposite right, jump around left thrice after turn right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "walk left twice and jump right thrice, jump right thrice after walk left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "walk around right twice and look around left, look around left after walk around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT", "output": "walk opposite right and turn right, turn right after walk opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run around left thrice after run, run and run around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right thrice after walk around right, walk around right and run opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right thrice after run around left thrice, run around left thrice and run opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "walk and jump left twice, jump left twice after walk", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn opposite left twice after run left thrice, run left thrice and turn opposite left twice, run left thrice and turn around left, turn around left after run left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "walk right thrice and look right twice, look right twice after walk right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look left thrice after jump around left, jump around left and look left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_JUMP", "output": "jump after run around right twice, run around right twice and jump", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look around left after look right twice, look right twice and look around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "jump opposite right thrice and run right thrice, run right thrice after jump opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_LOOK I_LOOK I_LOOK", "output": "look thrice after look around right twice, look around right twice and look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "walk left and turn around left twice, turn around left twice after walk left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "run around left and look right thrice, look right thrice after run around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_LOOK I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look around left twice after look thrice, look thrice and look around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_WALK I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "walk twice and jump opposite left twice, jump opposite left twice after walk twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "look right and look opposite left thrice, look opposite left thrice after look right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk right thrice after run opposite right twice, run opposite right twice and walk right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_RIGHT I_TURN_RIGHT", "output": "turn opposite right after look opposite left twice, turn right twice after look opposite left twice, look opposite left twice and turn right twice, look opposite left twice and turn opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "walk right and look around right, look around right after walk right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right thrice after jump thrice, jump thrice and run opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump right twice after look opposite right thrice, look opposite right thrice and jump right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "look opposite left twice and run opposite left thrice, run opposite left thrice after look opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_LOOK", "output": "look left after look around right twice, look around right twice and look left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_RUN", "output": "run after jump right thrice, jump right thrice and run", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "walk opposite right twice after jump opposite left thrice, jump opposite left thrice and walk opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_JUMP", "output": "jump right after walk opposite right twice, walk opposite right twice and jump right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "jump around left thrice and turn around right twice, turn around right twice after jump around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_WALK I_WALK", "output": "walk left thrice and walk twice, walk twice after walk left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn right thrice and turn right thrice, turn right twice after turn opposite right twice, turn around right and turn right twice, turn opposite right twice and turn right twice, turn opposite right and turn around right, turn opposite right twice after turn right twice, turn right twice after turn around right, turn opposite right twice after turn opposite right, turn opposite right and turn opposite right twice, turn around right and turn opposite right, turn opposite right thrice, turn around right after turn right twice, turn opposite right after turn opposite right twice, turn opposite right twice and turn opposite right, turn right twice and turn opposite right twice, turn opposite right after turn around right, turn around right after turn opposite right, turn right thrice after turn right thrice, turn right twice and turn around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT I_RUN", "output": "walk around right twice and run left, run left after walk around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_JUMP I_JUMP", "output": "run around left twice and jump twice, jump twice after run around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn around right after turn opposite left twice, turn around left and turn opposite right twice, turn opposite right twice after turn around left, turn opposite left twice and turn opposite right twice, turn opposite right twice after turn opposite left twice, turn around left and turn around right, turn opposite left twice and turn around right, turn around right after turn around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn right thrice after walk around left, walk around left and turn right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_LOOK I_LOOK I_LOOK", "output": "look thrice after turn around left twice, turn around left twice and look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look around left and look right thrice, look right thrice after look around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump right twice after look around right thrice, look around right thrice and jump right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "jump opposite left twice and look opposite left, look opposite left after jump opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "run opposite right and look left twice, look left twice after run opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_LOOK", "output": "look left after walk around left thrice, walk around left thrice and look left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_WALK", "output": "look right and walk, walk after look right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "run opposite right thrice and run around right thrice, run around right thrice after run opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "turn opposite left twice and look right thrice, look right thrice after turn around left, turn around left and look right thrice, look right thrice after turn opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_RUN I_RUN I_RUN", "output": "turn opposite left twice and run thrice, run thrice after turn around left, run thrice after turn opposite left twice, turn around left and run thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around left thrice after run twice, run twice and turn around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn left thrice after run left thrice, run left thrice and turn left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "walk left and turn around right twice, turn around right twice after walk left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "look left and jump around left twice, jump around left twice after look left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_LOOK", "output": "look right after jump around right thrice, jump around right thrice and look right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look around right thrice after run opposite left, run opposite left and look around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_RUN I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk around right after run twice, run twice and walk around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "jump left thrice and turn opposite right thrice, turn opposite right thrice after jump left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_WALK I_WALK I_WALK", "output": "walk opposite right thrice and walk thrice, walk thrice after walk opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "jump around right twice and turn opposite right twice, jump around right twice and turn around right, turn around right after jump around right twice, turn opposite right twice after jump around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "run around left twice and turn around left thrice, turn around left thrice after run around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "jump right thrice and look around left twice, look around left twice after jump right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk around left after turn opposite left thrice, turn opposite left thrice and walk around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "jump and turn around right thrice, turn around right thrice after jump", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_WALK", "output": "turn around left and walk left, walk left after turn opposite left twice, walk opposite left after turn left thrice, turn left thrice and walk opposite left, walk left after turn around left, turn opposite left twice and walk left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_JUMP", "output": "jump left after look opposite right twice, look opposite right twice and jump left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK", "output": "walk around right and look opposite right twice, look opposite right twice after walk around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around left twice and turn left thrice, turn left thrice and turn around left twice, turn around left twice after turn left thrice, turn left thrice after turn around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "jump opposite right thrice and run around left twice, run around left twice after jump opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK", "output": "look opposite right thrice after look opposite right thrice, look opposite right thrice and look opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk left thrice after run opposite left, run opposite left and walk left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "run right and turn opposite left twice, run right and turn around left, turn around left after run right, turn opposite left twice after run right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_JUMP", "output": "jump right after turn left thrice, turn left thrice and jump right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "jump right after turn opposite right thrice, turn opposite right thrice and jump right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_TURN_LEFT", "output": "turn left twice after run right twice, turn opposite left after run right twice, run right twice and turn opposite left, run right twice and turn left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look around right after jump around left twice, jump around left twice and look around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT", "output": "turn left after run around right, run around right and turn left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK", "output": "turn opposite right and walk opposite left thrice, walk opposite left thrice after turn right twice, turn right twice and walk opposite left thrice, walk opposite left thrice after turn opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_WALK I_RUN I_RUN", "output": "run twice after walk opposite left, walk opposite left and run twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "jump opposite right thrice and turn around right, turn opposite right twice after jump opposite right thrice, jump opposite right thrice and turn opposite right twice, turn around right after jump opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "look around left thrice and jump right twice, jump right twice after look around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_WALK I_WALK I_TURN_RIGHT I_WALK", "output": "walk thrice and walk right, walk right after walk thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "jump right and look around left, look around left after jump right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_LOOK I_LOOK I_LOOK", "output": "look thrice after jump opposite right thrice, jump opposite right thrice and look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "run opposite right thrice and jump around right, jump around right after run opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK", "output": "walk opposite left twice after walk right, walk right and walk opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn opposite right and turn around left thrice, turn around left thrice after turn opposite right, turn around left thrice after turn right twice, turn right twice and turn around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "run opposite left thrice after run, run and run opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "jump around right thrice and turn around left thrice, turn around left thrice after jump around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk opposite right thrice and walk around right, walk around right after walk opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn left and turn around right twice, turn around right twice after turn left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_WALK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump around right twice after walk twice, walk twice and jump around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "run opposite left after look opposite left thrice, look opposite left thrice and run opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around left thrice after walk left thrice, walk left thrice and turn around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_RUN I_RUN I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "look opposite left after run thrice, run thrice and look opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "jump opposite left thrice after jump right, jump right and jump opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "jump twice and run opposite right twice, run opposite right twice after jump twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk around right thrice after jump opposite right, jump opposite right and walk around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "turn around left twice and run left thrice, run left thrice after turn around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "run opposite right twice and walk opposite right, walk opposite right after run opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk left thrice after jump right twice, jump right twice and walk left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look around right and look around left, look around left after look around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "run right twice after jump, jump and run right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run left twice after look left, look left and run left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "look right and run around right, run around right after look right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn around right thrice after look left twice, look left twice and turn around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "turn right thrice and walk around left, walk around left after turn right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_LOOK", "output": "look right after jump left thrice, jump left thrice and look right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look right thrice, look right after look right twice, look right and look right twice, look right twice after look right, look right twice and look right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "run opposite right and turn around right thrice, turn around right thrice after run opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_TURN_LEFT", "output": "run right thrice and turn left twice, turn left twice after run right thrice, turn opposite left after run right thrice, run right thrice and turn opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run left thrice after run twice, run twice and run left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "jump opposite left twice after turn left, turn left and jump opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_LOOK", "output": "turn opposite right twice and look left, look left after turn opposite right twice, turn around right and look left, look left after turn around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_TURN_LEFT I_LOOK", "output": "look and look left, look left after look", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "look opposite left twice after walk around left, walk around left and look opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run left twice after look around right twice, look around right twice and run left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn around right after walk around left, walk around left and turn around right, turn opposite right twice after walk around left, walk around left and turn opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right after walk right, walk right and run opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "jump opposite right twice after turn around right twice, turn around right twice and jump opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn opposite left thrice after look left twice, look left twice and turn opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_WALK I_WALK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump around left after walk thrice, walk thrice and jump around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right thrice after jump opposite right, jump opposite right and run opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "walk around right twice and jump opposite right, jump opposite right after walk around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "turn opposite right thrice and jump around right twice, jump around right twice after turn opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK", "output": "walk right and walk opposite left thrice, walk opposite left thrice after walk right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_JUMP I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "jump twice and look around right, look around right after jump twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_WALK I_WALK I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "jump opposite right thrice after walk thrice, walk thrice and jump opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP", "output": "jump opposite right thrice and jump, jump after jump opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk around right thrice after run opposite right thrice, run opposite right thrice and walk around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run around right thrice and run opposite right twice, run opposite right twice after run around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_WALK I_WALK", "output": "run left thrice and walk twice, walk twice after run left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump opposite right thrice and jump around left, jump around left after jump opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "look around right thrice and turn around left thrice, turn around left thrice after look around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around right thrice and turn around left, turn opposite left twice after turn around right thrice, turn around right thrice and turn opposite left twice, turn around left after turn around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn right thrice and turn opposite left thrice, turn opposite left thrice after turn right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look left thrice after walk opposite right thrice, walk opposite right thrice and look left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_LOOK I_LOOK I_LOOK", "output": "walk right thrice and look thrice, look thrice after walk right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP", "output": "turn around left thrice and jump twice, jump twice after turn around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk around left thrice and walk right thrice, walk right thrice after walk around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_WALK", "output": "look around left and walk left, walk left after look around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "jump right twice and jump opposite right, jump opposite right after jump right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump around right after run right, run right and jump around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn around right twice after walk around left thrice, walk around left thrice and turn around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "jump opposite right after jump around left, jump around left and jump opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_WALK", "output": "walk left after jump around left, jump around left and walk left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right after jump around left, jump around left and run opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "jump opposite right and look opposite left twice, look opposite left twice after jump opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "jump opposite right twice and look around left twice, look around left twice after jump opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk left thrice after jump opposite left twice, jump opposite left twice and walk left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "look opposite right thrice and walk opposite right twice, walk opposite right twice after look opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump left thrice after look around right twice, look around right twice and jump left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_WALK I_WALK", "output": "walk twice after walk around left thrice, walk around left thrice and walk twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump left after jump right, jump right and jump left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_JUMP", "output": "turn around right twice and jump left, jump left after turn around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "run right thrice after walk around left twice, walk around left twice and run right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look around right twice after run around right thrice, run around right thrice and look around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "look opposite left thrice and walk around left, walk around left after look opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "walk left and look around left thrice, look around left thrice after walk left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "look left thrice and look opposite left thrice, look opposite left thrice after look left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "run opposite left thrice and walk opposite right twice, walk opposite right twice after run opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_WALK", "output": "walk right after turn left twice, turn left twice and walk right, walk right after turn opposite left, turn opposite left and walk right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_LOOK I_LOOK", "output": "look twice after walk right thrice, walk right thrice and look twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_WALK I_WALK I_WALK", "output": "walk opposite left twice and walk thrice, walk thrice after walk opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_LOOK", "output": "look after look right thrice, look right thrice and look", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump around left twice after walk opposite right twice, walk opposite right twice and jump around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "run around right thrice after look around right thrice, look around right thrice and run around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_LOOK I_LOOK I_LOOK", "output": "look thrice after jump opposite left, jump opposite left and look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "walk around left and look right thrice, look right thrice after walk around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "look around left twice and run opposite left, run opposite left after look around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_LOOK I_LOOK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "look thrice and run around right, run around right after look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK", "output": "walk opposite left thrice after walk left twice, walk left twice and walk opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look left thrice after walk, walk and look left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump around left thrice after run around right, run around right and jump around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "jump and walk left twice, walk left twice after jump", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "run around right and jump opposite left, jump opposite left after run around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_RUN I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "run thrice and turn around left thrice, turn around left thrice after run thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "run around right and jump left thrice, jump left thrice after run around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "walk opposite right after look, look and walk opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "look around left thrice and jump opposite left twice, jump opposite left twice after look around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "jump opposite left twice and run left thrice, run left thrice after jump opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn opposite right thrice after jump opposite right thrice, jump opposite right thrice and turn opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_RUN I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "run twice and turn around right thrice, turn around right thrice after run twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "look left twice and walk right twice, walk right twice after look left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look left thrice after look right twice, look right twice and look left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "jump around right thrice and run around right thrice, run around right thrice after jump around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_LOOK I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look thrice and look around left, look around left after look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_RIGHT I_JUMP", "output": "jump right after run opposite left, run opposite left and jump right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "jump left and turn opposite left thrice, turn opposite left thrice after jump left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "walk opposite right after run around right, run around right and walk opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "run and walk left thrice, walk left thrice after run", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump around right thrice after walk right, walk right and jump around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "walk around left thrice and run around left twice, run around left twice after walk around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK", "output": "turn around right thrice and walk opposite left thrice, walk opposite left thrice after turn around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right twice after run twice, run twice and run opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "turn right and run around right thrice, run around right thrice after turn right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_RUN", "output": "run right after turn around left twice, turn around left twice and run right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "jump around right twice and walk around left twice, walk around left twice after jump around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_RUN", "output": "jump opposite right and run left, run left after jump opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_RIGHT", "output": "turn right after jump left, jump left and turn right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right twice after jump around right, jump around right and run opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_RUN I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "run twice and walk around left twice, walk around left twice after run twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT", "output": "turn opposite left after look left thrice, look left thrice and turn left twice, look left thrice and turn opposite left, turn left twice after look left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "walk around right and run around left thrice, run around left thrice after walk around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run around left thrice after jump opposite left, jump opposite left and run around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "turn around right twice and jump opposite right thrice, jump opposite right thrice after turn around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK", "output": "jump and look opposite right twice, look opposite right twice after jump", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "look right twice and run opposite right twice, run opposite right twice after look right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk around left after jump, jump and walk around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look right twice after look opposite left thrice, look opposite left thrice and look right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "walk right twice and jump opposite right, jump opposite right after walk right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_LOOK", "output": "look left after turn opposite right, turn right twice and look left, turn opposite right and look left, look left after turn right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "jump around left thrice and walk left twice, walk left twice after jump around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "walk opposite right twice after turn opposite right, turn opposite right and walk opposite right twice, turn right twice and walk opposite right twice, walk opposite right twice after turn right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "jump opposite left thrice and walk around left thrice, walk around left thrice after jump opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT", "output": "walk around right twice and turn right, turn right after walk around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT", "output": "turn right after run opposite right thrice, run opposite right thrice and turn right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_JUMP", "output": "look right twice and jump, jump after look right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look right thrice after jump opposite left twice, jump opposite left twice and look right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn left thrice and turn left, turn left after turn left thrice, turn left twice and turn opposite left, turn left twice and turn left twice, turn left twice after turn left twice, turn opposite left twice, turn opposite left after turn opposite left, turn left twice after turn opposite left, turn opposite left and turn opposite left, turn left thrice after turn left, turn opposite left and turn left twice, turn around left, turn opposite left after turn left twice, turn left and turn left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT", "output": "walk left twice and turn opposite right, turn right twice after walk left twice, walk left twice and turn right twice, turn opposite right after walk left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT", "output": "turn left after walk around right twice, walk around right twice and turn left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run left twice after jump opposite left, jump opposite left and run left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn opposite left thrice after walk right, walk right and turn opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK", "output": "look around right twice and look opposite right thrice, look opposite right thrice after look around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "jump opposite left twice after turn around left twice, turn around left twice and jump opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look around left after walk left thrice, walk left thrice and look around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk around right twice after walk around left, walk around left and walk around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "walk opposite left thrice and run opposite left, run opposite left after walk opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "look opposite right and jump opposite left, jump opposite left after look opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_RUN I_LOOK I_LOOK I_LOOK", "output": "look thrice after run opposite left, run opposite left and look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_WALK I_WALK I_TURN_LEFT I_TURN_LEFT", "output": "walk thrice and turn opposite left, turn left twice after walk thrice, walk thrice and turn left twice, turn opposite left after walk thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "look opposite left thrice after look, look and look opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look right twice after run right, run right and look right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "run around right after jump right thrice, jump right thrice and run around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT", "output": "turn right after jump left twice, jump left twice and turn right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_LOOK", "output": "walk right thrice and look opposite right, look opposite right after walk right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "run opposite left and walk around left thrice, walk around left thrice after run opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "turn around left twice and run opposite right twice, run opposite right twice after turn around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_RUN I_RUN I_RUN", "output": "run around left twice and run thrice, run thrice after run around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "walk left twice and run opposite left thrice, run opposite left thrice after walk left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk around right thrice after jump left twice, jump left twice and walk around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT", "output": "look opposite left and turn left, turn left after look opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_WALK", "output": "walk left after turn around left twice, turn around left twice and walk left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "look opposite right twice and jump around left twice, jump around left twice after look opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "turn around left thrice and look right twice, look right twice after turn around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk around right thrice after jump left thrice, jump left thrice and walk around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look around right twice after run left twice, run left twice and look around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk around right twice after walk opposite right, walk opposite right and walk around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_RUN I_RUN", "output": "jump opposite right twice and run twice, run twice after jump opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "jump opposite left thrice after walk around right, walk around right and jump opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "look opposite right twice and run right twice, run right twice after look opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_LOOK", "output": "look left after jump opposite right twice, jump opposite right twice and look left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "look left twice and run around right, run around right after look left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "walk around left and jump opposite right twice, jump opposite right twice after walk around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump around left thrice after look around right thrice, look around right thrice and jump around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_RUN I_RUN I_RUN", "output": "run thrice after turn around left twice, turn around left twice and run thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "look left and turn around left thrice, turn around left thrice after look left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "jump opposite right and look around right twice, look around right twice after jump opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK", "output": "look opposite right twice after look left, look left and look opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run around left thrice after look around right twice, look around right twice and run around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "run right and run around right thrice, run around right thrice after run right, run around right thrice and run right, run right after run around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_RUN", "output": "look around right thrice and run left, run left after look around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look right twice after walk around right thrice, walk around right thrice and look right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn opposite right thrice after run left twice, run left twice and turn opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "jump opposite right after walk around left, walk around left and jump opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "look opposite left twice after walk around right twice, walk around right twice and look opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "walk opposite right thrice after look opposite left, look opposite left and walk opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk left thrice after walk twice, walk twice and walk left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_RUN I_RUN", "output": "run twice after walk around right thrice, walk around right thrice and run twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "run and walk around left thrice, walk around left thrice after run", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around left twice after jump opposite left, jump opposite left and turn around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump around right thrice and jump around right thrice, jump around right thrice after jump around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_WALK I_WALK", "output": "jump right and walk twice, walk twice after jump right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "run opposite left thrice after turn opposite left, turn left twice and run opposite left thrice, turn opposite left and run opposite left thrice, run opposite left thrice after turn left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_LOOK I_LOOK", "output": "look twice after jump around right thrice, jump around right thrice and look twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn opposite left thrice after look around right thrice, look around right thrice and turn opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump around left thrice after turn opposite left twice, turn around left and jump around left thrice, jump around left thrice after turn around left, turn opposite left twice and jump around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_LOOK", "output": "look opposite right after jump left, jump left and look opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "look right thrice and jump opposite left thrice, jump opposite left thrice after look right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk left twice after look opposite right twice, look opposite right twice and walk left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump left thrice after look around left thrice, look around left thrice and jump left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "look around right twice and run opposite left thrice, run opposite left thrice after look around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "look around right twice and turn around left twice, turn around left twice after look around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump right after jump, jump and jump right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump right thrice after look opposite right, look opposite right and jump right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "look right thrice and jump right thrice, jump right thrice after look right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_WALK I_WALK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump around right twice after walk thrice, walk thrice and jump around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump right thrice after jump around left, jump around left and jump right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_RUN I_RUN I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "jump opposite right after run thrice, run thrice and jump opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "look opposite right and run left thrice, run left thrice after look opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_WALK I_WALK I_WALK I_WALK I_WALK", "output": "walk thrice and walk thrice, walk thrice after walk thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump left thrice after walk left twice, walk left twice and jump left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run around left twice after turn around right thrice, turn around right thrice and run around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_LOOK I_LOOK I_LOOK", "output": "look thrice after jump around left, jump around left and look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "walk opposite left twice and look opposite left twice, look opposite left twice after walk opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "walk opposite right thrice after jump opposite right, jump opposite right and walk opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right after run around right thrice, run around right thrice and run opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump left twice after jump thrice, jump thrice and jump left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look left thrice after run around right twice, run around right twice and look left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_LOOK", "output": "look right after run around right, run around right and look right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_WALK", "output": "turn right thrice and walk opposite left, walk opposite left after turn right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "look opposite left and run right thrice, run right thrice after look opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_JUMP I_JUMP", "output": "walk left thrice and jump twice, jump twice after walk left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_WALK I_WALK I_WALK", "output": "run left twice and walk thrice, walk thrice after run left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "look opposite right and look opposite left twice, look opposite left twice after look opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right thrice after turn left, turn left and run opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "jump thrice and run opposite right, run opposite right after jump thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around left after walk around right twice, walk around right twice and turn around left, turn opposite left twice after walk around right twice, walk around right twice and turn opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "run opposite left twice and jump opposite left twice, jump opposite left twice after run opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "turn around right twice and look left twice, look left twice after turn around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_RUN", "output": "run after look opposite right thrice, look opposite right thrice and run", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look around left after run around left, run around left and look around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_WALK", "output": "walk right after run around right thrice, run around right thrice and walk right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "turn around right thrice and run opposite right, run opposite right after turn around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_JUMP I_JUMP I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "run around right twice after jump thrice, jump thrice and run around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "run right and walk left thrice, walk left thrice after run right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "run opposite right twice and jump around right, jump around right after run opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "run opposite right twice and look opposite left, look opposite left after run opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn around right thrice and turn right thrice, turn around right thrice after turn right thrice, turn right thrice after turn around right thrice, turn right thrice and turn around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk around left after look left, look left and walk around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT", "output": "walk right twice and turn left, turn left after walk right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "look around right and jump left thrice, jump left thrice after look around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "jump left thrice and run opposite right twice, run opposite right twice after jump left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run around left after turn opposite left thrice, turn opposite left thrice and run around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look left thrice after run opposite right thrice, run opposite right thrice and look left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn opposite left twice after look opposite right twice, turn around left after look opposite right twice, look opposite right twice and turn opposite left twice, look opposite right twice and turn around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_RUN I_WALK I_WALK I_WALK", "output": "walk thrice after run opposite left, run opposite left and walk thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "jump and look around right, look around right after jump", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "jump opposite right thrice after jump left thrice, jump left thrice and jump opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_RUN", "output": "run left after turn around right thrice, turn around right thrice and run left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_LEFT I_WALK", "output": "walk opposite right twice and walk left, walk left after walk opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "turn right thrice and jump around right, jump around right after turn right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "walk left and turn right thrice, turn right thrice after walk left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "look right twice and jump around right thrice, jump around right thrice after look right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_WALK", "output": "walk opposite left after jump around right, jump around right and walk opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT", "output": "look around left twice and turn left, turn left after look around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look around right twice after look opposite left thrice, look opposite left thrice and look around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "walk right and jump opposite right thrice, jump opposite right thrice after walk right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "run around left thrice and walk around right twice, walk around right twice after run around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "walk around left thrice and jump opposite left thrice, jump opposite left thrice after walk around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn opposite left twice after turn around left thrice, turn around left thrice after turn opposite left twice, turn around left thrice after turn around left, turn around left and turn around left thrice, turn around left after turn around left thrice, turn around left thrice and turn around left, turn around left twice and turn around left twice, turn opposite left twice and turn around left thrice, turn around left thrice and turn opposite left twice, turn around left twice after turn around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look right thrice after run left, run left and look right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_LOOK I_LOOK", "output": "look left twice and look twice, look twice after look left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "walk opposite right thrice after run around left twice, run around left twice and walk opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "jump opposite right after walk around right, walk around right and jump opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "walk opposite left and turn opposite left twice, turn opposite left twice after walk opposite left, walk opposite left and turn around left, turn around left after walk opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "walk right twice and run opposite right thrice, run opposite right thrice after walk right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_LOOK", "output": "walk left thrice and look right, look right after walk left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "jump left and walk opposite right thrice, walk opposite right thrice after jump left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "look right twice and jump right thrice, jump right thrice after look right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "look opposite left and run around left thrice, run around left thrice after look opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_RUN I_RUN I_RUN", "output": "walk right twice and run thrice, run thrice after walk right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "run and look left twice, look left twice after run", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "jump opposite right twice and walk right twice, walk right twice after jump opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "walk opposite right and run around left twice, run around left twice after walk opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_LOOK I_LOOK", "output": "look opposite left thrice and look twice, look twice after look opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "walk around left twice and jump around left, jump around left after walk around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "look left thrice and jump around left twice, jump around left twice after look left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk around left after turn around left, turn opposite left twice and walk around left, walk around left after turn opposite left twice, turn around left and walk around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right twice after walk left, walk left and run opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT", "output": "turn around right thrice and turn left twice, turn around right thrice and turn opposite left, turn left twice after turn around right thrice, turn opposite left after turn around right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn right thrice after look around right thrice, look around right thrice and turn right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "run around right and look opposite left thrice, look opposite left thrice after run around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_WALK I_WALK I_WALK", "output": "walk right and walk thrice, walk thrice after walk right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_WALK", "output": "look right thrice and walk, walk after look right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "run opposite right thrice and jump around left twice, jump around left twice after run opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run left thrice after look right twice, look right twice and run left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "look around left and walk opposite right, walk opposite right after look around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump around left after walk right, walk right and jump around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "run right thrice and jump left thrice, jump left thrice after run right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "run left twice and look around left twice, look around left twice after run left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look left twice after look around left thrice, look around left thrice after look left twice, look around left thrice and look left twice, look left twice and look around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "look left thrice and run around left, run around left after look left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_RUN", "output": "run right after look opposite right, look opposite right and run right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn around right after look opposite right twice, look opposite right twice and turn around right, look opposite right twice and turn opposite right twice, turn opposite right twice after look opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "jump opposite left twice after look opposite right, look opposite right and jump opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "walk opposite right after run around left, run around left and walk opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_RUN I_RUN", "output": "run twice after look opposite right, look opposite right and run twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_LEFT I_LOOK", "output": "look left after run opposite right thrice, run opposite right thrice and look left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "look right and jump right twice, jump right twice after look right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "look opposite left thrice and jump opposite right thrice, jump opposite right thrice after look opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "look opposite left and run around right, run around right after look opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around left and turn opposite left thrice, turn opposite left thrice and turn around left, turn left twice after turn around left twice, turn around left twice and turn opposite left, turn opposite left twice and turn opposite left thrice, turn opposite left after turn around left twice, turn around left twice after turn opposite left, turn opposite left twice after turn opposite left thrice, turn opposite left thrice and turn opposite left twice, turn around left after turn opposite left thrice, turn opposite left thrice after turn around left, turn around left twice after turn left twice, turn around left twice and turn left twice, turn left twice and turn around left twice, turn opposite left thrice after turn opposite left twice, turn opposite left and turn around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_LOOK I_LOOK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "look thrice and walk left thrice, walk left thrice after look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around left twice after jump opposite left twice, jump opposite left twice and turn around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK", "output": "turn around left thrice and walk opposite right thrice, walk opposite right thrice after turn around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_LOOK I_LOOK", "output": "look twice after walk left thrice, walk left thrice and look twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_RUN", "output": "walk around left twice and run left, run left after walk around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "look opposite right and run around left, run around left after look opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk left twice after turn around left twice, turn around left twice and walk left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around left twice after jump left twice, jump left twice and turn around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look left twice after run opposite right twice, run opposite right twice and look left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_WALK I_WALK I_WALK", "output": "walk thrice after look opposite left twice, look opposite left twice and walk thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_JUMP", "output": "walk opposite right and jump right, jump right after walk opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run opposite right after walk opposite left, walk opposite left and run opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look right thrice after jump around right, jump around right and look right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "walk opposite right and jump opposite left thrice, jump opposite left thrice after walk opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look around right twice after turn left thrice, turn left thrice and look around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_TURN_LEFT I_LOOK", "output": "look left after run, run and look left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look around right after run around left thrice, run around left thrice and look around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT", "output": "walk opposite left thrice and turn opposite right, turn right twice after walk opposite left thrice, turn opposite right after walk opposite left thrice, walk opposite left thrice and turn right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP", "output": "walk right and jump around left thrice, jump around left thrice after walk right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "look opposite right thrice and turn around right twice, turn around right twice after look opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "run around left twice and turn around left twice, turn around left twice after run around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "walk right twice and turn around right, walk right twice and turn opposite right twice, turn opposite right twice after walk right twice, turn around right after walk right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn left thrice after run opposite left twice, run opposite left twice and turn left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "run around right twice after turn around right twice, turn around right twice and run around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_RUN", "output": "run after walk right, walk right and run", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_WALK", "output": "walk opposite left after look around right thrice, look around right thrice and walk opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "look opposite left after run around left thrice, run around left thrice and look opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run left thrice after jump opposite left thrice, jump opposite left thrice and run left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "turn around left thrice and walk right twice, walk right twice after turn around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK", "output": "jump around right and look opposite right twice, look opposite right twice after jump around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_JUMP I_JUMP I_JUMP", "output": "turn around left and jump thrice, jump thrice after turn opposite left twice, jump thrice after turn around left, turn opposite left twice and jump thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "jump opposite left twice after run around left twice, run around left twice and jump opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "turn right twice and run around right twice, run around right twice after turn opposite right, turn opposite right and run around right twice, run around right twice after turn right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "jump right thrice and walk around right thrice, walk around right thrice after jump right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_LOOK", "output": "look after jump around left twice, jump around left twice and look", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "jump around right and look around right, look around right after jump around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look around right after jump around left thrice, jump around left thrice and look around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look right twice after walk around left, walk around left and look right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "look around right and jump opposite left, jump opposite left after look around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "jump right thrice and walk around right twice, walk around right twice after jump right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk around left after jump opposite left, jump opposite left and walk around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk around right thrice after walk right, walk right and walk around right thrice, walk right after walk around right thrice, walk around right thrice and walk right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run around left twice after turn opposite right, run around left twice after turn right twice, turn opposite right and run around left twice, turn right twice and run around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_JUMP I_JUMP I_TURN_LEFT I_RUN", "output": "jump thrice and run left, run left after jump thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "turn opposite right and jump right twice, jump right twice after turn right twice, turn right twice and jump right twice, jump right twice after turn opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk around right after run around left twice, run around left twice and walk around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_WALK I_WALK I_WALK", "output": "walk around right twice and walk thrice, walk thrice after walk around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look right thrice after walk around left thrice, walk around left thrice and look right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look right thrice after jump left twice, jump left twice and look right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "walk around right after jump opposite left twice, jump opposite left twice and walk around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_LEFT I_LOOK", "output": "jump right and look left, look left after jump right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_RUN I_JUMP I_JUMP I_JUMP", "output": "jump thrice after run opposite left, run opposite left and jump thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "turn opposite left twice and walk around right twice, turn around left and walk around right twice, walk around right twice after turn opposite left twice, walk around right twice after turn around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_WALK", "output": "look left thrice and walk, walk after look left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "jump opposite right thrice and look opposite left thrice, look opposite left thrice after jump opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "look opposite right twice and jump opposite left, jump opposite left after look opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn left thrice after run opposite right thrice, run opposite right thrice and turn left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn opposite right thrice after walk right twice, walk right twice and turn opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_LOOK", "output": "look left after walk around left twice, walk around left twice and look left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_RIGHT", "output": "turn around left twice and turn right, turn right after turn around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_JUMP I_JUMP", "output": "jump opposite right thrice and jump twice, jump twice after jump opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN", "output": "run around right twice and run opposite right thrice, run opposite right thrice after run around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn around right after jump around left, turn opposite right twice after jump around left, jump around left and turn opposite right twice, jump around left and turn around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_LOOK", "output": "look opposite left and look, look after look opposite left, look twice after turn left twice, turn opposite left and look twice, turn left twice and look twice, look twice after turn opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_JUMP", "output": "look opposite left twice and jump, jump after look opposite left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP", "output": "look right and jump opposite left twice, jump opposite left twice after look right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_LOOK", "output": "walk opposite right thrice and look right, look right after walk opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around left thrice after run opposite right thrice, run opposite right thrice and turn around left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_WALK", "output": "walk after jump around right, jump around right and walk", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look around left twice after run right twice, run right twice and look around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_JUMP I_JUMP", "output": "jump twice after walk around right twice, walk around right twice and jump twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_LOOK I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "look thrice and turn opposite right twice, turn opposite right twice after look thrice, look thrice and turn around right, turn around right after look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP", "output": "jump right twice after run opposite right, run opposite right and jump right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "run opposite left thrice after turn left thrice, turn left thrice and run opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_JUMP", "output": "jump after walk opposite right, walk opposite right and jump", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK", "output": "look and walk right twice, walk right twice after look", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_RUN I_RUN I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "run thrice and walk left thrice, walk left thrice after run thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_RUN I_RUN I_RUN I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "run thrice and turn around right thrice, turn around right thrice after run thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_RUN", "output": "run after run around left twice, run around left twice and run", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_JUMP", "output": "jump right thrice and jump left, jump left after jump right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_LOOK I_LOOK I_LOOK", "output": "jump around right and look thrice, look thrice after jump around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN", "output": "run left twice after jump around right thrice, jump around right thrice and run left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "jump right twice and run opposite left twice, run opposite left twice after jump right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "look opposite left after jump opposite left thrice, jump opposite left thrice and look opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_LOOK I_LOOK I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look thrice and look around right, look around right after look thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_JUMP I_TURN_LEFT I_TURN_LEFT I_WALK I_TURN_LEFT I_TURN_LEFT I_WALK", "output": "jump opposite right thrice and walk opposite left twice, walk opposite left twice after jump opposite right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK", "output": "walk around left twice after walk around right thrice, walk around right thrice and walk around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_JUMP I_JUMP I_JUMP", "output": "walk around right twice and jump thrice, jump thrice after walk around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT I_TURN_LEFT", "output": "turn around left twice after walk around right twice, walk around right twice and turn around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "run opposite left after jump around left, jump around left and run opposite left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_JUMP", "output": "jump opposite right after run left twice, run left twice and jump opposite right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look around right twice after run left thrice, run left thrice and look around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_RUN", "output": "turn around right twice and run right twice, run right twice after turn around right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "run around left twice and look opposite left, look opposite left after run around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT", "output": "turn left twice after run around left twice, run around left twice and turn opposite left, run around left twice and turn left twice, turn opposite left after run around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN I_TURN_LEFT I_TURN_LEFT I_RUN", "output": "look around left and run opposite left thrice, run opposite left thrice after look around left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_LEFT I_TURN_LEFT I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK", "output": "jump opposite left thrice and look opposite right twice, look opposite right twice after jump opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_JUMP I_TURN_RIGHT I_JUMP I_TURN_LEFT I_WALK", "output": "walk left after jump right twice, jump right twice and walk left", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_LEFT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_TURN_RIGHT I_LOOK", "output": "look opposite right twice after walk around left, walk around left and look opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_RIGHT I_TURN_RIGHT I_RUN I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "run opposite right twice and look around left, look around left after run opposite right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_RIGHT I_WALK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK", "output": "look around left twice after walk around right twice, walk around right twice and look around left twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_LEFT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "look around right after look around left thrice, look around left thrice and look around right", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "turn right twice and look opposite left thrice, turn opposite right and look opposite left thrice, look opposite left thrice after turn opposite right, look opposite left thrice after turn right twice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK I_TURN_LEFT I_TURN_LEFT I_LOOK", "output": "look opposite left thrice after look right thrice, look right thrice and look opposite left thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_WALK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK I_TURN_RIGHT I_LOOK", "output": "walk and look around right twice, look around right twice after walk", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_JUMP I_TURN_RIGHT I_TURN_RIGHT I_TURN_RIGHT", "output": "turn right thrice after jump, jump and turn right thrice", "category": "Code to Text 404.json"}, {"instruction": "Given a sequence of actions to navigate an agent in its environment, provide the correct command in a limited form of natural language that matches the sequence of actions when executed. Commands are lowercase and encapsulate the logic of the sequence of actions. Actions are individual steps that serve as the building blocks for a command. There are only six actions: 'I_LOOK', 'I_WALK', 'I_RUN', 'I_JUMP', 'I_TURN_LEFT', and 'I_TURN_RIGHT'. These actions respectively align with the commands 'look', 'walk', 'run', 'jump', 'turn left', and 'turn right'. For commands, 'left' and 'right' are used to denote the direction of an action. opposite turns the agent backward in the specified direction. The word 'around' makes the agent execute an action while turning around in the specified direction. The word 'and' means to execute the next scope of the command following the previous scope of the command. The word 'after' signifies to execute the previous scope of the command following the next scope of the command. The words 'twice' and 'thrice' trigger repetition of a command that they scope over two times or three times, respectively. Actions and commands do not have quotations in the input and output.", "input": "I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_TURN_RIGHT I_TURN_RIGHT I_WALK I_WALK I_WALK", "output": "walk twice after walk opposite right thrice, walk opposite right thrice and walk twice", "category": "Code to Text 404.json"}]