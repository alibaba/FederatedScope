[{"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If a dog is sitting in one picture and in the other picture ta dog is lying down and asleep.", "output": "#1 return one picture \n#2 return dog  in  #1 \n#3 return if  #2 is sitting \n#4 return the  other picture \n#5 return dog  in  #4 \n#6 return if  #5 is lying down \n#7 return if  #5 is asleep \n#8 return if  both  #6 and #7 are true \n#9 return if  both  #3 and #8 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If one of the photos shows a wooden bookcase with at most three shelves.", "output": "#1 return bookcase \n#2 return #1 that is wooden \n#3 return shelves of #2 \n#4 return number of  #3 for each  #2 \n#5 return #2 where  #3 is at most three \n#6 return if  #5 is in  one photos", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many from the census were in Ungheni and Orhei?", "output": "#1 return the  census \n#2 return those in  Ungheni of #1 \n#3 return those in  Orhei of #1 \n#4 return number of  #2 \n#5 return number of  #3 \n#6 return the  sum of #4 and  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If an image shows a clear glass bottle standing slightly ahead of two green glass bottles that flank it.", "output": "#1 return bottles \n#2 return #1 that are glass  \n#3 return #2 that is clear \n#4 return #2 that are green \n#5 return #4 that flank #2 \n#6 return #4 that #2 is standing slightly ahead of \n#7 return images \n#8 return number of  #6 for each  #7 \n#9 return #7 where  #8 is equal to  two \n#10 return number of  #9 \n#11 return if  #10 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which player had the shortest touchdown-scoring play of the game?", "output": "#1 return touchdown-scoring plays of the  game \n#2 return the  shortest of #1 \n#3 return player of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color cube is in the front?", "output": "#1 return cube \n#2 return #1 that  is  in front \n#3 return color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is most represented?", "output": "#1 return objects \n#2 return colors of #1 \n#3 return number of  #1 for each #2 \n#4 return #2 where #3 is highest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in at least one image there is a black eared boar with there body facing right while it's snout is facing forward left.", "output": "#1 return boar \n#2 return #1 that is  black eared \n#3 return body of  #2 \n#4 return snout of  #2 \n#5 return #2 where #3 is  facing  right \n#6 return #2 where #4 is  facing  forward left \n#7 return #2 in  both  #5 and #6 \n#8 return if  #7 is  in  at least one image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Where did the politician appointed to their position by Paul von Hindenburg die?", "output": "#1 return Paul von Hindenburg \n#2 return appointed politician of #1 \n#3 return where did #2 die", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what flights are there from boston to denver on monday morning ", "output": "#1 return flights \n#2 return #1 from  boston \n#3 return #2 to denver \n#4 return #3 on  monday \n#5 return #4 morning", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the type of currency I would need to take to the country whose coat of arms is the United Mexican States seal?", "output": "#1 return countries \n#2 return coat of arms of  #1 \n#3 return #1 where #2 is the  United Mexican States seal \n#4 return currency of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If one image contains a spotted skunk with its face down and its tail somewhat curled, and the other image contains one skunk with bold white stripe, which is standing on all fours.", "output": "#1 return one image  \n#2 return skunk  in  #1 \n#3 return #2 that is spotted \n#4 return face of #3 \n#5 return #3 where  #4 is down \n#6 return tail of #5 \n#7 return if  #6 is somewhat curled \n#8 return the  other image  \n#9 return skunks in  #8 \n#10 return #9 that are standing on all fours \n#11 return stripe \n#12 return #11 that is bold \n#13 return #12 that is white \n#14 return #10 with #13 \n#15 return number of  #14 \n#16 return if  #15 is equal to  one \n#17 return if  both  #7 and #16 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are all the balls made of rubber?", "output": "#1 return balls \n#2 return #1 that are made of rubber \n#3 return number of  #1 \n#4 return number of  #2 \n#5 return if #3 is equal to #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the height of mount mckinley ", "output": "#1 return height of  mount mckinley", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Compute the number of products with a price larger than or equal to $180.", "output": "#1 return products \n#2 return prices of  #1 \n#3 return #1 where #2 is  at least $ 180 \n#4 return number of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many years passed between the region being annexed by the Kingdom of Prusia and it becoming part of the German Empire?", "output": "#1 return the  region being annexed by the   Kingdom of Prusia \n#2 return the  region becoming part of the   German Empire \n#3 return year of #1 \n#4 return year of #2 \n#5 return the  difference of #4 and  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If one image shows a pyramid shape formed by three golf balls, and the other image contains no more than one golf ball.", "output": "#1 return one  image \n#2 return golf balls in  #1 \n#3 return #2 that formed pyramid shape \n#4 return number of #3 \n#5 return If #4 is  equal to three \n#6 return other image \n#7 return golf balls in  #6 \n#8 return number of #7 \n#9 return If #8 is  at most one  \n#10 return If both  #5 and #9 are  true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in at least one image there is on blue lit jellyfish whose head cap is straight up and down.", "output": "#1 return images \n#2 return jellyfish in  #1 \n#3 return #2 that are blue \n#4 return #3 that are lit \n#5 return head cap of #4 \n#6 return #4 where  #5 is straight up and down \n#7 return number of  #6 for each  #1 \n#8 return #1 where  #7 is equal to  one \n#9 return number of  #8 \n#10 return if  #9 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: A list of the top 5 countries by number of invoices. List country name and number of invoices.", "output": "#1 return countries \n#2 return invoices  of   #1 \n#3 return number of  #2 for each #1 \n#4 return the  top 5 highest of   #3 \n#5 return #1 where #3 is equal to any of   #4 \n#6 return names of   #5 \n#7 return #6 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What political system is used in the government where the Government of Iran is located?", "output": "#1 return the  government of Iran \n#2 return where is #1 located \n#3 return government of #2 \n#4 return political system of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many days after an agreement was signed for the delivery of 100 AMX-13 tanks was a $80 million deal was agreed?", "output": "#1 return an agreement was  signed for the  delivery of 100 AMX-13 tanks \n#2 return a $ 80 million deal was  agreed \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return difference of #4 and  #3 in  days", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If one door frame is white and the other is black.", "output": "#1 return one door frame \n#2 return the  other door frame \n#3 return if  #1 is white \n#4 return if  #2 is black \n#5 return if  both  #3 and #4 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If more then two train cars are being shown in the right side image", "output": "#1 return right image \n#2 return train cars of #1 \n#3 return the  number of  #2 \n#4 return if  #3 is higher than two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many Dutch died in 1962 at the hands of the Wu-lao-wan before the embargo was put into place?", "output": "#1 return Dutch \n#2 return #1 that died in  1962 \n#3 return #2 at the  hands of the   Wu-lao-wan \n#4 return #3 before the  embargo was  put into place \n#5 return number of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Find the number of investors in total.", "output": "#1 return investors \n#2 return number of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What shape is the large object that's the same color as the cube?", "output": "#1 return cube \n#2 return large object \n#3 return color of #1 \n#4 return colors of #2 \n#5 return #2 where #3 is  the same as #4 \n#6 return shape of #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What shape is the second largest object?", "output": "#1 return objects \n#2 return second largest of #1 \n#3 return shape of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the total number of degrees granted after 2000 for each Orange county campus?", "output": "#1 return campuses \n#2 return #1 in Orange county \n#3 return #2 after 2000 \n#4 return degrees granted of #3 \n#5 return number of  #4 for each #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in at least one image there is a single horse pulling a cart left.", "output": "#1 return horse \n#2 return a  cart \n#3 return #1 pulling #2 to  the  left \n#4 return if  #3 is in  at least one image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there is at least two wolves in the left image.", "output": "#1 return left image \n#2 return wolves of #1 \n#3 return the  number of  #2 \n#4 return if  #3 is at least two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many field goals did John Kasay make?", "output": "#1 return John Kasay \n#2 return field goals of #1 \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the shape of the object behind the blue sphere?", "output": "#1 return objects \n#2 return sphere \n#3 return #2 that is blue \n#4 return #1 that is behind #3 \n#5 return shape of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the only small metallic square?", "output": "#1 return squares \n#2 return #1 that  are small \n#3 return #1 that  are metallic \n#4 return #1 in both #2 and  #3 \n#5 return the color of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are the two green objects the same shape?", "output": "#1 return green objects \n#2 return shapes of #1 \n#3 return are #2 both the  same", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: When did  Naresuan of Siam die?", "output": "#1 return Naresuan of Siam did die \n#2 return when  was  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If each image contains one panda grasping some kind of stalk, and the left image features an open-mouthed camera-facing panda chewing on a green stalk.", "output": "#1 return pandas \n#2 return stalks \n#3 return #1 that are grasping #2 \n#4 return images \n#5 return number of  #3 for each  #4 \n#6 return #4 where  #5 is equal to  one \n#7 return number of  #4 \n#8 return number of  #6 \n#9 return if  #7 is equal to  #8 \n#10 return left image  \n#11 return #1 that is in  #10 \n#12 return #11 that is open-mouthed \n#13 return #12 that is camera-facing \n#14 return #2 that is green \n#15 return if  #13 is chewing on #14 \n#16 return if  both  #9 and #15 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What event happened later, Jabal Shammar being annexed or the preliminary attack on Taif?", "output": "#1 return Jabal Shammar being annexed \n#2 return the  preliminary attack on Taif \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is highest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the IDs of customers who have \"Diana\" in part of their names?", "output": "#1 return customers \n#2 return #1 who  have  Diana in part of  their names \n#3 return the  IDs of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: the mississippi creates boundaries for what state?", "output": "#1 return mississippi \n#2 return states \n#3 return #2 where  #1 creates boundaries", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many dollars would 3 males earn combined if they all earned the median income?", "output": "#1 return median incomes \n#2 return #1 of males \n#3 return multiplication of #2 and  3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What campuses opened between 1935 and 1939?", "output": "#1 return campuses \n#2 return #1 that  opened between 1935 and  1939", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the details for statements with the details 'Private Project', and what are the names of the corresponding documents?", "output": "#1 return statements \n#2 return details for #1 \n#3 return #1 where #2 is  'Private Project \n#4 return details of  #3 \n#5 return corresponding documents of  #3 \n#6 return #4 ,  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what was the date of when brazil was found?", "output": "#1 return brazil was  found \n#2 return when  was  #1 \n#3 return date of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many rubber objects are behind metal objects?", "output": "#1 return rubber objects \n#2 return metal objects \n#3 return #1 that  are behind #2 \n#4 return number of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many deaths were caused by cancer and cardiovascular disease combined?", "output": "#1 return deaths \n#2 return #1 caused by cancer \n#3 return #1 caused by cardiovascular disease \n#4 return number of  #2 \n#5 return number of  #3 \n#6 return sum of #4 and  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: The red cylinder is what material?", "output": "#1 return cylinders \n#2 return #1 that  are red \n#3 return the  material of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: i'm looking for a flight leaving denver traveling to atlanta and stopping at pittsburgh is this possible ", "output": "#1 return flights \n#2 return #1 leaving denver \n#3 return #2 traveling to atlanta \n#4 return #3 stopping in pittsburgh", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: when was the first shrek movie released?", "output": "#1 return shrek movies \n#2 return first of #1 \n#3 return when  was  #2 released", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are there more Greek speakers in Greece or speakers of Macedonian?", "output": "#1 return Greece \n#2 return Greek speakers of #1 \n#3 return Macedonian speakers of #1 \n#4 return number of  #2 \n#5 return number of  #3 \n#6 return which is highest of #4 ,  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: In which quarter was the Real GDP highest, Q1 2018 or Q2 2018?", "output": "#1 return Real GDP \n#2 return #1 In Q1 2018 \n#3 return #1 In Q2 2018 \n#4 return which is highest of #2 ,  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are four panes of glass in the sliding glass doors.", "output": "#1 return the  sliding glass doors \n#2 return panes of  glass \n#3 return #2 in  #1 \n#4 return number of #3 \n#5 return if  #4 is  equal to four", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What shape are the small purple objects?", "output": "#1 return small objects \n#2 return #1 that are purple \n#3 return shape of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many purple cubes and green balls are there?", "output": "#1 return cubes \n#2 return #1 that  is  purple \n#3 return balls \n#4 return #3 that  is  green \n#5 return number of  #2 \n#6 return number of  #4 \n#7 return sum of #5 and #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If left image contains more than one dog, with at least one wearing a collar.", "output": "#1 return left image \n#2 return dogs of #1 \n#3 return collar \n#4 return #2 wearing #3 \n#5 return the  number of  #2 \n#6 return the  number of  #4 \n#7 return if  #5 is higher than one \n#8 return if  #6 is at least one \n#9 return if  both  #7 and #8 is true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: i need to go from boston to atlanta and back in the same day find me the earliest flight from boston ", "output": "#1 return flights \n#2 return #1 from  boston \n#3 return #2 to atlanta \n#4 return #3 and  back the same day \n#5 return the earliest of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many touchdowns did Luck throw for?", "output": "#1 return Luck \n#2 return touchdown throws of #1 \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: i would like a flight on continental airlines leaving from boston making a stop in denver and arriving in san francisco ", "output": "#1 return flight \n#2 return #1 on continental airlines \n#3 return #2 from boston \n#4 return #3 to  san francisco \n#5 return #4 that  stops in denver", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If two puppies are atanding next to each other on the grass looking upward", "output": "#1 return puppies \n#2 return #1 atanding next to  each other \n#3 return the  grass \n#4 return #2 on #3 \n#5 return #4 that are looking upward \n#6 return number of  #5 \n#7 return if  #6 is equal to  two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the first names of all students in course ACCT-211?", "output": "#1 return students \n#2 return courses of  #1 \n#3 return #1 where #2 is  ACCT-211 \n#4 return first names of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Find all the building full names containing the word \"court\".", "output": "#1 return buildings \n#2 return names of  #1 \n#3 return #2 containing the word court", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What movies with the tvrage_id 8069 did Robert Pattinson play in?", "output": "#1 return Robert Pattinson \n#2 return movies of #1 \n#3 return tvrage_id of #2 \n#4 return #2 where #3 is 8069", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which player threw the last touchdown run of the game?", "output": "#1 return touchdown runs in  the  game \n#2 return the  last of #1 \n#3 return player of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many years did the Beiyang Period last?", "output": "#1 return the  Beiyang Period \n#2 return years of #1 \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many objects to the right of the green sphere are matte?", "output": "#1 return objects \n#2 return green sphere \n#3 return #1 to  the  right of #2 \n#4 return #3 that  are matte \n#5 return number of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the first names, office locations, and departments of all instructors, and also what are the descriptions of the courses they teach?", "output": "#1 return instructors \n#2 return first names of  #1 \n#3 return offices of  #1 \n#4 return locations of  #3 \n#5 return departments of  #1 \n#6 return courses of  #1 \n#7 return descriptions of  #6 \n#8 return #2 ,  #4 ,   #5 , #7", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: give me the one way flights from pittsburgh to boston ", "output": "#1 return flights \n#2 return #1 that  are one way \n#3 return #2 from  pittsburgh \n#4 return #3 to boston", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the appelations for wines produced after 2008 but not in the Central Coast area?", "output": "#1 return wines \n#2 return #1 produced after 2008 \n#3 return areas of #1 \n#4 return #1 where #3 is  not Central Coast \n#5 return appelations of both #2 and #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Count the number of templates.", "output": "#1 return templates \n#2 return number of  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the average price range of five star hotels that allow pets?", "output": "#1 return five star hotels \n#2 return #1 that  allow pets \n#3 return price range of  #2 \n#4 return average of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What thriller movie did Tupac star in?", "output": "#1 return Tupac \n#2 return movies of #1 \n#3 return #2 that is a thriller movie", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many years did Anthony Turnage play Blood on the Floor?", "output": "#1 return Anthony Turnage did play Blood on the  Floor \n#2 return years of #1 \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the largest city in minnesota by population ", "output": "#1 return cities \n#2 return #1 in  minnesota \n#3 return the  largest of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many more tanks than aircraft were sold to Bahrain after the Gulf War?", "output": "#1 return tanks \n#2 return aircraft \n#3 return #1 that were sold to Bahrain \n#4 return #2 that were sold to Bahrain \n#5 return #3 after the  Gulf War \n#6 return #4 after the  Gulf War \n#7 return number of  #5 \n#8 return number of  #6 \n#9 return difference of #7 and  #8", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If at least one dog is biting someone.", "output": "#1 return dogs \n#2 return #1 that are biting someone \n#3 return number of  #2 \n#4 return if  #3 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: There are two brown cylinders. What shape is the large object directly between them?", "output": "#1 return brown cylinders \n#2 return large object \n#3 return #2 between #1 \n#4 return shape of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the name and salary of the employee with the id 242518965?", "output": "#1 return employees \n#2 return ids of  #1 \n#3 return #1 where #2 is  242518965 \n#4 return name of  #3 \n#5 return salary of  #3 \n#6 return #4 ,  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If all dog sled teams are heading diagonally to the left with evergreen trees in the background.", "output": "#1 return dog sled teams \n#2 return #1 that are heading diagonally to  the  left \n#3 return trees \n#4 return #3 that are evergreen \n#5 return background \n#6 return #4 that is in  #5 \n#7 return #2 that are with #6 \n#8 return number of  #1 \n#9 return number of  #7 \n#10 return if  #8 is equal to  #9", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what do you know about car rental in denver ", "output": "#1 return car rentals \n#2 return #1 in denver", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what color is the object closest to the left", "output": "#1 return object \n#2 return #1 that  is  closest to the left \n#3 return color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Where is Bora Bora, the location of the film \"The Pagan\"?", "output": "#1 return Bora  Bora \n#2 return where is #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the number of students playing as a goalie?", "output": "#1 return students \n#2 return #1 playing as goalie \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what are the fares for flights serving a meal from boston to pittsburgh before noon on thursday ", "output": "#1 return flights \n#2 return #1 from  boston \n#3 return #2 to pittsburgh \n#4 return #3 before noon \n#5 return #4 on  thursday \n#6 return #5 that  serve a meal \n#7 return fares for #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the distance from la guardia to new york's downtown ", "output": "#1 return distance \n#2 return #1 from  la guardia \n#3 return #2 to downtown new york", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: flights from cincinnati to dallas departing after 718am ", "output": "#1 return flights \n#2 return #1 from  cincinnati \n#3 return #2 to dallas \n#4 return #3 that  are departing after 718am", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Return the name of the team and the acc during the regular season for the school that was founded the earliest.", "output": "#1 return schools \n#2 return #1 that  was founded earliest \n#3 return team of  #2 \n#4 return name of  #3 \n#5 return acc of  #3 \n#6 return #5 during the  regular season \n#7 return #4 ,  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the details of the shops that can be accessed by walk?", "output": "#1 return shops \n#2 return #1 that  can be accessed by walk \n#3 return details of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which employees have the role with code \"HR\"? Find their names.", "output": "#1 return employees \n#2 return roles of  #1 \n#3 return codes of  #2 \n#4 return #1 where #3 is  HR \n#5 return names of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Show the most common college of authors of submissions.", "output": "#1 return submissions \n#2 return authors of #1 \n#3 return colleges of #2 \n#4 return number of #2 for each #3 \n#5 return #3 where #4 is  the highest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are two needles and one spoon.", "output": "#1 return needles \n#2 return spoon \n#3 return the  number of  #1 \n#4 return the  number of  #2 \n#5 return if  #3 is equal to  two \n#6 return if  #4 is equal to  one \n#7 return if  both  #5 and #6 is true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the shape of the gray item between a cube and a sphere?", "output": "#1 return items \n#2 return #1 that  are gray \n#3 return cubes \n#4 return the  sphere \n#5 return #2 that  are between #4 and any  #3 \n#6 return the  shape of #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If a woman is on the left of an image, next to a dark afghan hound that stands in profile facing leftward.", "output": "#1 return woman \n#2 return #1 on the  left \n#3 return afghan hound \n#4 return #3 that is dark \n#5 return #4 that stands in  profile \n#6 return #5 facing leftward \n#7 return #2 next to  #6 \n#8 return if  #7 is in  an image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If each image contains exactly three foreground zebra that are close together in similar poses.", "output": "#1 return zebras \n#2 return #1 in  the  foreground \n#3 return #2 that are  close together \n#4 return poses of  #3 \n#5 return #3 where #4 are  similar \n#6 return images of  #5 \n#7 return number of #5 for each #6 \n#8 return #6 where #7 is  equal to three \n#9 return number of #8 \n#10 return images \n#11 return number of #10 \n#12 return if  #9 is  equal to #11", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If at least one of the dogs is near a human.", "output": "#1 return dogs \n#2 return humans \n#3 return #1 near #2 \n#4 return number of  #3 \n#5 return if  #4 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the left side image has two different types of animals", "output": "#1 return the  left side image \n#2 return different types of animals in  #1 \n#3 return number of  #2 \n#4 return if  #3 is equal to  two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many different shaped objects are shown?", "output": "#1 return objects \n#2 return #1 that  are shown \n#3 return #2 that  are different shaped \n#4 return number of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there is at least one [basil] leaf on the pizza on the right.", "output": "#1 return pizza \n#2 return #1 on the  right \n#3 return basil leaves \n#4 return #3 on #2 \n#5 return number of  #4 \n#6 return if  #5 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what shape is the smallestt object", "output": "#1 return objects \n#2 return size of #1 \n#3 return #1 where #2 is the  lowest \n#4 return shape of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the material of the smallestt item?", "output": "#1 return smallestt item \n#2 return material of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: In what country is the body of water that runs under Old London Bridge located?", "output": "#1 return Old London Bridge \n#2 return body of water under of  #1 \n#3 return country of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: are the cubes in a straight line?", "output": "#1 return the  cubes \n#2 return if #1 are in  a straight line", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Is there an object that is blue anywhere behind the purple object?", "output": "#1 return purple object  \n#2 return blue object  behind #1 \n#3 return Is there  any  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the products with the maximum page size eqal to A4 or a pages per minute color less than 5?", "output": "#1 return products \n#2 return maximum page sizes of #1 \n#3 return #1 where #2 is  A4 \n#4 return pages per minute color of #1 \n#5 return #1 where #4 is  lower than 5 \n#6 return #3 or  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If two hunters pose with a weapon behind a downed water buffalo in the left image.", "output": "#1 return the  left image \n#2 return hunters in  #1 \n#3 return weapon in  #1 \n#4 return #2 that pose with #3 \n#5 return water buffalo in  #1 \n#6 return #5 that is downed \n#7 return #4 behind #6 \n#8 return number of  #7 \n#9 return if  #8 is equal to  two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is olivers name of hanah montana?", "output": "#1 return hanah montana \n#2 return oliver of #1 \n#3 return name of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: show me all the cheapest fares from new york to miami leaving on tuesday ", "output": "#1 return fares \n#2 return #1 from  new york \n#3 return #2 to miami \n#4 return #3 leaving on  tuesday \n#5 return cheapness of #4 \n#6 return #4 where #5 is  cheapest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what rivers form niagara falls?", "output": "#1 return niagara falls \n#2 return rivers that form #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what did eminem attend?", "output": "#1 return eminem \n#2 return what did  #1 attend", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: how many metallic objects are there", "output": "#1 return objects \n#2 return #1 that  are metallic \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many touchdowns did the Panthers allow in the second half?", "output": "#1 return the  Panthers \n#2 return touchdowns #1 did allow \n#3 return #2 in  the  second half \n#4 return number of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If each image shows a pair of knee wraps.", "output": "#1 return pair of knee wraps \n#2 return images of #1 \n#3 return images \n#4 return number of  #2 \n#5 return number of  #3 \n#6 return if  #4 is equal to  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are there more cubes than cylinders? ", "output": "#1 return the  cubes \n#2 return the  cylinders \n#3 return the  number of  #1 \n#4 return the  number of  #2 \n#5 return is  #3 higher than #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Is there an object that is the same color and material as the left most object?", "output": "#1 return objects \n#2 return the  left most #1 \n#3 return colors of #2 \n#4 return materials of #2 \n#5 return #1 besides #2 \n#6 return colors of #5 \n#7 return materials of #5 \n#8 return #5 where  #6 is  the  same as #3 \n#9 return #5 where  #7 Is the  same as #4 \n#10 return #5 in  both  #8 and #9 \n#11 return if  there  are any #10", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the names of artist whose exhibitions draw over 200 attendees on average?", "output": "#1 return artists \n#2 return exhibitions of  #1 \n#3 return attendees of  #2 \n#4 return number of  #3 for each  #1 \n#5 return average of  #4 \n#6 return #1 where #5 is  higher than 200 \n#7 return names of  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many artists are male and how many are female?", "output": "#1 return artists \n#2 return #1 that  are  male \n#3 return number of #2 \n#4 return #1 that  are  female \n#5 return number of #4 \n#6 return #3 ,   #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in the image to the right, three parts of a flute are held horizontally.", "output": "#1 return the  image to  the right \n#2 return parts of a  flute in  #1 \n#3 return #2 that are held horizontally \n#4 return number of  #3 \n#5 return if  #4 is equal to  three", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: The larger light blue object and the small yellow object share what shape?", "output": "#1 return object  \n#2 return #1 that is  large \n#3 return #2 that is  light blue \n#4 return #1 that is  small \n#5 return #4 that is  yellow \n#6 return shape of both #3 and  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Out of all the objects shown in the photo how many are not metal?", "output": "#1 return objects \n#2 return #1 that  are not metal \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what color is the object hiding behind the yellow metal cylinder?", "output": "#1 return object \n#2 return yellow cylinder \n#3 return #2 that is metal \n#4 return #1 hiding behind #3 \n#5 return color of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Is the rubber ball next to a blue cylinder?", "output": "#1 return balls \n#2 return #1 that  Is rubber \n#3 return cylinders \n#4 return #3 that  Is blue \n#5 return Is #2 next to  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: show me all the saturday flights from pittsburgh to baltimore ", "output": "#1 return flights \n#2 return #1 from  pittsburgh \n#3 return #2 to baltimore \n#4 return #3 on  saturday", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what color is dominating in the shapes?", "output": "#1 return objects \n#2 return colors of #1 \n#3 return number of  #1 for each #2 \n#4 return #2 where #3 is the  highest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are two bookstores, with bright light visible through the windows of at least one.", "output": "#1 return bookstores \n#2 return number of  #1 \n#3 return if  #2 is equal to  two \n#4 return light \n#5 return #4 that is bright \n#6 return windows of #1 \n#7 return #1 where  #5 is visible through #6 \n#8 return number of  #7 \n#9 return if  #8 is at least one \n#10 return if  both  #3 and #9 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there is at least one spray bottle that contains multi purpose cleaner.", "output": "#1 return spray bottle \n#2 return cleaner \n#3 return #2 that is  multi purpose \n#4 return #1 that contains #3 \n#5 return number of #4 \n#6 return If #5 is  at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If each image includes at least one hyena and a spotted wild cat.", "output": "#1 return hyenas \n#2 return wild cats \n#3 return #2 that are spotted \n#4 return images \n#5 return number of  #1 for each  #4 \n#6 return #4 where  #5 is at least one \n#7 return number of  #3 for each  #6 \n#8 return #6 where  #7 is at least one \n#9 return number of  #4 \n#10 return number of  #8 \n#11 return if  #9 is equal to  #10", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What material is seen the most?", "output": "#1 return material \n#2 return #1 that  is  seen the  most", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which battle happened earlier, the Battle of Poitiers or the Battle of Auray?", "output": "#1 return the  Battle of Poitiers \n#2 return the  Battle of Auray \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is lowest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the color of the other object the same size as the green sphere?", "output": "#1 return the   green sphere \n#2 return objects besides #1 \n#3 return the   size of #1 \n#4 return the   size of #2 \n#5 return #2 where #4 is  the   same as #3 \n#6 return the   color of #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: show all flights between san francisco and philadelphia for september fifteenth ", "output": "#1 return flights \n#2 return #1 between san francisco and  philadelphia \n#3 return #2 for september fifteenth", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the different album labels listed?", "output": "#1 return albums \n#2 return labels of #1 \n#3 return different #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the color of the small sphere to the right of the big cyan cylinder?", "output": "#1 return cylinder \n#2 return #1 that  is  big \n#3 return #2 that  is  cyan \n#4 return sphere \n#5 return #4 that  is  small \n#6 return #5 to  the   right of #3 \n#7 return color of #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many people was the maximum estimate of people who died in the riot?", "output": "#1 return people \n#2 return #1 who  died in  the  riot \n#3 return estimates of #2 \n#4 return the  highest of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many languages are spoken in the region that is home to the government titled Senate of the Phillippines?", "output": "#1 return Senate of the  Phillippines \n#2 return the  region of #1 \n#3 return languages spoken in  #2 \n#4 return the  number of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there is a perfume container with a chain and tassles", "output": "#1 return perfume container \n#2 return chain \n#3 return #1 that is with #2 \n#4 return tassles \n#5 return #3 that is with #4 \n#6 return number of  #5 \n#7 return if  #6 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the ids of the students who either registered or attended a course?", "output": "#1 return students \n#2 return #1 who  registered in a course \n#3 return #1 who  attended a course \n#4 return #2 ,  #3 \n#5 return ids of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what flights leave pittsburgh july fifth after 7pm and arrive in san francisco ", "output": "#1 return flights \n#2 return #1 from pittsburgh \n#3 return #2 to  san francisco \n#4 return #3 that  leave july fifth \n#5 return #4 after 7pm", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: are there any flights after 9pm from san francisco to washington ", "output": "#1 return flights \n#2 return #1 after 9pm \n#3 return #2 from  san francisco \n#4 return #3 to  washington", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are all of the spheres made of the same material?", "output": "#1 return spheres \n#2 return materials of #1 \n#3 return Are all #2 the  same", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are three skunks in total.", "output": "#1 return skunks \n#2 return number of  #1 \n#3 return if  #2 is equal to  three", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the child organization that branched from the General Motors Commerical Corporation?", "output": "#1 return child organizations \n#2 return #1 that branched from  the  General Motors Commerical Corporation", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What was Nobutsuna first, a hatamoto, or a daimyo?", "output": "#1 return Nobutsuna was  a hatamoto \n#2 return Nobutsuna was  a daimyo \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is the  lowest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the average ticket sales gross in dollars of films?", "output": "#1 return films \n#2 return ticket sales gross in dollars of  #1 \n#3 return average of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the farthest away matte object?", "output": "#1 return matte objects \n#2 return #1 that is  farthest away \n#3 return color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many parties are there?", "output": "#1 return parties \n#2 return the  number of  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many yards difference was Suisham\u2019s last field goal compared to Gould\u2019s last field goal?", "output": "#1 return Suisham \n#2 return field goals of #1 \n#3 return last  of #2 \n#4 return yards of #3 \n#5 return Gould \n#6 return field goals of #5 \n#7 return last  of #6 \n#8 return yards of #7 \n#9 return difference of #4 and  #8", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What cities have the artist that reiceved the nomination for \"Down in the flood\" live in?", "output": "#1 return Down in  the  flood \n#2 return artist of #1 \n#3 return cities live in  of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many gray matte shapes are there?", "output": "#1 return shapes \n#2 return #1 that  are gray \n#3 return #2 that  are matte \n#4 return the  number of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: how many different colors are the spheres?", "output": "#1 return spheres \n#2 return different colors of #1 \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: who is julianne hough?", "output": "#1 return julianne hough \n#2 return who  is #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If one or more of the cars shown are turned to the right.", "output": "#1 return cars \n#2 return #1 that are turned to  the  right \n#3 return number of  #2 \n#4 return if  #3 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: show me all flights from pittsburgh to boston which leave before noon ", "output": "#1 return flights \n#2 return #1 from  pittsburgh \n#3 return #2 to boston \n#4 return #3 that  leave before noon", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: return me the number of papers in PVLDB after 2000 in \" University of Michigan \" . ", "output": "#1 return papers \n#2 return #1 in PVLDB \n#3 return #2 after 2000 \n#4 return #3 in University of  Michigan \n#5 return number of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: how many yards did kicker Bironas have?", "output": "#1 return Bironas \n#2 return yards of #1 \n#3 return sum of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the color of the shiny cube to the left of the cylinders?", "output": "#1 return the   cylinders \n#2 return the   shiny cube to  the  left of #1 \n#3 return the   color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If at least one image shows one gorilla standing in a small blue pool to the left of a rope net, with arms raised and splashing water.", "output": "#1 return gorilla \n#2 return pool \n#3 return #2 that is small \n#4 return #3 that is blue \n#5 return rope net \n#6 return #4 to  the  left of #5 \n#7 return #1 standing in  #6 \n#8 return arms of #7 \n#9 return #7 where  #8 are raised \n#10 return water of #6 \n#11 return #9 that is splashing #10 \n#12 return if  #11 is in  at least one image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If a floor mat sits outside one of the doors.", "output": "#1 return floor mats \n#2 return doors \n#3 return #2 that #1 sit outside of \n#4 return number of  #3 \n#5 return if  #4 is equal to  one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Show the studios that have produced films with director \"Nicholas Meyer\" and \"Walter Hill\".", "output": "#1 return studios \n#2 return films of  #1 \n#3 return directors of  #2 \n#4 return #1 where #3 is  Nicholas Meyer \n#5 return #1 where #3 is  Walter Hill \n#6 return #1 of  both #4 and  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are four measuring glasses.", "output": "#1 return measuring glasses \n#2 return number of  #1 \n#3 return if  #2 is equal to  four", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are at least four dogs in total.", "output": "#1 return dogs \n#2 return number of  #1 \n#3 return if  #2 is at least four", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many scores of the game were from under 10 yards?", "output": "#1 return scores \n#2 return yards of #1 \n#3 return #1 where #2 is lower than 10 \n#4 return number of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Show the transaction types and the total amount of transactions.", "output": "#1 return transactions \n#2 return types of #1 \n#3 return amounts of #1 \n#4 return sum of #3 \n#5 return #2 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: List the names of employees and sort in ascending order of age.", "output": "#1 return employees \n#2 return names of  #1 \n#3 return ages of  #1 \n#4 return #2 sorted by #3 in ascending order", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Is there a gray sphere to the left of a gold cylinder?", "output": "#1 return cylinders \n#2 return #1 that  are gold \n#3 return a  gray sphere \n#4 return if  #3 is  to the left of a  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the color of the object that is not round?", "output": "#1 return objects \n#2 return #1 that  is  not round \n#3 return color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: The gray cylinder is what material?", "output": "#1 return gray cylinder \n#2 return material of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many years passed from the start of the Portuguese revolution through the signing of the Treaty of Lisbon?", "output": "#1 return the  start of   the   Portuguese revolution \n#2 return the  signing of   the   Treaty of Lisbon \n#3 return year of   #1 \n#4 return year of   #2 \n#5 return the  difference of   #4 and  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there is a single vehicle shown in one of the images.", "output": "#1 return vehicle \n#2 return images \n#3 return the  number of  #1 for each  #2 \n#4 return #2 where  #3 is equal to  one \n#5 return the  number of  #4 \n#6 return if  #5 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the earliest flight between boston and washington ", "output": "#1 return flights \n#2 return #1 between boston and  washington \n#3 return #2 which  is  earliest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many objects are to the left of the large green cube?", "output": "#1 return large green cube \n#2 return objects to the left of #1 \n#3 return number of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Find the dates on which more than one revisions were made.", "output": "#1 return dates \n#2 return revisions made on  #1 \n#3 return number of #2 \n#4 return #1 where  #3 is  more than  one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Both TD runs were done from what yard line?", "output": "#1 return TD runs \n#2 return yard line of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what country in europe is north of france and south of of the netherlands?", "output": "#1 return europe \n#2 return country of   #1 \n#3 return france \n#4 return the  netherlands \n#5 return #2 that is north of   #3 \n#6 return #2 that is south of   #4 \n#7 return #2 in  both  #5 and #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If one hamster is next to a hamster of the same color that has its head poking out of an overturned brown vase.", "output": "#1 return hamster \n#2 return head of #1 \n#3 return vase \n#4 return #3 that is brown \n#5 return #4 that is overturned \n#6 return #1 where  #2 is poking out of #5 \n#7 return #1 next to  #6 \n#8 return color of #6 \n#9 return color of #7 \n#10 return if  #9 is the  same as #8", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the least expensive flight available from dallas fort worth to san francisco ", "output": "#1 return flights \n#2 return #1 from  dallas fort worth \n#3 return #2 to san francisco \n#4 return least expensive of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: show me flights from philadelphia to denver on a monday ", "output": "#1 return flights \n#2 return #1 on  a monday \n#3 return #2 from  philadelphia \n#4 return #3 to denver", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many points combined did both teams score in the third quarter?", "output": "#1 return teams \n#2 return points that #1 score \n#3 return #2 in  the  third quarter \n#4 return sum of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: please show me flights from san francisco to dallas ", "output": "#1 return flights \n#2 return #1 from  san francisco \n#3 return #2 to dallas", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: which countries touch both the atlantic and the pacific oceans?", "output": "#1 return countries \n#2 return atlantic ocean \n#3 return pacific ocean \n#4 return #1 that touch #2 \n#5 return #1 that touch #3 \n#6 return #1 in  both  #4 and #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what object is farthest to the back?", "output": "#1 return objects \n#2 return #1 that  is  farthest to  the  back", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Did more households have people living together in marriage or have only a male householder present with no wife?", "output": "#1 return households \n#2 return #1 of people living together in  marriage \n#3 return #1 with only a male householder present with  no wife \n#4 return number of  #2 \n#5 return number of  #3 \n#6 return which is highest of #4 ,  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the right image contains a ferret sticking their head out of a dirt hole.", "output": "#1 return ferret \n#2 return head of  #1 \n#3 return dirt \n#4 return hole in  #3 \n#5 return #1 where #2 is  sticking out of  #4 \n#6 return if  #5 is  in  the  right image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: are there more blue objects than matte objects?", "output": "#1 return objects  \n#2 return #1 that are blue \n#3 return #1 that are matte \n#4 return number of  #2 \n#5 return number of  #3 \n#6 return if #4 is  higher than #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the object that is to the left of the purple sphere and behind the yellow sphere?", "output": "#1 return the   purple sphere  \n#2 return the   yellow sphere  \n#3 return objects \n#4 return #3 that  are to  the   left of #1 \n#5 return #3 that  are behind #2 \n#6 return #3 in  both  #4 and #5 \n#7 return the   color of #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What political party were both Andrew Johnson and Sally Yates a part of?", "output": "#1 return Andrew Johnson \n#2 return political party of #1 \n#3 return Sally Yates \n#4 return political party of #3 \n#5 return political party in  both #2 and  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many TD passes did Culpepper throw to Porter?", "output": "#1 return Culpepper \n#2 return TD passes of #1 \n#3 return #2 to Porter \n#4 return number of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: where in the us was bethany hamilton born?", "output": "#1 return bethany hamilton \n#2 return where  was  #1 born", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in at least one image there is a box of lemons with at least six that have blue stickers.", "output": "#1 return box of lemons \n#2 return lemons \n#3 return stickers \n#4 return #3 that are blue \n#5 return #2 that have #4 \n#6 return #5 in  #1 \n#7 return number of  #6 for each  #1 \n#8 return #1 where  #7 is at least six \n#9 return if  #8 is in  at least one image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many years after the death of Waleran IV, Duke of Limburg did his daughter Ermengarde of Limburg die?", "output": "#1 return the  death of   Waleran IV ,  Duke of Limburg  \n#2 return his daughter Ermengarde of   Limburg  die \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return difference of   #4 and  #3 in  years", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the animal in the image on the left is wearing an article of clothing.", "output": "#1 return left image \n#2 return animal of #1 \n#3 return article of clothing \n#4 return if  #2 is wearing #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many more civilians than military personnel died in the Soviet Union during the war?", "output": "#1 return the  war \n#2 return civilians that died in  the  Soviet Union of #1 \n#3 return military personnel that died in  the  Soviet Union of #1 \n#4 return number of  #2 \n#5 return number of  #3 \n#6 return the  difference of #4 and  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the product, chromosome and porphyria related to the enzymes which take effect at the location 'Cytosol'?", "output": "#1 return enzymes \n#2 return locations #1 take effect at \n#3 return #1 where #2 is  'Cytosol \n#4 return products of  #3 \n#5 return chromosomes of  #3 \n#6 return porphyrias of  #3 \n#7 return #4 ,  #5 ,   #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many cubes match the color of the sphere?", "output": "#1 return cubes \n#2 return sphere \n#3 return colors of #1 \n#4 return color of #2 \n#5 return #1 where #3 is  the  same as #4 \n#6 return number of  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: List the official names of cities that have not held any competition.", "output": "#1 return cities \n#2 return #1 that  have  held competitions \n#3 return #1 besides  #2 \n#4 return official names of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many yellow objects are made of rubber?", "output": "#1 return objects \n#2 return #1 that  are yellow \n#3 return #2 that  are made of rubber \n#4 return number of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which player threw a TD pass over 70 yards in the first half?", "output": "#1 return the  first half \n#2 return TD passes of #1 \n#3 return yards of #2 \n#4 return #2 where #3 is higher than 70 yards \n#5 return player of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the sphere that is not metal?", "output": "#1 return spheres \n#2 return #1 that  is  not metal \n#3 return color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: who was us president during the 14 amendment?", "output": "#1 return the  us \n#2 return presidents of #1 \n#3 return #2 during the  14 amendment", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many objects are there to the right of the object to the right of the cyan cylinder?", "output": "#1 return objects \n#2 return #1 that  is  cyan \n#3 return #2 that  is  cylinder \n#4 return #1 to the   right  of #3 \n#5 return #1 to  the   right  of #4 \n#6 return number of  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the dogs on the left are dressed like cows.", "output": "#1 return dogs \n#2 return #1 on the  left \n#3 return if  #2 are  dressed like cows", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are two trains in total traveling in the same direction.", "output": "#1 return trains \n#2 return direction that #1 are traveling \n#3 return #1 where  #2 is the  same \n#4 return number of  #3 \n#5 return if  #4 is equal to  two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the only repeating color in this image?", "output": "#1 return colors \n#2 return #1 that  is  repeating", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: how many times did Garrard get sacked?", "output": "#1 return Garrard \n#2 return times sacked of #1 \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: who was nelson mandellas married to his first wife?", "output": "#1 return nelson mandella \n#2 return wives of #1 \n#3 return the  first of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What did the Texans do before the Thanksgiving day game?", "output": "#1 return the  Thanksgiving day game \n#2 return what  did the  Texans do before #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If two of the gloves can be seen to have a woodland camouflage pattern.", "output": "#1 return gloves \n#2 return pattern of #1 \n#3 return #1 where  #2 is woodland camouflage \n#4 return number of  #3 \n#5 return if  #4 is equal to  two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If an image contains exactly two side-by-side dogs, with a black one on the left and a white-bodied dog on the right.", "output": "#1 return dog \n#2 return #1 on the  left \n#3 return #2 that is black \n#4 return #1 on the  right \n#5 return #4 that is white-bodied \n#6 return #3 side-by-side with #5 \n#7 return if  #6 are in  an image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are four bottles in one image and five in the other.", "output": "#1 return one image \n#2 return bottles in  #1 \n#3 return number of #2 \n#4 return If #3 is  equal to four \n#5 return other image \n#6 return bottles in  #5 \n#7 return number of #6 \n#8 return If #7 is  equal to five \n#9 return If both  #4 and #8 are  true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: when did muammar gaddafi control libya?", "output": "#1 return muammar gaddafi did  control libya \n#2 return when  was  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: when did rosas mom born?", "output": "#1 return rosas \n#2 return mom of #1 \n#3 return date born of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in one image, a white kitchen sink is built into a wooden cabinet, and is situated in front of a window near wall shelves stocked with kitchen supplies.", "output": "#1 return white kitchen  sink \n#2 return wooden cabinet \n#3 return #1 built into #2 \n#4 return window \n#5 return #3 that is  situated in  front of  #4 \n#6 return wall shelves \n#7 return kitchen  supplies \n#8 return #6 stocked with  #7 \n#9 return #5 that is  near #8 \n#10 return if  #9 is  in  one image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: list all the flights from atlanta to philadelphia on august the first ", "output": "#1 return flights \n#2 return #1 from  atlanta \n#3 return #2 to philadelphia \n#4 return #3 on  august the first", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If at least one image includes black pugs.", "output": "#1 return pugs \n#2 return #1 that are black \n#3 return if  #2 are in  at least one image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what european country's capital city is belgrade?", "output": "#1 return european countries \n#2 return capital city of #1 \n#3 return belgrade \n#4 return #2 that is belgrade \n#5 return #1 that has #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: how many yards did julius jones get in his touch down runs?", "output": "#1 return julius jones \n#2 return touch down runs of #1 \n#3 return yards of #2 \n#4 return sum of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what are the major cities of bahrain?", "output": "#1 return bahrain \n#2 return the  major cities of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: flights from baltimore to philadelphia please ", "output": "#1 return flights \n#2 return #1 from  baltimore \n#3 return #2 to philadelphia", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the left and right image contains the same number of bikinis with one being gold.", "output": "#1 return bikinis \n#2 return left image \n#3 return right image \n#4 return number of #1 in  #2 \n#5 return number of #1 in  #3 \n#6 return if  #4 is equal to  #5 \n#7 return #1 that are gold \n#8 return number of #7 \n#9 return if  #8 is one \n#10 return if  both  #6 and #9 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If all images show one adult dog standing still outdoors.", "output": "#1 return dog \n#2 return #1 that is adult \n#3 return #2 that is standing still \n#4 return #3 that is outdoors \n#5 return images \n#6 return number of  #4 for each  #5 \n#7 return #5 where  #6 is equal to  one \n#8 return number of  #5 \n#9 return number of  #7 \n#10 return if  #8 is equal to  #9", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the color of the small cylinder in front of a large one?", "output": "#1 return cylinders \n#2 return #1 that  are small \n#3 return #1 that  are large \n#4 return #2 that  are in front of #3 \n#5 return color of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What title of nobility did the person who died before Russia was invaded have?", "output": "#1 return people \n#2 return #1 who  died before Russia was  invaded \n#3 return title of nobility of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are several sea mammals in the picture on the right.", "output": "#1 return right picture \n#2 return sea mammals in  #1 \n#3 return number of  #2 \n#4 return if  #3 is at least two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which movies did Matt Bomer act in, and was decorated by Karen O'Hara?", "output": "#1 return Matt Bomer \n#2 return movies of #1 \n#3 return #2 that was  decorated by Karen O'Hara", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which country had NOT dominated the region by early military victories at Narva and Dorpat, Denmark or Russia?", "output": "#1 return countries \n#2 return #1 that dominated the  region \n#3 return #2 with early military victories at Narva and  Dorpat \n#4 return if #3 was  Denmark \n#5 return if #3 was  Russia \n#6 return which is false of #4 ,  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Find all the addresses in East Julianaside, Texas or in Gleasonmouth, Arizona.", "output": "#1 return address \n#2 return #1 in East Julianaside Texas \n#3 return #1 in Gleasonmouth Arizona \n#4 return #2 and #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: i would like to fly from boston to philadelphia next thursday ", "output": "#1 return flights \n#2 return #1 next thursday \n#3 return #2 from boston \n#4 return #3 to  philadelphia", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If each image shows a single flat screen tv, and at least one image features an aerial city view on the screen.", "output": "#1 return images \n#2 return tvs in  #1 \n#3 return screen  of #2 \n#4 return #2 where  #3 is flat \n#5 return number of  #4 for each  #1 \n#6 return #1 where  #5 is equal to  one \n#7 return number of  #6 \n#8 return number of  #1 \n#9 return if  #7 is equal to  #8 \n#10 return tv \n#11 return screen of #10 \n#12 return aerial city view \n#13 return #11 that features #12 \n#14 return if  #13 is in  at least one image  \n#15 return if  both  #9 and #14 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Find the year that has the most number of matches.", "output": "#1 return years \n#2 return matches in #1 \n#3 return number of  #2 for each  #1 \n#4 return #1 where #3 is  highest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Please show the titles of films and the types of market estimations.", "output": "#1 return films \n#2 return titles of  #1 \n#3 return market estimations of  #1 \n#4 return types of  #3 \n#5 return #2 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the highest point in the us ", "output": "#1 return points \n#2 return #1 in the  us \n#3 return elevation of  #2 \n#4 return #2 where #3 is  highest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the bigger ball?", "output": "#1 return gold colored objects \n#2 return number of  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Give me the name of the customer who ordered the most items in total.", "output": "#1 return customers \n#2 return items ordered of  #1 \n#3 return number of #2 for each #1 \n#4 return #1 where  #3 is  highest \n#5 return name of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are there an equal number of matte objects and cylinders?", "output": "#1 return matte objects \n#2 return cylinders \n#3 return number of #1 \n#4 return number of #2 \n#5 return is  #3 the same as #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What did Charles VI gain control of first, Naples or Sicily?", "output": "#1 return Charles VI did gain control of Naples \n#2 return Charles VI did gains controls of Sicily \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is lowest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Is the small purple sphere at the front of the image?", "output": "#1 return sphere \n#2 return #1 that is purple \n#3 return #2 that is small \n#4 return is #3 at the  front of the   image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: i would like a ticket leaving from denver colorado to atlanta georgia with a stop in pittsburgh ", "output": "#1 return tickets \n#2 return #1 leaving from denver colorado \n#3 return #2 to  atlanta georgia \n#4 return #3 with  a  stop in pittsburgh", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: when was george washington's wedding?", "output": "#1 return george washington \n#2 return wedding of #1 \n#3 return when  was  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If at least four phones are stacked on top of each other in at least one of the pictures.", "output": "#1 return pictures \n#2 return phones in  #1 \n#3 return #2 that are stacked on top of each other \n#4 return number of  #3 for each  #1 \n#5 return #1 where  #4 is at least four \n#6 return number of  #5 \n#7 return if  #6 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the last name of the musician that have produced the most number of songs?", "output": "#1 return musicians \n#2 return songs #1 produced \n#3 return number of  #2 for each  #1 \n#4 return #1 where #3 is  highest \n#5 return last name of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which player cause the game winning touchdown to be called back?", "output": "#1 return the  game winning touchdown to be called back \n#2 return player that causes #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the cheapest fare from dallas to denver round trip ", "output": "#1 return flights \n#2 return #1 from  dallas \n#3 return #2 to denver \n#4 return #3 that  are round trip \n#5 return fares of #4 \n#6 return #5 that  are the cheapest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What was the 49ers stadium last, Candlestick Park or Kezar Stadium?", "output": "#1 return the  49ers stadium was  Candlestick Park \n#2 return the  49ers stadium was  Kezar Stadium \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is highest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: who is the present chief justice of supreme court?", "output": "#1 return supreme court \n#2 return chief justice of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: please give me all flights from long beach to memphis ", "output": "#1 return flights \n#2 return #1 from  long beach \n#3 return #2 to memphis", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: By how many points did McAllister improve upon Safran's score?", "output": "#1 return McAllister \n#2 return Safran \n#3 return points scored of #1 \n#4 return points scored of #2 \n#5 return number of  #3 \n#6 return number of  #4 \n#7 return the  difference of #5 and  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many Square shapes are there?", "output": "#1 return Square shapes \n#2 return number of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many yards longer was Eli Manning's longest touchdown pass than his shortest?", "output": "#1 return Eli Manning \n#2 return touchdown pass of #1 \n#3 return yards of #2 \n#4 return the  longest of #3 \n#5 return the  shortest of #3 \n#6 return the  difference of #4 ,  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the titles of all movies that have between 3 and 5 stars?", "output": "#1 return movies \n#2 return stars of  #1 \n#3 return #1 where #2 is  at least 3 \n#4 return #1 where #2 is  at most 5 \n#5 return #1 of  both #3 and  #4 \n#6 return titles of  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the three countries that the least players are from?", "output": "#1 return players \n#2 return country of #1 \n#3 return number of  #1 for each #2 \n#4 return #2 where #3 is lowest \n#5 return #2 besides  #4 \n#6 return #5 where #3 is lowest \n#7 return #5 besides  #6 \n#8 return #7 where #3 is lowest \n#9 return #4 ,  #6 ,   #8", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Did the Ravens score fewer points in the first or second quarter?", "output": "#1 return Ravens \n#2 return points that #1 score \n#3 return #2 in  the  first quarter \n#4 return #2 in  the  second quarter \n#5 return sum of #3 \n#6 return sum of #4 \n#7 return which is lowest of #5 ,  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Who plays Captain Kirk in \"Star Trek\" and also played the character Stanley Ipkiss?", "output": "#1 return Captain Kirk in  Star Trek \n#2 return who  plays #1 \n#3 return #2 that played the  character Stanley Ipkiss", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in at least one image there is a white square bookshelf with 12 cubes that have smaller shelves in the cubes.", "output": "#1 return bookshelf \n#2 return #1 that is white \n#3 return #2 that is square \n#4 return cubes  on #3 \n#5 return #4 that have smaller shelves \n#6 return number of  #5 \n#7 return #5 where  #6 is equal to  12 \n#8 return images of #7 \n#9 return number of  #8 \n#10 return if  #9 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the fare on continental 271 from dallas to san francisco ", "output": "#1 return flights \n#2 return #1 on  continental 271 \n#3 return #2 from  dallas \n#4 return #3 to san francisco \n#5 return fares of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: when jefferson davis die?", "output": "#1 return jefferson davis die \n#2 return when  was  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the left and right image contains the same number of drums.", "output": "#1 return left image \n#2 return drums in  #1 \n#3 return number of #2 \n#4 return right image \n#5 return drums in  #4 \n#6 return number of #5 \n#7 return If #3 is  equal to #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which group had the second highest number of people?", "output": "#1 return groups \n#2 return people of #1 \n#3 return number of  #2 for each #1 \n#4 return #1 where #3 is highest \n#5 return #1 besides  #4 \n#6 return #5 where #3 is highest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in one image, a dog with big floppy ears is running.", "output": "#1 return dog \n#2 return #1 that is running \n#3 return ears of #2 \n#4 return #2 where  #3 are big \n#5 return #2 where  #3 are floppy \n#6 return #2 in  both  #4 and #5 \n#7 return if  #6 is in  one image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the entire dog is visible in the image on the left.", "output": "#1 return the  image on the left \n#2 return dog in  #1 \n#3 return if  #2 is  entirely visible", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the shape in the front?", "output": "#1 return shapes \n#2 return #1 in the  front \n#3 return the  color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If an image shows two dogs reclining together on something indoors, with a white fabric under them.", "output": "#1 return dogs \n#2 return something indoors \n#3 return #1 that are reclining together \n#4 return #3 that are on #2 \n#5 return fabric \n#6 return #5 that is white \n#7 return #4 that has #6 under \n#8 return images \n#9 return number of  #7 for each  #8 \n#10 return #8 where  #9 is equal to  two \n#11 return number of  #10 \n#12 return if  #11 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are three vultures", "output": "#1 return vultures \n#2 return number of  #1 \n#3 return if  #2 is equal to  three", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are two science beakers.", "output": "#1 return science beakers \n#2 return number of  #1 \n#3 return if  #2 is equal to  two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: List the company name and rank for all companies in the decreasing order of their sales.", "output": "#1 return companies \n#2 return names of  #1 \n#3 return ranks of  #1 \n#4 return sales of  #1 \n#5 return #2 ,  #3 \n#6 return #5 sorted by #4 in decreasing order", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many professors are in the accounting dept?", "output": "#1 return professors \n#2 return #1 in accounting dept \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the cheapest round trip fare on continental 1291 round trip denver san francisco ", "output": "#1 return flights \n#2 return #1 that  are round trip \n#3 return #2 on  continental 1291 \n#4 return #3 from  denver \n#5 return #4 to san francisco \n#6 return fares of #5 \n#7 return #6 that  is  the cheapest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: After the Great Famine, Ireland's population was approximately how many people?", "output": "#1 return Ireland \n#2 return population of #1 \n#3 return #2 After the  Great Famine", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many yards were the  interceptions that were returned for a touchdown?", "output": "#1 return interceptions \n#2 return #1 that were returned for touchdowns \n#3 return yards of #2 \n#4 return sum of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: who becomes the prime minister in caanada?", "output": "#1 return caanada \n#2 return prime minister of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: information on ground transportation in denver ", "output": "#1 return ground transportation \n#2 return #1 in denver \n#3 return information on  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Who caught the final TD pass?", "output": "#1 return TD pass \n#2 return the  final #1 \n#3 return who  caught #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Who claimed the money was compensation for lost valuables?", "output": "#1 return the  money was  compensation for lost valuables \n#2 return who  claimed #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: are there any later flights than 810pm leaving from milwaukee for tacoma tomorrow evening ", "output": "#1 return flights \n#2 return #1 from  milwaukee \n#3 return #2 tomorrows tacoma \n#4 return #3 tomorrow evening \n#5 return #4 later than  810pm \n#6 return are there  any  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many in percent from the census had a male householder with a wife present?", "output": "#1 return those that had a male householder with a  wife present \n#2 return percent from  the  census of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: from sfo to denver ", "output": "#1 return flights \n#2 return #1 from  sfo \n#3 return #2 to denver", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: who is the richest man in luxembourg?", "output": "#1 return luxembourg \n#2 return men of #1 \n#3 return #2 that is richest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many cubes are the same size as the yellow object?", "output": "#1 return cubes \n#2 return yellow object \n#3 return size of #1 \n#4 return size of #2 \n#5 return #1 where #3 is  the same as #4 \n#6 return number of  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the shape of the only matte finish object?", "output": "#1 return objects \n#2 return finishes of #1 \n#3 return #1 where  #2 is  matte \n#4 return the  shape of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: in which quarter both teams did not score ?", "output": "#1 return teams \n#2 return score of #1 \n#3 return quarters of #2 \n#4 return number of  #2 for each #3 \n#5 return #3 where #4 is zero", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many more men did Ibrahim Pasha have compared to Sobieski's 16,000 men?", "output": "#1 return Ibrahim Pasha \n#2 return men  of #1 \n#3 return number of  #2 \n#4 return the  difference of #3 and  16,000", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many yards total did Mike Nugent kick for field goals?", "output": "#1 return Mike Nugent \n#2 return field goals of #1 \n#3 return yards of #2 \n#4 return sum of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many of the Kennedy children held a position until 1962?", "output": "#1 return the  Kennedy children \n#2 return #1 who  held a position \n#3 return #2 until 1962 \n#4 return number of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are the two cylinders made from the same material?", "output": "#1 return cylinders \n#2 return the material that  #1 are made from  \n#3 return if  #2 are the same", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which occurred first, the Nivelle Offensive or a British attack at Passchendaele?", "output": "#1 return the  Nivelle Offensive \n#2 return a British attack at Passchendaele \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is the  lowest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the bodies of the dogs in the paired images are turned in the same direction.", "output": "#1 return images \n#2 return dogs in  #1 \n#3 return bodies of  #2 \n#4 return direction turned in  of  #3 \n#5 return if  #4 are  the  same", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many less people were in the peninsula during the first census compared to the pre-war population?", "output": "#1 return people \n#2 return #1 that were in  the  peninsula \n#3 return #2 during the  first census \n#4 return number of  #3 \n#5 return #1 in  the  pre-war population \n#6 return number of  #5 \n#7 return difference of #6 and  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: when will the suite life movie come out?", "output": "#1 return the  suite life movie \n#2 return when  will #1 come out", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What style of music did Walid Berrazeg play?", "output": "#1 return Walid Berrazeg \n#2 return music of #1 \n#3 return style of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the matte square?", "output": "#1 return matte square \n#2 return color of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what city is the university of alabama state in?", "output": "#1 return university of alabama state \n#2 return city of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If a single cow is in a field in each of the images.", "output": "#1 return cows \n#2 return a  field \n#3 return #1 in  #2 \n#4 return images of #3 \n#5 return number of  #3 for each  #4 \n#6 return #4 where  #5 is equal to  one \n#7 return number of  #6 \n#8 return images \n#9 return number of  #8 \n#10 return if  #7 is equal to  #9", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What object is the furthest away from the others?", "output": "#1 return objects \n#2 return #1 furthest away from  others", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: i'm looking for flights from pittsburgh to philadelphia leaving before 9am ", "output": "#1 return flights \n#2 return #1 from  pittsburgh \n#3 return #2 to philadelphia \n#4 return #3 that are leaving before 9am", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there at least two beds and two windows.", "output": "#1 return beds \n#2 return windows \n#3 return number of  #1 \n#4 return number of  #2 \n#5 return if  #3 is at least two  \n#6 return if  #4 is at least two  \n#7 return if  both  #5 and #6 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: when william henry harrison died?", "output": "#1 return william henry harrison \n#2 return when  did  #1 die", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which happened first, the formation of the Somali Salvation Democratic Front, or the defeat of the rebels?", "output": "#1 return the  formation of the   Somali Salvation Democratic Front \n#2 return the  defeat of the   rebels \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is the  lowest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: when was peyton manning born?", "output": "#1 return peyton manning \n#2 return when  was  #1 born", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If at least one image includes a ball on a golf tee.", "output": "#1 return ball \n#2 return golf tee \n#3 return #1 on #2 \n#4 return if  #3 is in  at least one image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Give me the times and numbers of all trains that go to Chennai, ordered by time.", "output": "#1 return trains \n#2 return #1 that  go to  Chennai \n#3 return times of #2 \n#4 return numbers of #2 \n#5 return #3 ,  #4 \n#6 return #5 sorted by #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Please show the results of music festivals and the number of music festivals that have had each, ordered by this count.", "output": "#1 return music festivals \n#2 return results of #1 \n#3 return number of  #1 for each #2 \n#4 return #2 sorted by #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Is the large purple cylinder made out of metal?", "output": "#1 return cylinders \n#2 return #1 that  are purple \n#3 return #2 made of metal \n#4 return #3 that  are large", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many dorms have amenities?", "output": "#1 return dorms \n#2 return #1 with  amenities \n#3 return number of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What killed the person who said \"Circumstances hell! I make circumstances\"?", "output": "#1 return person \n#2 return #1 that said Circumstances hell ! I make circumstances \n#3 return what  killed #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many shiny things are in front of the blue cube?", "output": "#1 return shiny things \n#2 return blue cube \n#3 return #1 in  front of  #2 \n#4 return number of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What shape is the brown metal object?", "output": "#1 return objects \n#2 return #1 that  are brown \n#3 return #2 that  are metal \n#4 return shape of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If an image shows a type of cart with no horse attached.", "output": "#1 return cart \n#2 return type of  #1 \n#3 return horse \n#4 return #2 that has #3 attached \n#5 return #2 besides  #4 \n#6 return If #5 is  in  an image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Please give me a list of cities whose regional population is over 10000000.", "output": "#1 return cities \n#2 return regional populations of  #1 \n#3 return #1 where  #2 is higher than 10000000", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: who plays carrie in the king of queens?", "output": "#1 return king of queens \n#2 return carrie of #1 \n#3 return who  plays #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what color are the metallic objects", "output": "#1 return objects \n#2 return #1 that  are metallic \n#3 return the  colors of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Did Andrew Luck have more passing or rushing touchdowns?", "output": "#1 return Andrew Luck \n#2 return passing touchdowns of #1 \n#3 return rushing touchdowns of #1 \n#4 return number of  #2 \n#5 return number of  #3 \n#6 return which is highest of #4 ,  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: when was julian opie born?", "output": "#1 return julian opie \n#2 return when  was  #1 born", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What shape is the smallestt brown object?", "output": "#1 return objects \n#2 return #1 that  are brown \n#3 return the  smallestt #2 \n#4 return the  shape of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the cube that is the same size as the metallic cylinder made of?", "output": "#1 return cubes \n#2 return metallic cylinder \n#3 return size of #1 \n#4 return size of #2 \n#5 return #1 where #3 is  the   same as #4 \n#6 return What is  #5 made of", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Select the average price of each manufacturer's products, showing the manufacturer's name.", "output": "#1 return manufacturers \n#2 return products of #1 \n#3 return prices of #2 \n#4 return the  average of #3 for each #1 \n#5 return the  names of #1 \n#6 return #4 ,  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: where is indianapolis ", "output": "#1 return indianapolis \n#2 return where is  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Show the names of authors from college \"Florida\" or \"Temple\"", "output": "#1 return authors \n#2 return colleges of  #1 \n#3 return #1 where #2 is  Florida \n#4 return #1 where #2 is  Temple \n#5 return #3 or  #4 \n#6 return names of  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Dauphin to try to seize power how many years before John II died in London?", "output": "#1 return Dauphin try to seize power \n#2 return John II died in  London \n#3 return year of #1 \n#4 return year of #2 \n#5 return the  difference of #3 and  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What's the rainforest in the location that has a governmental office holder called, Ana Jara Vel\u00c3\u00a1squez called?", "output": "#1 return governmental office holder \n#2 return #1 called Ana Jara Vel\u00c3\u00a1squez \n#3 return location of #2 \n#4 return rainforest of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: are the red spheres the same size?", "output": "#1 return red spheres \n#2 return sizes of #1 \n#3 return are #2 the same", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the object to the right of the shiny sphere and to the left of the green object?", "output": "#1 return objects \n#2 return sphere \n#3 return #2 that is shiny \n#4 return #1 that is green \n#5 return #1 to the  right of #3 \n#6 return #5 to the  left of #4 \n#7 return color of #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: when was colonel bud day born?", "output": "#1 return colonel bud day \n#2 return when  was  #1 born", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the average distance and price for all flights from LA?", "output": "#1 return flights \n#2 return #1 from  LA \n#3 return the  distances for #2 \n#4 return the  prices for #2 \n#5 return the  average of  #3 \n#6 return the  average of  #4 \n#7 return #5 ,  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If one image shows side by side open laptops, and the other shows a small laptop resting on top of a bigger one.", "output": "#1 return one image \n#2 return laptops in  #1 \n#3 return #2 that are open \n#4 return if  #3 are side by side  \n#5 return other image \n#6 return laptops in  #5 \n#7 return #6 that is small \n#8 return #6 that is bigger \n#9 return if  #7 is resting on top of #8 \n#10 return if  both  #4 and #9 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: hi could i get a one way ticket from milwaukee to orlando ", "output": "#1 return tickets \n#2 return #1 that is one way \n#3 return #2 from  milwaukee \n#4 return #3 to  orlando", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Is the tiny ball in the front the same color as the tiny cube in the back?", "output": "#1 return tiny ball \n#2 return #1 that is in  the  front \n#3 return tiny cube \n#4 return #3 that is in  the  back \n#5 return color of #2 \n#6 return color of #4 \n#7 return is #5 the  same as #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Who scored more points, Patriots or Titans?", "output": "#1 return the  Patriots \n#2 return the  Titans \n#3 return points scored of #1 \n#4 return points scored of #2 \n#5 return number of  #3 \n#6 return number of  #4 \n#7 return which is more of #5 ,  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many yards of field goals were kicked during the game?", "output": "#1 return field goals \n#2 return #1 that were kicked during the  game \n#3 return yards of #2 \n#4 return sum of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the object that is behind the large yellow cube behind the blue cylinder?", "output": "#1 return the  blue cylinder \n#2 return cubes behind  of #1 \n#3 return #2 that are large \n#4 return #3 that are yellow \n#5 return object behind  of #4 \n#6 return color of #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the phone numbers of all customers and suppliers.", "output": "#1 return customers \n#2 return suppliers \n#3 return #1 ,  #2 \n#4 return phone numbers of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what language do people speak in the us?", "output": "#1 return the  us \n#2 return languages of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are two canopies that cover a mattress.", "output": "#1 return canopies \n#2 return mattress \n#3 return #1 that cover #2 \n#4 return the  number of #3 \n#5 return If #4 is  equal to two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many percent of couples that married in the 1980s that graduated high school , under the age of 26 that are not still together?", "output": "#1 return couples \n#2 return #1 in  the  1980s \n#3 return #2 that graduated high school \n#4 return #3 that married under the  age of 26 \n#5 return #4 that are still together \n#6 return percent of #5 \n#7 return the  difference of 100 percent and  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are three mentioned possibilities of Cnut's birthdate?", "output": "#1 return Cnut \n#2 return birthdate of #1 \n#3 return three mentioned possibilities of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the names of instructors who have taught C Programming courses?", "output": "#1 return instructors \n#2 return courses #1 have  taught \n#3 return #1 where #2 is  C Programming \n#4 return names of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many more field goals did Nedney make than Mare?", "output": "#1 return Nedney \n#2 return field goals of #1 \n#3 return number of  #2 \n#4 return Mare \n#5 return field goals of #4 \n#6 return number of  #5 \n#7 return difference of #3 and  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What genres of music are performed by the actor who appeared in \"Motown 25: Yesterday, Today, Forever?\"?", "output": "#1 return Motown 25 Yesterday ,  Today ,   Forever \n#2 return actor of #1 \n#3 return genres of music performed of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many years was the time span where underemployment began climbing again to over half of the working population?", "output": "#1 return underemployment began climbing again to over half of the  working population \n#2 return time span of #1 \n#3 return years of #2 \n#4 return number of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what capital has the largest population ", "output": "#1 return capitals \n#2 return population of  #1 \n#3 return #1 where #2 is  largest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Do two of the balls appear to be made of rubber?", "output": "#1 return balls \n#2 return #1 that  appear to  be made of rubber \n#3 return number of  #2 \n#4 return if  #3 is  two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is finland's largest river?", "output": "#1 return finland \n#2 return rivers of #1 \n#3 return size of #2 \n#4 return #2 where  #3 is highest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many yards was Racker's longest field goal attempt?", "output": "#1 return Racker \n#2 return field goal attempts of #1 \n#3 return yards of #2 \n#4 return the  longest of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What happened second: Central Power's crushing offensive or Armistice of Villa Giusti?", "output": "#1 return Central Power 's crushing offensive \n#2 return Armistice of Villa Giusti \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is the  highest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Who scored the first field goal of the game?", "output": "#1 return field goals \n#2 return first of #1 \n#3 return who  scored #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: is the green sphere the same material as the red cylinder?", "output": "#1 return sphere \n#2 return #1 that is green \n#3 return cylinder \n#4 return #3 that is red \n#5 return material of #2 \n#6 return material of #4 \n#7 return is #5 the  same as #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are more than two dispensers.", "output": "#1 return dispensers \n#2 return number of  #1 \n#3 return if  #2 is higher than two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is all the information regarding employees with salaries above the minimum and under 2500?", "output": "#1 return employees \n#2 return salaries of #1 \n#3 return the  lowest of #2 \n#4 return #1 where #2 is higher than #3 \n#5 return #1 where #2 is lower than 2500 \n#6 return #1 in  both #4 and  #5 \n#7 return information of #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the movie called with kristen stewart when she gets raped?", "output": "#1 return kristen stewart \n#2 return movie of #1 \n#3 return #2 in  which she gets raped", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in one image, a child is draped in a barber's cape and getting a haircut", "output": "#1 return child \n#2 return barber 's cape \n#3 return #1 draped in  #2 \n#4 return #3 that is  getting a  haircut \n#5 return if  #4 is  in  one image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: describe ground transportation in dallas ", "output": "#1 return ground transportation \n#2 return #1 in dallas \n#3 return describe #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many object are purple, whether they are shiny or matte?", "output": "#1 return objects \n#2 return #1 that  are purple \n#3 return number of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many distinct transaction types are used in the transactions?", "output": "#1 return the  transactions \n#2 return transaction types used in #1 \n#3 return number of  distinct #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are the two spheres in the picture the same color?", "output": "#1 return spheres \n#2 return colors of #1 \n#3 return distinct #2 \n#4 return number of  #3 \n#5 return if #4 is  equal to  one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the left image features a dog with an open mouth standing in profile in front of someone standing wearing pants.", "output": "#1 return dog \n#2 return mouth of #1 \n#3 return #1 where  #2 is open \n#4 return #3 standing  in  profile \n#5 return someone \n#6 return #5 that is standing  \n#7 return pants \n#8 return #6 wearing #7 \n#9 return #4 in  front of #8 \n#10 return if  #9 is in  the  left image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If at least one of the cabinets has an arched top as well as some type of legs.", "output": "#1 return cabinets \n#2 return top of #1 \n#3 return #1 where  #2 is arched \n#4 return legs \n#5 return #3 that has #4 \n#6 return the  number of  #5 \n#7 return if  #6 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are the small round object and the green cylinder made of the same material?", "output": "#1 return cylinder \n#2 return #1 that is  green \n#3 return object \n#4 return #3 that is  small \n#5 return #4 that is  round \n#6 return material of #2 \n#7 return material of #5 \n#8 return if #6 is  the   same as #7", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: do you fly a 747 from baltimore to san francisco ", "output": "#1 return flights \n#2 return #1 from  baltimore \n#3 return #2 to san francisco \n#4 return #3 that  fly with  a 747", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are more than 8 packages present.", "output": "#1 return packages \n#2 return the  number of  #1 \n#3 return if  #2 is higher than 8", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what flights from san jose to dallas on friday afternoon ", "output": "#1 return flights \n#2 return #1 from  san jose \n#3 return #2 to dallas \n#4 return #3 on  friday \n#5 return #4 in afternoon", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the name of the largest mountain chain in south america?", "output": "#1 return south america \n#2 return mountain chains of #1 \n#3 return size of #2 \n#4 return #2 where  #3 is highest \n#5 return name of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.", "output": "#1 return staff \n#2 return first names of  #1 \n#3 return #1 where  #2 is  Christop \n#4 return problems reported by #3 \n#5 return descriptions of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If a knife is being used to cut through a gelatin dessert that looks like a bottle of soda.", "output": "#1 return knife \n#2 return dessert \n#3 return #2 that is gelatin \n#4 return bottle of soda \n#5 return #3 that looks like #4 \n#6 return if  #1 is being used to  cut through #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Show the phone, room, and building for the faculty named Jerry Prince.", "output": "#1 return faculty \n#2 return #1 named Jerry Prince \n#3 return phone for #2 \n#4 return room for #2 \n#5 return building for #2 \n#6 return #3 ,  #4 ,   #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is vijay 1st movie?", "output": "#1 return vijay \n#2 return movies of #1 \n#3 return the  1st of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Give the name of the department with the lowest budget.", "output": "#1 return departments \n#2 return budgets of  #1 \n#3 return #1 where  #2 is  lowest \n#4 return name of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the shape of the thing that is not a block or a ball?", "output": "#1 return things \n#2 return #1 that are blocks \n#3 return #1 that are balls \n#4 return #1 besides  #2 \n#5 return #4 besides  #3 \n#6 return shape of #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Abuja is capital of which country of the Sahel where the Niger River flows through?", "output": "#1 return the  Sahel \n#2 return countries of #1 \n#3 return capitals of #2 \n#4 return #2 where #3 is Abuja \n#5 return #4 where the  Niger River flows through", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: please list all northwest flights into denver ", "output": "#1 return flights \n#2 return #1 on  northwest \n#3 return #2 into denver", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are carrots on the plate in the image on the left.", "output": "#1 return image on the  left \n#2 return carrots in  #1 \n#3 return plate \n#4 return If #2 are  on #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many more dollars was the first issue for Nth Dimension Media than the last?", "output": "#1 return Nth Dimension Media \n#2 return first issue of #1 \n#3 return last issue of #1 \n#4 return difference of #2 and  #3 in  dollars", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are piles of athletic shoes sitting on the floor in the center of the images.", "output": "#1 return piles of athletic shoes \n#2 return images \n#3 return center of #2 \n#4 return floor \n#5 return #1 that are sitting on #4 \n#6 return #5 that are in  #3 \n#7 return number of  #6 for each  #2 \n#8 return #2 where  #7 is at least one \n#9 return number of  #2 \n#10 return number of  #8 \n#11 return if  #9 is equal to  #10", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many dark blue objects are present?", "output": "#1 return objects \n#2 return #1 that  are dark blue \n#3 return number of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what ground transport is available in charlotte ", "output": "#1 return ground transport \n#2 return #1 in charlotte", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Show each school name, its budgeted amount, and invested amount in year 2002 or after.", "output": "#1 return schools \n#2 return names of #1 \n#3 return budgeted amounts of #1 \n#4 return invested amounts of #1 \n#5 return years of #3 \n#6 return years of #4 \n#7 return #3 where #5 is 2002 or  after \n#8 return #4 where #6 is 2002 or  after \n#9 return #2 ,  #7 ,   #8", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: who starred as paul drake on tv show perry mason?", "output": "#1 return tv show perry mason \n#2 return paul drake of #1 \n#3 return who  starred #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what color is the largest rubber sphere", "output": "#1 return sphere \n#2 return #1 that is  rubber \n#3 return the size of #2 \n#4 return the #2 where #3 is  the  highest \n#5 return the color of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: are all cubes made out of matte?", "output": "#1 return cubes \n#2 return #1 that are matte \n#3 return number of  #1 \n#4 return number of  #2 \n#5 return if #3 is  equal to  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What was Nick Folk's longest field goal?", "output": "#1 return Nick Folk \n#2 return field goals of #1 \n#3 return longest of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Name the parents of the author of Standup Shakespeare.?", "output": "#1 return Standup Shakespeare \n#2 return author of #1 \n#3 return parents of #2 \n#4 return Names of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: how many number of terrorists killed range in five theaters of the war?", "output": "#1 return the  war \n#2 return the  five theaters of #1 \n#3 return terrorists killed of #2 \n#4 return number of  #3 for each theater \n#5 return sum of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the color of the item that is close in the front of the blue cube?", "output": "#1 return blue cube \n#2 return item close in front of #1 \n#3 return color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What happened second: the Russian White Army retreated towards the Repola-Poraj\u00e4rvi area or Juho Vennola's government agreed to have Finland intervene to help dissidents?", "output": "#1 return the  Russian White Army retreated towards the Repola-Poraj\u00e4rvi area \n#2 return Juho Vennola 's government agreed to have Finland intervene towards help dissidents \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is highest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many blue items are there?", "output": "#1 return blue items \n#2 return number of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is behind the matte cube but in front of the metallic cube?", "output": "#1 return cubes \n#2 return #1 that  are matte \n#3 return #1 that  are metallic \n#4 return what is  behind #2 \n#5 return #4 that  is  in front of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the tallest cylinder?", "output": "#1 return cylinders \n#2 return height of #1 \n#3 return #1 where #2 is the  highest \n#4 return color of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what color is the shape in front of the green cube", "output": "#1 return shapes \n#2 return #1 in front of the green cube \n#3 return color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If an adult is drinking a beer with the bottle touching their mouth.", "output": "#1 return adult \n#2 return beer bottle \n#3 return #1 drinking #2 \n#4 return mouth of #3 \n#5 return if  #2 is touching #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: where was janice joplin when she died?", "output": "#1 return janice joplin \n#2 return where  did  #1 die", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many more volunteers were there in 2015 compared to employees?", "output": "#1 return volunteers \n#2 return employees \n#3 return #1 in  2015 \n#4 return #2 in  2015 \n#5 return the  number of  #3 \n#6 return the  number of  #4 \n#7 return the  difference of #5 ,  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are chimpanzees sitting on a suspended tree branch.", "output": "#1 return chimpanzees \n#2 return tree \n#3 return branch of #2 \n#4 return #3 that is suspended \n#5 return #1 sitting on #4 \n#6 return the  number of  #5 \n#7 return if  #6 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If I'm in the governmental jurisdiction where the government includes a position called Missouri Attorney General, what time zone am I in?", "output": "#1 return government position \n#2 return #1 that is Missouri Attorney General \n#3 return governmental jurisdiction of #2 \n#4 return time zone of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What texture is the largest object?", "output": "#1 return objects \n#2 return the  largest #1 \n#3 return the  texture of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Find names of all students who took some course and the course description.", "output": "#1 return students \n#2 return #1 who  took some course  \n#3 return names of  #2 \n#4 return courses of  #2 \n#5 return descriptions of  #4 \n#6 return #3 ,  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many of the objects are blue?", "output": "#1 return blue objects \n#2 return number of  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many people, in terms of percentage, were either of German, Irish, or American ancestry?", "output": "#1 return people \n#2 return ancestry of #1 \n#3 return #2 that is German \n#4 return #2 that is Irish \n#5 return #2 that is American \n#6 return percentage of #3 \n#7 return percentage of #4 \n#8 return percentage of #5 \n#9 return sum of #6 and  #7 \n#10 return sum of #8 and  #9", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what flights does us air have from san francisco to pittsburgh on tuesday ", "output": "#1 return flights \n#2 return #1 from  san francisco \n#3 return #2 to pittsburgh \n#4 return #3 on  tuesday \n#5 return #4 from  us air", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If right image contains one forward facing adult boar and multiple baby boars.", "output": "#1 return right image \n#2 return boars in  #1 \n#3 return #2 that are adult \n#4 return #2 that are baby \n#5 return #3 that are forward facing \n#6 return number of  #5 \n#7 return if  #6 is equal to  one \n#8 return number of  #4 \n#9 return if  #8 is at least two \n#10 return if  both  #7 and #9 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: please show me airlines with flights from boston to denver ", "output": "#1 return flights \n#2 return #1 from  boston \n#3 return #2 to denver \n#4 return airlines of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If two birds are close up, while 4 or more birds are flying high in the distance.", "output": "#1 return birds \n#2 return #1 that are close up \n#3 return number of  #2 \n#4 return if  #3 is equal to  two \n#5 return #1 that are flying high \n#6 return #5 that are in  the  distance \n#7 return number of  #6 \n#8 return if  #7 is at least 4 \n#9 return if  both  #3 and #8 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What shape is the metallic green thing that's behind the gray metallic block?", "output": "#1 return the  gray metallic  block \n#2 return the  metallic  green thing behind of #1 \n#3 return shape of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which language is used in both Guyana and Buffyverse?", "output": "#1 return Guyana \n#2 return Buffyverse \n#3 return languages of both #1 and  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there is atleast one extremely small baby monkey sitting next to a bigger adult sized monkey.", "output": "#1 return monkey  \n#2 return #1 that is  a  baby \n#3 return #2 that is  extremely small \n#4 return #1 that is  adult sized \n#5 return #4 that is  bigger than  #3 \n#6 return #3 sitting next to #5 \n#7 return number of #6 \n#8 return if  #7 is  at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What continent includes the country with the national anthem Hatikvah?", "output": "#1 return national anthem \n#2 return #1 that is Hatikvah \n#3 return country of #2 \n#4 return continent of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many metal things are there?", "output": "#1 return metal things \n#2 return number of  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: how many metallic cubes are there", "output": "#1 return cubes \n#2 return #1 that are metallic \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the shape of the object that does not have a similar shaped item?", "output": "#1 return objects \n#2 return shapes of #1 \n#3 return number of  #1 for each #2 \n#4 return #2 where #3 is one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If an image shows at least one person in a yellow canoe on the water.", "output": "#1 return people \n#2 return canoe \n#3 return #2 that is  yellow \n#4 return #1 in  #3 \n#5 return the  water \n#6 return #4 on #5 \n#7 return images of  #6 \n#8 return number of #6 for each #7 \n#9 return #7 where #8 is  at least one \n#10 return number of #9 \n#11 return if  #10 is  equal to one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Count the number of chip model that do not have wifi.", "output": "#1 return chip model \n#2 return #1 that  have  wifi \n#3 return #1 besides #2 \n#4 return number of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the shape of the item that is the same color as the background?", "output": "#1 return items \n#2 return colors of #1 \n#3 return the    background \n#4 return the    color of #3 \n#5 return #1 where #2 is  the    same as #4 \n#6 return the    shape of #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many touchdowns did Frank Gore run in?", "output": "#1 return Frank Gore \n#2 return touchdown runs of #1 \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: i would like to book a flight from chicago to seattle on june first ", "output": "#1 return flights \n#2 return #1 from chicago \n#3 return #2 to  seattle \n#4 return #3 on june first", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the furthest left shape", "output": "#1 return shapes \n#2 return #1 that  is  furthest left", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are four pillows stacked up in the image on the left.", "output": "#1 return left image \n#2 return pillows in  #1 \n#3 return #2 that are stacked up \n#4 return number of  #3 \n#5 return if  #4 is equal to  four", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Is there a sphere present?", "output": "#1 return sphere \n#2 return is there  any #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: how many yards did tennessee intercept?", "output": "#1 return tennessee \n#2 return intercepts of #1 \n#3 return yards of #2 \n#4 return sum of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are there more spheres or cubes?", "output": "#1 return spheres \n#2 return cubes \n#3 return number of #1 \n#4 return number of #2 \n#5 return which is  highest of #3 ,   #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the largest object with an edge?", "output": "#1 return objects \n#2 return #1 that have an edge \n#3 return size of #2 \n#4 return #2 where #3 is the  highest \n#5 return color of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are all the green objects matte?", "output": "#1 return green objects \n#2 return #1 that are matte \n#3 return number of  #1 \n#4 return number of  #2 \n#5 return if #3 is equal to #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Do any colors match one another?", "output": "#1 return objects \n#2 return colors of #1 \n#3 return number of  #1 for each  #2 \n#4 return if any of #3 are higher than one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what flights are available from boston to denver today ", "output": "#1 return flights \n#2 return #1 from  boston \n#3 return #2 to denver \n#4 return #3 that  are today", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What event happened first, Henry paying homage to Louis or Henry III renouncing his claims concerning Normandy", "output": "#1 return Henry paying homage to Louis \n#2 return Henry III renouncing his claims concerning Normandy \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is lowest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: where did alicia sacromone compete in?", "output": "#1 return alicia sacromone did  compete \n#2 return where  was  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: name a movie of jessica alba?", "output": "#1 return jessica alba \n#2 return movies of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Who had a violent reaction to the expansion and constant seizure of their lands?", "output": "#1 return the  expansion and  constant seizure of their lands \n#2 return who  had a violent reaction to #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which game in the Pacers-Hawks series had the closest margin of victory, game 4, game 5, or game 7?", "output": "#1 return the  Pacers-Hawks series \n#2 return margin of victory of  #1 \n#3 return #2 in  game    4 \n#4 return #2 in  game    5 \n#5 return #2 in  game    7 \n#6 return which is lowest of #3 ,  #4 ,   #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many percentage points had Samsung Share decreased from the first quarter in 2014 into the fourth quarter of 2014?", "output": "#1 return Samsung \n#2 return Share of #1 \n#3 return #2 in  the  first quarter of 2014  \n#4 return #2 in  the  fourth quarter of 2014  \n#5 return percentage of #3 \n#6 return percentage of #4 \n#7 return the  difference of #6 and  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in the left image, both water buffalo have all four feet on the ground and their horns are locked.", "output": "#1 return the  left image \n#2 return water buffalo in  #1 \n#3 return all four feet of  #2 \n#4 return the  ground \n#5 return #2 where #3 are  on #4 \n#6 return horns of  #5 \n#7 return #5 where #6 are  locked \n#8 return number of #7 \n#9 return if  #8 is  equal to two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color is the cube on the right side?", "output": "#1 return cube \n#2 return #1 on  the right side \n#3 return color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many years after the death of Richard Grenville's father did he become Marshal of Calais?", "output": "#1 return the  death of Richard Grenville 's father \n#2 return Richard Grenville become the  Marshal of Calais \n#3 return year of #1 \n#4 return year of #2 \n#5 return the  difference of #4 and  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what band did steve winwood sing for?", "output": "#1 return steve winwood \n#2 return for what band did  #1 sing", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many millions of dollars did Yeman owe Japan after they wrote off some of the debt in 2005?", "output": "#1 return Yeman \n#2 return millions of dollars owed to Japan of  #1 \n#3 return #2 after they wrote off some of the  debt in  2005", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If dogs in at least one image are dressed in clothing.", "output": "#1 return dogs \n#2 return clothing \n#3 return #1 dressed in  #2 \n#4 return if  #3 are in  at least one image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many points did Chicago win the last game they at home against Dallas?", "output": "#1 return Chicago \n#2 return home games of #1 \n#3 return #2 that are against Dallas \n#4 return the  last of #3 \n#5 return points of Chicago of  #4 \n#6 return points of Dallas of  #4 \n#7 return the  difference of #5 and  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what flights go from charlotte to baltimore in the morning ", "output": "#1 return flights \n#2 return #1 from charlotte \n#3 return #2 to  baltimore \n#4 return #3 in the  morning", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the number of cylinders that are gray and metallic?", "output": "#1 return cylinders \n#2 return #1 that are gray \n#3 return #2 that are metallic \n#4 return number of  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what is the shape of the blue object?", "output": "#1 return objects \n#2 return #1 that  are blue \n#3 return the  shape of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the brown thing?", "output": "#1 return things \n#2 return #1 that are brown \n#3 return what  are #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the number of objects that are both cylinder and rubber?", "output": "#1 return rubber cylinder objects \n#2 return number of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: who is kesha cole getting married to?", "output": "#1 return kesha cole \n#2 return who  is getting married to  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: which flights are serviced by american airlines ", "output": "#1 return flights \n#2 return #1 serviced by american airlines", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What shape is the only one that is shiny?", "output": "#1 return shapes \n#2 return #1 that is shiny", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the average fee for a CSU campus in the year of 1996?", "output": "#1 return fees \n#2 return #1 for a CSU campus \n#3 return #2 in the  year of 1996 \n#4 return the  average of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: i need a flight from los angeles to pittsburgh on monday afternoon ", "output": "#1 return flights \n#2 return #1 from  los angeles to pittsburgh \n#3 return #2 on  monday afternoon", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Who ruled first, Edward III or Richard II?", "output": "#1 return when  did Edward III rule \n#2 return when  did Richard II rule \n#3 return which is first of #1 ,  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which Advisor has most of students? List advisor and the number of students.", "output": "#1 return advisors \n#2 return students  of  #1 \n#3 return number of  #2 for each  #1 \n#4 return #1 where #3 is  highest \n#5 return students  of  #4 \n#6 return number of  #5 \n#7 return #4 ,  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: There is only one shape that's yellow; what shape is it?", "output": "#1 return shapes \n#2 return #1 that  is  yellow", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What sports league does the team owned by Jim Irsay play in?", "output": "#1 return Jim Irsay \n#2 return team owned by #1 \n#3 return sports league of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What color are the two biggest shapes?", "output": "#1 return objects \n#2 return size of #1 \n#3 return the  two highest of #2 \n#4 return #1 where #2 is equal to any of #3 \n#5 return color of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many types of shapes are blue?", "output": "#1 return shapes \n#2 return #1 that  are blue \n#3 return types of #2 \n#4 return number of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the combined images include several red and yellow boats pulled up on shore.", "output": "#1 return boats \n#2 return shore \n#3 return #1 that are pulled up one #2 \n#4 return #3 that are red \n#5 return #3 that are yellow \n#6 return #4 , #5 \n#7 return number of  #6 \n#8 return if  #7 is at least two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many years after Fairfax's wife died did he die?", "output": "#1 return Fairfax 's wife died \n#2 return Fairfax died \n#3 return year of #1 \n#4 return year of #2 \n#5 return difference of #3 and  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which actor from Futureworld was married to Betty White?", "output": "#1 return Futureworld \n#2 return actor of #1 \n#3 return #2 who  was  married to Betty White", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the right image contains fewer than a third of the number of baboons on the left.", "output": "#1 return right image \n#2 return baboons in  #1 \n#3 return number of #2 \n#4 return left image \n#5 return baboons in  #4 \n#6 return number of #5 \n#7 return a  third of  #6 \n#8 return If #3 is  lower than #7", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what are the flights available in the morning between boston and denver ", "output": "#1 return flights \n#2 return #1 between boston \n#3 return #2 and  denver \n#4 return #3 in the morning", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If one of the animals stands at the entrance to a hole.", "output": "#1 return animals \n#2 return hole \n#3 return the  entrance of #2 \n#4 return #1 that stands at #3 \n#5 return the  number of  #4 \n#6 return if  #5 is equal to  one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What style of music does the artist of \"Third Stone from the Sun\" play?", "output": "#1 return Third Stone from  the  Sun \n#2 return artist of #1 \n#3 return style of music of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the color of the glossy sphere between two yellow rubber shapes?", "output": "#1 return shapes \n#2 return #1 that  are yellow \n#3 return #2 that  are rubber \n#4 return the  glossy sphere \n#5 return #4 that  is  between two #3 \n#6 return the  color of #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What was one thing done by the Venetians?", "output": "#1 return the  Venetians \n#2 return the  one thing done by #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Find all the cities that have 2 to 4 parks.", "output": "#1 return all cities \n#2 return #1 with  parks \n#3 return #2 with  2 or  more \n#4 return #2 with  4 or  less \n#5 return cities of  both #3 and #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If an image shows exactly six safety pins strung with beads, displayed on purple.", "output": "#1 return safety pins \n#2 return beads \n#3 return #1 that are strung with #2 \n#4 return #3 that are displayed on purple \n#5 return images \n#6 return number of  #4 for each  #5 \n#7 return #5 where  #6 is equal to  six \n#8 return number of  #7 \n#9 return if  #8 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If all the sliding doors are solid wood.", "output": "#1 return doors \n#2 return #1 that are sliding \n#3 return #2 that are solid wood \n#4 return the  number of  #2 \n#5 return the  number of  #3 \n#6 return if  #4 is equal to  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there is at least one vase with white flowers in it sitting on a table.", "output": "#1 return vase \n#2 return flowers \n#3 return #2 that are white \n#4 return #1 with #3 \n#5 return table \n#6 return #4 sitting on #5 \n#7 return the  number of  #6 \n#8 return if  #7 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Show the dates of performances with attending members whose roles are \"Violin\".", "output": "#1 return performances \n#2 return attending members of  #1 \n#3 return roles of  #2 \n#4 return #1 where #3 is  Violin \n#5 return dates of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If at least one train in the image on the left has a full length white stripe.", "output": "#1 return the  image on the left \n#2 return trains in  #1 \n#3 return stripe \n#4 return #3 that is white \n#5 return length of #4 \n#6 return length of #2 \n#7 return #4 where  #5 is equal to  #6 \n#8 return #2 that have #7 \n#9 return number of  #8 \n#10 return if  #9 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: winner of the 2nd punic war?", "output": "#1 return punic wars \n#2 return the  2nd of #1 \n#3 return winner of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Is the life expectancy at birth higher among males or females?", "output": "#1 return males \n#2 return females \n#3 return life expectancy at birth of #1 \n#4 return life expectancy at birth of #2 \n#5 return which is higher of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there are two windows on the left side of the door in at least one of the pictures.", "output": "#1 return windows \n#2 return door \n#3 return #1 that are on the  left side of #2 \n#4 return pictures \n#5 return number of  #3 for each  #4 \n#6 return #4 where  #5 is equal to  two \n#7 return number of  #6 \n#8 return if  #7 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are there two objects that differ in size only?", "output": "#1 return objects \n#2 return #1 that only differ in size \n#3 return number of  #2 \n#4 return if #3 is  at least two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are all of the balls the same size?", "output": "#1 return balls \n#2 return sizes of #1 \n#3 return are all of #2 the same", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the saxophone on the right side is on a black background.", "output": "#1 return saxophone \n#2 return #1 that is on the  right side \n#3 return background of #2 \n#4 return if  #3 is black", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which problems are reported by the staff with last name \"Bosco\"? Show the ids of the problems.", "output": "#1 return problems  \n#2 return staff who  reported #1 \n#3 return last names of  #2 \n#4 return #1 where #3 is  Bosco \n#5 return ids of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which color object is shiny?", "output": "#1 return objects \n#2 return #1 that are shiny \n#3 return color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many journalists are there?", "output": "#1 return journalists \n#2 return number of  #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Find names and times of trains that run through stations for the local authority Chiltern.", "output": "#1 return stations \n#2 return #1 for the  local authority Chiltern \n#3 return trains that run through #2 \n#4 return names of #3 \n#5 return times of #3 \n#6 return #4 ,  #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the city_code of the city that the most students live in?", "output": "#1 return cities \n#2 return students that  live in #1 \n#3 return number of  #2 for each  #1 \n#4 return #1 where #3 is  highest \n#5 return city_code of  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: how many total  objects are in the picture", "output": "#1 return objects \n#2 return number of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are all of the cubes shiny and large?", "output": "#1 return cubes \n#2 return if  all #1 are shiny \n#3 return if  all #1 are large \n#4 return #2 and #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the left image contains both a bottle and a glass.", "output": "#1 return bottle \n#2 return glass \n#3 return if  #1 is in  the  left image \n#4 return if  #2 is in  the  left image \n#5 return if  both  #3 and #4 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Find the number of employees of each gender whose salary is lower than 50000.", "output": "#1 return employees \n#2 return salaries of  #1 \n#3 return #1 where  #2 is  lower than than  50000 \n#4 return genders of  #3 \n#5 return number of #3 for each #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which player scored more field goals, Nate Kaeding or Stephen Gostkowski?", "output": "#1 return Nate Kaeding \n#2 return Stephen Gostkowski \n#3 return field goals of #1 \n#4 return field goals of #2 \n#5 return number of  #3 \n#6 return number of  #4 \n#7 return which is more of #5 ,  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which shape is made of both metal and rubber?", "output": "#1 return objects \n#2 return #1 that are metal \n#3 return #1 that are rubber \n#4 return shape of both #2 and  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which block is the smallestt", "output": "#1 return blocks \n#2 return size of #1 \n#3 return #1 where #2 is lowest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many passes did Michael Irvin and Alvin Harper catch in all during the season?", "output": "#1 return Michael Irvin \n#2 return Alvin Harper \n#3 return catches of #1 \n#4 return catches of #2 \n#5 return #3 in  the  season \n#6 return #4 in  the  season \n#7 return number of  #5 \n#8 return number of  #6 \n#9 return sum of #7 and  #8", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Find the customer who started a policy most recently.", "output": "#1 return customers \n#2 return when  #1 started a policy \n#3 return #1 where #2 is  most recently", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What object is between the large and small cylinders?", "output": "#1 return objects \n#2 return cylinders \n#3 return #2 that  are small \n#4 return #2 that  are large \n#5 return #1 that  is  in between #3 and #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which town did Vendome attack first, Borgoforte or Guastalla?", "output": "#1 return Vendome did attack Borgoforte \n#2 return Vendome did attack Guastalla \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is lowest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If each image shows a white dog standing without use of an aid or prosthetic, and the left image shows a three-legged dog on green grass.", "output": "#1 return dog  \n#2 return #1 that is white \n#3 return aid \n#4 return prosthetic \n#5 return #2 standing without use of #3 \n#6 return #2 standing without use of #4 \n#7 return #5 , #6 \n#8 return images of #7 \n#9 return images \n#10 return number of  #8 \n#11 return number of  #9 \n#12 return if  #10 is equal to  #11 \n#13 return #1 that is three-legged \n#14 return grass \n#15 return #14 that is green \n#16 return #13 on #15 \n#17 return if  #16 is in  the  left image  \n#18 return if  both  #12 and #17 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what color is the smallestt object in the picture?", "output": "#1 return objects in  the  picture \n#2 return the  smallestt of #1 \n#3 return color of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Find the year and semester when offers the largest number of courses.", "output": "#1 return semesters \n#2 return courses that  #1 offer \n#3 return number of  #2 for each #1 \n#4 return #1 where #3 is  the  largest \n#5 return years \n#6 return courses offer in #5 \n#7 return number of  #6 for each #5 \n#8 return #5 where #7 is  the  largest \n#9 return #8 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many more Russians were there compared to Prussians at the Battle of Kay?", "output": "#1 return the  Battle of Kay \n#2 return Russians of #1 \n#3 return Prussians of #1 \n#4 return difference of #2 and  #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What happened first: Holy Alliance or League of the Three Emperors?", "output": "#1 return the  Holy Alliance \n#2 return the  League of the Three Emperors \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is the  lowest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: when did mount vesuvius erupt devastate pomeii?", "output": "#1 return mount vesuvius erupt devastates pomeii \n#2 return date of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there is a single floral binder in the image on the right.", "output": "#1 return right image \n#2 return floral binder in  #1 \n#3 return number of  #2 \n#4 return if  #3 is equal to  one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Which parties have delegates in both the \"Appropriations\" committee and the \"Economic Matters\" committee?", "output": "#1 return parties \n#2 return delegates of #1 \n#3 return #2 in the Appropriations committee \n#4 return #2 in the Economic Matters committee \n#5 return #1 of both #3 and  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Show the most common headquarter for companies.", "output": "#1 return companies \n#2 return headquarters of #1 \n#3 return number of #1 for each #2 \n#4 return #2 where #3 is  the highest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many months after de Villars quit the army did he die?", "output": "#1 return de Villars \n#2 return when  #1 quit the  army \n#3 return when  #1 did die \n#4 return the  month of #2 \n#5 return the  month of #3 \n#6 return the  difference of #5 and  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Name the hometown of the gymnast who is sponsored by Circuit City.?", "output": "#1 return Circuit City \n#2 return gymnast that is sponsored by #1 \n#3 return hometown of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are there more rubber objects than metallic objects?", "output": "#1 return rubber objects  \n#2 return metallic objects  \n#3 return number of  #1 \n#4 return number of  #2 \n#5 return is  #3 higher than #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What World War II Soviet Leader was buried in the Novodevichy Cemetery?", "output": "#1 return World War II Soviet Leader \n#2 return where was  #1 buried in  \n#3 return #1 where #2 is Novodevichy Cemetery", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many touchdown passes did McNabb throw?", "output": "#1 return McNabb \n#2 return touchdown passes of #1 \n#3 return number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: who was the youngest supporting actress to win a oscar?", "output": "#1 return actresses \n#2 return #1 that are supporting \n#3 return oscar \n#4 return #2 that did  win #3 \n#5 return the  youngest of #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: how many rivers are in colorado ", "output": "#1 return rivers \n#2 return #1 in colorado \n#3 return the  number of  #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If one door is glass.", "output": "#1 return doors \n#2 return #1 that are glass \n#3 return number of  #2 \n#4 return if  #3 is equal to  one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many is the difference in yards of the TD run by Harvin and the TD pass caught by Quarless?", "output": "#1 return Harvin \n#2 return TD  run of #1 \n#3 return yards of #2 \n#4 return Quarless \n#5 return TD  pass caught by #4 \n#6 return yards of #5 \n#7 return difference of #3 and  #6", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there is no more than three wolves in the right image.", "output": "#1 return the  right image \n#2 return wolves in  #1 \n#3 return number of  #2 \n#4 return if  #3 is at most three", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: what color is the shape closest to the cyan sphere", "output": "#1 return the  cyan sphere \n#2 return the  shapes besides #1 \n#3 return #2 that  is  closest to  #1 \n#4 return the  color of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What are the dates with a maximum temperature higher than 85?", "output": "#1 return dates \n#2 return maximum temperature of  #1 \n#3 return #1 where #2 is  higher than 85", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: if all the red objects are remove, which color is left?", "output": "#1 return objects \n#2 return #1 that are red \n#3 return #1 besides  #2 \n#4 return color of #3", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If dogs are playing in at least one of the images.", "output": "#1 return dogs \n#2 return #1 that are  playing \n#3 return If #2 is  in  at least one image", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What is the color of the smallestt ball?", "output": "#1 return smallestt ball \n#2 return color of #1", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Of Jane Austen's books that have been made into movies, which has the longest run time?", "output": "#1 return Jane Austen \n#2 return books of #1 \n#3 return movies made into of #2 \n#4 return run times of #3 \n#5 return #3 where #4 is the  highest", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: show me the flights from toronto to cincinnati ", "output": "#1 return flights \n#2 return #1 from  toronto \n#3 return #2 to cincinnati", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in at least one image there are four rows of beer.", "output": "#1 return rows of  beer \n#2 return images of  #1 \n#3 return number of #1 for each #2 \n#4 return #2 where #3 is  equal to four \n#5 return number of #4 \n#6 return if  #5 is  at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many of the cubes are the same material as the blue sphere?", "output": "#1 return cubes \n#2 return blue sphere \n#3 return material of #1 \n#4 return material of #2 \n#5 return #1 where  #3 is  the   same as #4 \n#6 return number of #5", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many total yards did Michael Vick have?", "output": "#1 return Michael Vick \n#2 return yards of #1 \n#3 return sum of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If all trains have a reddish front, and no image shows the front of more than one train.", "output": "#1 return trains \n#2 return front  of #1 \n#3 return #1 where  #2 is reddish \n#4 return number of  #1 \n#5 return number of  #3 \n#6 return if  #4 is equal to  #5 \n#7 return images \n#8 return number of  #2 for each  #7 \n#9 return #7 where  #8 is higher than one \n#10 return number of  #9 \n#11 return if  #10 is equal to  zero \n#12 return if  both  #6 and #11 are true", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If the left image contains at least two wolves.", "output": "#1 return left image \n#2 return wolves in  #1 \n#3 return number of  #2 \n#4 return if  #3 is at least two", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If in at least one image there are at least three women of color playing a fully metal drum.", "output": "#1 return women of color \n#2 return drum \n#3 return #2 that is fully metal \n#4 return #1 that are playing #3 \n#5 return images \n#6 return number of  #4 for each  #5 \n#7 return #5 where  #6 is at least three \n#8 return number of  #7 \n#9 return if  #8 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If both images show golf balls on a grass-type background.", "output": "#1 return golf balls \n#2 return background \n#3 return #2 that is grass-type \n#4 return #1 on #3 \n#5 return if  #4 is in  both  images", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: If there is a dog standing next to a fence.", "output": "#1 return dogs \n#2 return fence \n#3 return #1 that is standing next to  #2 \n#4 return number of  #3 \n#5 return if  #4 is at least one", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: What happened first, the Act of Settlement or the Papists Act?", "output": "#1 return the  Act  of Settlement \n#2 return the  Papists Act  \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is lowest of #3 ,  #4", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: Are all of the objects present spheres?", "output": "#1 return objects present \n#2 return spheres present \n#3 return number of  #1 \n#4 return number of  #2 \n#5 return if  #3 and #4 are equal", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: How many credits does the department offer?", "output": "#1 return department \n#2 return credits #1 offers \n#3 return the number of #2", "category": "Question Decomposition 803.json"}, {"instruction": "In this task you will break down a question into the basic steps required to answer it.\n A question decomposition is a numbered list of operations that must be performed to answer the original question. Imagine explaining your question to a friendly droid by listing each action it should take in order for the question to be answered. Each step in our decomposition should refer to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.)\n Here are the list of step templates and their description:\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "question: all right do you have a flight from atlanta to boston ", "output": "#1 return flight \n#2 return #1 from  atlanta \n#3 return #2 to  boston", "category": "Question Decomposition 803.json"}]