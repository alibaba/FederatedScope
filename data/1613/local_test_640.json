[{"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Moderately priced The Rice Boat serves Indian food of a good standard near the Express by Holiday Inn in the city centre. But is not child friendly.", "output": "name[The Rice Boat], food[Indian], priceRange[moderate], customer rating[3 out of 5], area[city centre], familyFriendly[no], near[Express by Holiday Inn]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Rice Boat is an Indian restaurant in the cheap price range with an average customer rating.  It is family friendly and located in the city centre near Express by Holiday Inn.", "output": "name[The Rice Boat], food[Indian], priceRange[cheap], customer rating[average], area[city centre], familyFriendly[no], near[Express by Holiday Inn]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Yes there's a cheap family friendly restaurant near The Bakers, it's called The Golden Curry and serves French food.", "output": "name[The Golden Curry], food[French], priceRange[cheap], familyFriendly[yes], near[The Bakers]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "A family friendly coffee shop,  with  prices under \u00a320 and  located near The Bakers. Named Giraffe, it has been rated law by customers.", "output": "name[Giraffe], eatType[coffee shop], priceRange[less than \u00a320], customer rating[low], familyFriendly[yes], near[The Bakers]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Located in riverside, The Golden Palace is a restaurant with a 5 out of 5 rating.", "output": "name[The Golden Palace], eatType[restaurant], customer rating[5 out of 5], area[riverside]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Cocum is a family friendly restaurant and has a customer rating of 5 out of 5.", "output": "name[Cocum], eatType[restaurant], customer rating[5 out of 5], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Located near The Bakers is a kid friendly restaurant called The Plough. It has a price range of \u00a320-25.", "output": "name[The Plough], eatType[restaurant], priceRange[\u00a320-25], familyFriendly[yes], near[The Bakers]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Zizzi is a family-friendly coffee shop located in riverside with an average rating and prices less than \u00a320.", "output": "name[Zizzi], eatType[coffee shop], priceRange[less than \u00a320], customer rating[average], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Midsummer House is a fast -food restaurant with a customer rating of 1 out of 5. It is situated near All Bar One which has a high price range.", "output": "name[Midsummer House], food[Fast food], priceRange[high], customer rating[1 out of 5], near[All Bar One]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "In the riverside area near The Rice Boat is an Italian restaurant called Loch Fyne that prepare Italian food.", "output": "name[Loch Fyne], food[Italian], customer rating[1 out of 5], area[riverside], near[The Rice Boat]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Golden Curry is a not so family-friendly  Fast food place with a average rating.  It is located  by the riverside near Caf\u00e9 Rouge.", "output": "name[The Golden Curry], food[Fast food], customer rating[average], area[riverside], familyFriendly[no], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "In the city centre, if you like Japanese food and enjoy a  relaxed pub like environment, try the Green Man, located near Caf\u00e9 Rouge", "output": "name[Green Man], eatType[pub], food[Japanese], area[city centre], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Wildwood public house is a one star establishment which serves food.", "output": "name[Wildwood], eatType[pub], food[Italian], priceRange[high], customer rating[1 out of 5]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There is an Indian food restaurant called The Cambridge Blue. Although, they do have a low customer rating.", "output": "name[The Cambridge Blue], eatType[restaurant], food[Indian], customer rating[low]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The adult-friendly coffee shop, The Punter, serves expensive but averagely-rated Indian Dishes near Caf\u00e9 Sicilia.", "output": "name[The Punter], eatType[coffee shop], food[Indian], priceRange[high], customer rating[average], familyFriendly[no], near[Caf\u00e9 Sicilia]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Alimentum has a low customer rating, their price range is less than  \u00a320 they serve Italian food,they are located in city centre near Yippee Noodle Bar.", "output": "name[Alimentum], food[Italian], priceRange[less than \u00a320], customer rating[low], area[city centre], near[Yippee Noodle Bar]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "A coffee shop  located near the Riverside area  Fitzbillies is in the low price range and customers have rated it poorly. Its name is Fitzbillies.", "output": "name[Fitzbillies], eatType[coffee shop], food[Fast food], priceRange[less than \u00a320], customer rating[low], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Phoenix is a fast food place located in the riverside area. They have moderate pricing and a customer rating of 3 out of 5.", "output": "name[The Phoenix], food[Fast food], priceRange[moderate], customer rating[3 out of 5], area[riverside]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Fitzbillies is a French coffee shop in riverside that has average reviews. It is kid-friendly and is in the \u00a320 price range.", "output": "name[Fitzbillies], eatType[coffee shop], food[French], priceRange[less than \u00a320], customer rating[average], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Olive Grove is a pub specializing in fast food. It's located in the city centre with a moderate price range. The Olive Grove is not a kid friendly restaurant.", "output": "name[The Olive Grove], eatType[pub], food[Fast food], priceRange[moderate], area[city centre], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Golden Curry near The Bakers are not children friendly,they serve French food with the price Range more than  \u00a330.", "output": "name[The Golden Curry], food[French], priceRange[more than \u00a330], familyFriendly[no], near[The Bakers]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Browns Cambridge serve expensive Italian food with a low rating.", "output": "name[Browns Cambridge], food[Italian], priceRange[high], customer rating[1 out of 5]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Eagle is a coffee shop near the Burger King in the riverside area. It is child friendly and has a customer rating of 3 out of 5. It serves French food and has a high price range.", "output": "name[The Eagle], eatType[coffee shop], food[French], priceRange[high], customer rating[3 out of 5], area[riverside], familyFriendly[yes], near[Burger King]", "category": "Information Extraction 1574.json"}]