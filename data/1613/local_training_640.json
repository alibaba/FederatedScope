[{"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "coffee shop Fitzbillies can be found in the riverside area of the city. It provides fast food and its prices are high. It has a low customer rating and is not child-friendly.", "output": "name[Fitzbillies], eatType[coffee shop], food[Fast food], priceRange[high], customer rating[1 out of 5], area[riverside], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Cocum is a pub with high customer ratings, ranges in price from \u00a320-25 and is not kid friendly.", "output": "name[Cocum], eatType[pub], priceRange[\u00a320-25], customer rating[high], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The inexpensive Travellers Rest Beefeater is in the riverside area near Caf\u00e9 Adriatic and serves average food.", "output": "name[Travellers Rest Beefeater], priceRange[less than \u00a320], customer rating[average], area[riverside], near[Caf\u00e9 Adriatic]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Golden Curry serves Fast food and is located in the city centre near Caf\u00e9 Rouge. It is not family-friendly with a rating of 5 out of 5.", "output": "name[The Golden Curry], food[Fast food], customer rating[5 out of 5], area[city centre], familyFriendly[no], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Strada is  located near Rainbow Vegetarian Caf\u00e9. It serves Japanese food, is family friendly, is expensive and has a high customer rating.", "output": "name[Strada], food[Japanese], priceRange[more than \u00a330], customer rating[5 out of 5], familyFriendly[yes], near[Rainbow Vegetarian Caf\u00e9]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Chinese restaurant, The Rice Boat, near the Express by Holiday Inn at the City Centre, has a reasonable price range of \u00a320-25, with a high customer rating. Children welcome.", "output": "name[The Rice Boat], food[Chinese], priceRange[\u00a320-25], customer rating[high], area[city centre], familyFriendly[yes], near[Express by Holiday Inn]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Alimentum is a mid-priced 1 star restaurant located near Yippee Noodle Bar.", "output": "name[Alimentum], food[Fast food], priceRange[moderate], customer rating[1 out of 5], area[riverside], near[Yippee Noodle Bar]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Midsummer House is an English restaurant in the cheap price range with a 5 out of 5 customer rating. It is located near All Bar One.", "output": "name[Midsummer House], food[English], priceRange[cheap], customer rating[5 out of 5], near[All Bar One]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Golden Curry, located near The Bakers, offers wine, cheese platters, and fondue for a mid-level price.", "output": "name[The Golden Curry], food[French], priceRange[moderate], familyFriendly[no], near[The Bakers]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Do not visit The Eagle, they are a low rate fast food eatery.", "output": "name[The Eagle], food[Fast food], customer rating[low]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Rice Boat is an Italian, non kid friendly moderate priced restaurant that is in the riverside area and near Express by Holiday Inn. It rates a 1 out of 5.", "output": "name[The Rice Boat], food[Italian], priceRange[moderate], customer rating[1 out of 5], area[riverside], familyFriendly[no], near[Express by Holiday Inn]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The moderately priced fast food establishment The Rice Boat can be found in the riverside area neat the Express by Holiday Inn. it is kids friendly and has been rated 1 out of 5 by previous customers.", "output": "name[The Rice Boat], food[Fast food], priceRange[moderate], customer rating[1 out of 5], area[riverside], familyFriendly[yes], near[Express by Holiday Inn]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Zizzis Italian restaurant  has an average customer rating as a pub style restaurant that is not classified as family-friendly.", "output": "name[Zizzi], eatType[pub], food[Italian], customer rating[average], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There is a family friendly restaurant The Golden Curry near The Bakers.  It is inexpensive.", "output": "name[The Golden Curry], food[Italian], priceRange[less than \u00a320], familyFriendly[yes], near[The Bakers]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Found a low-priced Chinese restaurant near the Caf\u00e9 Rouge pub. It's called The Plough and is family friendly.", "output": "name[The Plough], eatType[pub], food[Chinese], priceRange[cheap], familyFriendly[yes], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "I heard of this coffee shop called The Vaults near Caf\u00e9 Brazil in riverside, its moderately priced but only has a 1 star customer rating.", "output": "name[The Vaults], eatType[coffee shop], priceRange[moderate], customer rating[1 out of 5], area[riverside], near[Caf\u00e9 Brazil]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Browns Cambridge is a adults only Indian coffee shop in the riverside area. Located near Crowne Plaza Hotel. The customer rating is low.", "output": "name[Browns Cambridge], eatType[coffee shop], food[Indian], customer rating[low], area[riverside], familyFriendly[no], near[Crowne Plaza Hotel]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Golden Curry provides Indian food Its customer rating is low.", "output": "name[The Golden Curry], food[Indian], customer rating[low], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "With high prices, French food and 3 out of 5 stars, The Waterman is a child unfriendly eatery in the city centre.", "output": "name[The Waterman], food[French], priceRange[high], customer rating[3 out of 5], area[city centre], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "For a pricey pub serving Indian, look for The Olive Grove in the city centre. please note, this venue is not child friendly.", "output": "name[The Olive Grove], eatType[pub], food[Indian], priceRange[high], area[city centre], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Taste of Cambridge is in the riverside area, near The Sorrento. It is a pub that is not family-friendly.", "output": "name[Taste of Cambridge], eatType[pub], area[riverside], familyFriendly[no], near[The Sorrento]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Fitzbillies is a fast food coffee shop for adults. It has a cheap price range and a rating of average. It is in Riverside.", "output": "name[Fitzbillies], eatType[coffee shop], food[Fast food], priceRange[cheap], customer rating[average], area[riverside], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Aromi, a coffee shop located in the Riverside area, serves fast food, and is oriented toward an adult clientele.  Customers do not give it a high rating.", "output": "name[Aromi], eatType[coffee shop], food[Fast food], customer rating[low], area[riverside], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There is a five star restaurant called Alimentum located near Yippee Noodle Bar.", "output": "name[Alimentum], food[Italian], priceRange[more than \u00a330], customer rating[high], area[riverside], near[Yippee Noodle Bar]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The one star The Twenty Two is near The Rice Boat. It is cheap but not family friendly.", "output": "name[The Twenty Two], priceRange[less than \u00a320], customer rating[low], area[riverside], familyFriendly[no], near[The Rice Boat]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The English pub Zizzi has a 5 out of 5 rating but is not family-friendly.", "output": "name[Zizzi], eatType[pub], food[English], customer rating[5 out of 5], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Cocum is a kids-friendly pub in the medium price range. Its customer rating is three out of five.", "output": "name[Cocum], eatType[pub], priceRange[\u00a320-25], customer rating[3 out of 5], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Bibimbap House near The Rice Boat in riverside does Italian food.", "output": "name[Bibimbap House], food[Italian], area[riverside], near[The Rice Boat]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Wrestlers provides Indian food in the cheap price range. Its customer rating is 5 out of 5.", "output": "name[The Wrestlers], food[Indian], priceRange[cheap], customer rating[5 out of 5], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Loch Fyne is a French restaurant.", "output": "name[Loch Fyne], eatType[restaurant], food[French], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Olive Grove is a children friendly pub in Riverside. They serve fast food in the high price range.", "output": "name[The Olive Grove], eatType[pub], food[Fast food], priceRange[high], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "At city centre near The Sorrento, a coffee shop called The Mill provides French food which has a price range of more than \u00a330.", "output": "name[The Mill], eatType[coffee shop], food[French], priceRange[more than \u00a330], area[city centre], near[The Sorrento]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Located in the Riverside area, The Rice Boat serves Chinese food and is family friendly. They have a low customer rating.", "output": "name[The Rice Boat], food[Chinese], customer rating[low], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Green Man by a riverside near All Bar One is child Friendly serving Japanese food with a high price Range.", "output": "name[Green Man], food[Japanese], priceRange[high], area[riverside], familyFriendly[yes], near[All Bar One]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Alimentum is a cheap, 5 star noodle restaurant that is near Yippee Noodle Bar.", "output": "name[Alimentum], food[Italian], priceRange[cheap], customer rating[5 out of 5], area[riverside], near[Yippee Noodle Bar]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Phoenix is a highly rated restaurant serving British food, it is located on the outskirts of the city centre.", "output": "name[The Phoenix], food[English], customer rating[5 out of 5], area[riverside]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Green Man is a moderately priced, non kid friendly Chinese restaurant located in city centre near All Bar One.", "output": "name[Green Man], food[Chinese], priceRange[moderate], area[city centre], familyFriendly[no], near[All Bar One]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "For \u00a320-25, The Rice Boat serves English cuisine in Riverside near Express by Holiday Inn. Not kids friendly.", "output": "name[The Rice Boat], food[English], priceRange[\u00a320-25], customer rating[high], area[riverside], familyFriendly[no], near[Express by Holiday Inn]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Amongst children-friendly  restaurants with prices more than \u00a330 standing Japanese Loch Fyne.", "output": "name[Loch Fyne], eatType[restaurant], food[Japanese], priceRange[more than \u00a330], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Near The Six Bells is a venue that is children friendly named The Golden Curry.", "output": "name[The Golden Curry], familyFriendly[yes], near[The Six Bells]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Dumpling Tree is a moderate priced Indian restaurant.", "output": "name[The Dumpling Tree], eatType[restaurant], food[Indian], priceRange[moderate]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There is an average priced Italian restaurant called The Vaults, that also provides a family friendly atmosphere.", "output": "name[The Vaults], food[Italian], priceRange[\u00a320-25], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "A pub near Caf\u00e9 Brazil with low prices is The Cambridge Blue.", "output": "name[The Cambridge Blue], eatType[pub], food[Indian], priceRange[\u00a320-25], near[Caf\u00e9 Brazil]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Chinese food serving Strada, which is child-friendly, is located near Rainbow Vegetarian Caf\u00e9. It has a high price range and an average customer rating.", "output": "name[Strada], food[Chinese], priceRange[high], customer rating[average], familyFriendly[yes], near[Rainbow Vegetarian Caf\u00e9]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Pub called Giraffe is a Fast food, family-friendly and located in the city centre", "output": "name[Giraffe], eatType[pub], food[Fast food], area[city centre], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Golden Curry serves English food and is family-friendly, and conveniently located in the center of town near the Caf\u00e9 Rouge, but it has a low customer rating.", "output": "name[The Golden Curry], food[English], customer rating[low], area[city centre], familyFriendly[yes], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Wildwood is an English pub in the low price range with high customer ratings.", "output": "name[Wildwood], eatType[pub], food[English], priceRange[cheap], customer rating[5 out of 5]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Loch Fyne restaurant serves Chinese food. It is child friendly and high priced.", "output": "name[Loch Fyne], eatType[restaurant], food[Chinese], priceRange[high], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Wildwood is a pub with a 5 star rating. It serves food and is in the average price range. It is in the city centre.", "output": "name[Wildwood], eatType[pub], food[English], priceRange[\u00a320-25], customer rating[high]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Eagle is a coffee shop that servers Indian food in the modern price range. Yes it is kids friendly. Its customer rating is 1 out of 5. It is located by the riverside near Burger King", "output": "name[The Eagle], eatType[coffee shop], food[Indian], priceRange[moderate], customer rating[1 out of 5], area[riverside], familyFriendly[yes], near[Burger King]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "eggs and beans are low priced breakfasts at Strada nearby the Rainbow Vegetarian Caf\u00e9.", "output": "name[Strada], food[English], priceRange[moderate], customer rating[1 out of 5], familyFriendly[yes], near[Rainbow Vegetarian Caf\u00e9]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Cocum is a coffee shop providing Indian food in the more than \u00a330 price range. Its customer rating is high.", "output": "name[Cocum], eatType[coffee shop], food[Indian], priceRange[more than \u00a330], customer rating[high], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Dumpling Tree is an Italian restaurant that costs more than 30 Euros.", "output": "name[The Dumpling Tree], eatType[restaurant], food[Italian], priceRange[more than \u00a330]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "A good choice for Chinese food is The Wrestlers. It is children-friendly, with high customer ratings and with prices ranging around \u00a330.", "output": "name[The Wrestlers], food[Chinese], priceRange[more than \u00a330], customer rating[high], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Low priced Travellers Rest Beefeater is in city centre located near Caf\u00e9 Adriatic. It is low priced with an average customer rating.", "output": "name[Travellers Rest Beefeater], priceRange[less than \u00a320], customer rating[average], area[city centre], near[Caf\u00e9 Adriatic]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Strada is a pub with a high customer rating that serves French food near Yippee Noodle Bar.", "output": "name[Strada], eatType[pub], food[French], customer rating[high], near[Yippee Noodle Bar]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Blue Spice is a restaurant that cooks Japanese food it is located by the riverside and the price range is moderate", "output": "name[Blue Spice], food[Japanese], priceRange[moderate], area[riverside]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "With a customer rating of 3 out of 5 you can expect to dine at Cocum- a non child friendly coffee shop with a high price range serving French food.", "output": "name[Cocum], eatType[coffee shop], food[French], priceRange[high], customer rating[3 out of 5], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Giraffe is a high-priced restaurant located by The Six Bells.", "output": "name[Giraffe], eatType[restaurant], priceRange[high], near[The Six Bells]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Cocum is a coffee shop serving high quality Italian food that is low priced and family friendly.", "output": "name[Cocum], eatType[coffee shop], food[Italian], priceRange[cheap], customer rating[5 out of 5], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Near the Clare Hall along the riverside 'Bibimbap House' can be found serving fast foods at low prices.", "output": "name[Bibimbap House], food[Fast food], priceRange[less than \u00a320], area[riverside], near[Clare Hall]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "coffee shop, Clowns, located in Riverside near Clare Hall, has an average customer rating and provides Indian food", "output": "name[Clowns], eatType[coffee shop], food[Indian], customer rating[average], area[riverside], near[Clare Hall]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Strada is a five-star restaurant located near Rainbow Vegetarian Caf\u00e9.", "output": "name[Strada], food[French], priceRange[cheap], customer rating[5 out of 5], familyFriendly[yes], near[Rainbow Vegetarian Caf\u00e9]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "With an average customer rating, Wildwood offers French pub entries for less than \u00a320", "output": "name[Wildwood], eatType[pub], food[French], priceRange[less than \u00a320], customer rating[average]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "A 3 out 5 rating Japanese restaurant in the riverside area is The Waterman. They are not kid friendly but have a price range of 20 - 25 pounds.", "output": "name[The Waterman], food[Japanese], priceRange[\u00a320-25], customer rating[3 out of 5], area[riverside], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Cotto located near the riverside sells Italian food at a moderate price with a customer rating of 3 out of 5 . It is a coffee shop. Situated close to The Portland Arms.", "output": "name[Cotto], eatType[coffee shop], food[Italian], priceRange[moderate], customer rating[3 out of 5], area[riverside], near[The Portland Arms]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Vaults coffee shop is situated near Caf\u00e9 Brazil.  Here you can eat for \u00a320-\u00a325.  The Vaults has a high customer rating.", "output": "name[The Vaults], eatType[coffee shop], priceRange[\u00a320-25], customer rating[high], area[riverside], near[Caf\u00e9 Brazil]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Fitzbillies is a French coffee shop in the Riverside area. Not child friendly, low customer rating, price range is more than \u00a330.", "output": "name[Fitzbillies], eatType[coffee shop], food[French], priceRange[more than \u00a330], customer rating[low], area[riverside], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Fitzbillies is an Italian selling food for under 20 pounds and is located near The Six Bells.", "output": "name[Fitzbillies], food[Italian], priceRange[less than \u00a320], near[The Six Bells]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Dumpling Tree is an Indian restaurant with cheap prices", "output": "name[The Dumpling Tree], eatType[restaurant], food[Indian], priceRange[more than \u00a330]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Moderately priced, The Phoenix Sushi restaurant sits next to the river.", "output": "name[The Phoenix], food[Japanese], priceRange[\u00a320-25], customer rating[3 out of 5], area[riverside]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Green Man pub near the city center is the best Italian Caf\u00e9 Rouge", "output": "name[Green Man], eatType[pub], food[Italian], area[city centre], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Cambridge Blue is a moderately priced Indian pub located next to Caf\u00e9 Brazil.", "output": "name[The Cambridge Blue], eatType[pub], food[Indian], priceRange[moderate], near[Caf\u00e9 Brazil]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "A low priced Italian restaurant located in the centre of the city near All Bar One, Green Man is not family-friendly.", "output": "name[Green Man], food[Italian], priceRange[less than \u00a320], area[city centre], familyFriendly[no], near[All Bar One]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Riverside offers this affordably priced pub, The Golden Palace located near Rainbow Vegetarian Caf\u00e9.", "output": "name[The Golden Palace], eatType[pub], priceRange[moderate], area[riverside], near[Rainbow Vegetarian Caf\u00e9]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Cocum is a child friendly restaurant. It has a high customer rating.", "output": "name[Cocum], eatType[restaurant], customer rating[high], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Strada is a moderately priced restaurant with a customer rating of 1 out of 5. It is not recommended for kids.", "output": "name[Strada], priceRange[moderate], customer rating[1 out of 5], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There is coffee shop called Browns Cambridge that serves Indian food. They are located in the city centre, near Crowne Plaza Hotel. Its customer rating is low.", "output": "name[Browns Cambridge], eatType[coffee shop], food[Indian], customer rating[low], area[city centre], familyFriendly[yes], near[Crowne Plaza Hotel]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "An inexpensive Indian restaurant, The Waterman is in the city centre. It is a highly rated, family friendly place.", "output": "name[The Waterman], food[Indian], priceRange[cheap], customer rating[5 out of 5], area[city centre], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Eagle is a 3 star restaurant that serves Italian food.", "output": "name[The Eagle], food[Italian], customer rating[3 out of 5]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Located near Express by Holiday Inn, Fitzbillies is high priced, family friendly, and has an average customer rating.", "output": "name[Fitzbillies], priceRange[high], customer rating[average], familyFriendly[yes], near[Express by Holiday Inn]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Alimentum is located in the City centre near Yippee Noodle Bar.  It is cheap, but has a five star rating.", "output": "name[Alimentum], food[English], priceRange[cheap], customer rating[5 out of 5], area[riverside], near[Yippee Noodle Bar]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The customer rating is high but it is children-friendly but the name is Strada", "output": "name[Strada], priceRange[more than \u00a330], customer rating[high], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There is a coffee shop in the riverside area named Zizzi.  It is not child-friendly, has a low customer rating, and possesses a price range of around \u00a330.", "output": "name[Zizzi], eatType[coffee shop], priceRange[more than \u00a330], customer rating[low], area[riverside], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Alimentum is a 5 out of 5 rated, cheap-priced French eatery near Yippee Noodle Bar.", "output": "name[Alimentum], food[French], priceRange[cheap], customer rating[5 out of 5], area[riverside], near[Yippee Noodle Bar]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Zizzi is a non-child friendly coffee shop located near the city centre. While it has high customer reviews, it also has prices ranging from 20-25 pounds.", "output": "name[Zizzi], eatType[coffee shop], priceRange[\u00a320-25], customer rating[high], area[city centre], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Browns Cambridge in the riverside area near the Crowne Plaza Hotel is a top notch place for a quick bit in a family friendly coffee shop style atmosphere.", "output": "name[Browns Cambridge], eatType[coffee shop], food[Fast food], customer rating[5 out of 5], area[riverside], familyFriendly[yes], near[Crowne Plaza Hotel]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Cambridge Blue is a three star restaurant located in the middle of nowhere", "output": "name[The Cambridge Blue], eatType[restaurant], food[Fast food], customer rating[average]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Midsummer House sells Chinese. It is located near Caf\u00e9 Rouge and has a rating of 5 out of 5", "output": "name[Midsummer House], food[Chinese], customer rating[5 out of 5], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Phoenix has a low rating due to making less than \u00a320 on the Japanese food. They are relocating to city centre.", "output": "name[The Phoenix], food[Japanese], priceRange[less than \u00a320], customer rating[low], area[city centre]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Loch Fyne is a restaurant, providing Italian food, located near The Rice Boat  with a average Customer rating.", "output": "name[Loch Fyne], food[Italian], customer rating[average], area[riverside], near[The Rice Boat]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "A high-priced child friendly fast food place near riverside is Alimentum.", "output": "name[Alimentum], food[Fast food], priceRange[high], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Fitzbillies is a cheap Indian food spot, it's a coffee shop style place near Riverside with average ratings and it's family friendly.", "output": "name[Fitzbillies], eatType[coffee shop], food[Indian], priceRange[cheap], customer rating[average], area[riverside], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Travellers Rest Beefeater is located near Caf\u00e9 Adriatic. It has high prices with a 5 out of 5 customer rating.", "output": "name[Travellers Rest Beefeater], priceRange[more than \u00a330], customer rating[5 out of 5], area[riverside], near[Caf\u00e9 Adriatic]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Golden Curry is located near Caf\u00e9 Rouge. They are highly rated and family friendly.", "output": "name[The Golden Curry], food[Italian], customer rating[5 out of 5], area[riverside], familyFriendly[yes], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There is a coffee shop that serves French food named Fitzbillies. They have a high price range and it is located at the riverside. It is a child friendly establishment with a customer rating of 3 out of 5.", "output": "name[Fitzbillies], eatType[coffee shop], food[French], priceRange[high], customer rating[3 out of 5], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Olive Grove is a pub that provides Indian food in the high price range. It is located in the city centre.", "output": "name[The Olive Grove], eatType[pub], food[Indian], priceRange[high], area[city centre], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Golden Curry is an Italian eatery with an average customer and are not family-friendly.", "output": "name[The Golden Curry], food[Italian], customer rating[average], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Punter, which is an Indian-serving coffee shop near Caf\u00e9 Sicilia, has a price range of \u00a320-25, is kid friendly and has a high customer rating.", "output": "name[The Punter], eatType[coffee shop], food[Indian], priceRange[\u00a320-25], customer rating[high], familyFriendly[yes], near[Caf\u00e9 Sicilia]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Browns Cambridge is a high priced restaurant that offers a variety of food and drinks.", "output": "name[Browns Cambridge], food[French], priceRange[more than \u00a330], customer rating[low]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Near The Six Bells there is an English food serving restaurant called the Fitzbillies with a price range of less than \u00a320.", "output": "name[Fitzbillies], food[English], priceRange[less than \u00a320], near[The Six Bells]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Green Man is a French establishment located in the city centre near All Bar One. It has a price range of less than \u00a320 and is not family-friendly.", "output": "name[Green Man], food[French], priceRange[less than \u00a320], area[city centre], familyFriendly[no], near[All Bar One]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Rice Boat serves Chinese food in the moderate price range with a customer rating of 3 out of 5 and is kids friendly in the riverside area near Express by Holiday Inn.", "output": "name[The Rice Boat], food[Chinese], priceRange[moderate], customer rating[3 out of 5], area[riverside], familyFriendly[yes], near[Express by Holiday Inn]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The pub located near Caf\u00e9 Brazil known as The Cambridge Blue serves French food at a high price range.", "output": "name[The Cambridge Blue], eatType[pub], food[French], priceRange[high], near[Caf\u00e9 Brazil]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Phoenix sells cheap French food in the riverside area, but it has a one star customer rating.", "output": "name[The Phoenix], food[French], priceRange[less than \u00a320], customer rating[low], area[riverside]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Vaults, is a high priced pub with a 3 out of 5 rating near Caf\u00e9 Adriatic.", "output": "name[The Vaults], eatType[pub], priceRange[high], customer rating[3 out of 5], near[Caf\u00e9 Adriatic]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Eagle is a French coffee shop located near Burger King in riverside. At a customer rating of 5 out of 5 and its cheap this makes a great family friendly place.", "output": "name[The Eagle], eatType[coffee shop], food[French], priceRange[cheap], customer rating[5 out of 5], area[riverside], familyFriendly[yes], near[Burger King]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Fitzbillies is a fast food coffee shop for adults with a rating of 3 out of 5. This Riverside location has a moderate price range.", "output": "name[Fitzbillies], eatType[coffee shop], food[Fast food], priceRange[moderate], customer rating[3 out of 5], area[riverside], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There is a child friendly Italian restaurant called Cotto with a poor customer rating located near Ranch.", "output": "name[Cotto], food[Italian], customer rating[1 out of 5], familyFriendly[yes], near[Ranch]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There is an Italian coffee shop called The Mill that is located in the City Centre. It is near The Sorrento and has a price range of less than \u00a320.", "output": "name[The Mill], eatType[coffee shop], food[Italian], priceRange[less than \u00a320], area[city centre], near[The Sorrento]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Giraffe is a children friendly coffee shop with a high customer rating. It's near The Bakers and has a price range of more than \u00a330.", "output": "name[Giraffe], eatType[coffee shop], priceRange[more than \u00a330], customer rating[high], familyFriendly[yes], near[The Bakers]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Wrestlers provides Indian food in the moderate price range.  It has a customer rating of 1 out of 5 and is not kid friendly.", "output": "name[The Wrestlers], food[Indian], priceRange[moderate], customer rating[1 out of 5], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The riverside coffee shop Fitzbillies is not child friendly. It is highly rated, serves Italian food and will cost more than \u00a330.", "output": "name[Fitzbillies], eatType[coffee shop], food[Italian], priceRange[more than \u00a330], customer rating[high], area[riverside], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "For a lovely Caf\u00e9 meal in a family friendly setting try The Dumpling Tree. It is reasonably priced and family friendly. Located near Caf\u00e9 Sicilia in the riverside area.", "output": "name[The Dumpling Tree], eatType[coffee shop], priceRange[\u00a320-25], area[riverside], familyFriendly[yes], near[Caf\u00e9 Sicilia]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "A pub in the riverside area, The Mill offers Chinese food for less than \u00a320.", "output": "name[The Mill], eatType[pub], food[Chinese], priceRange[less than \u00a320], area[riverside]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Aromi is a Chinese restaurant located downtown.", "output": "name[Aromi], eatType[restaurant], food[Chinese], area[city centre]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Located near The Sorrento is a French Theme eatery and coffee shop called The Mill, with a price range at \u00a320-\u00a325 it is in the riverside area.", "output": "name[The Mill], eatType[coffee shop], food[French], priceRange[\u00a320-25], area[riverside], near[The Sorrento]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Mill is a low-priced pub which is located in the City centre and serves breakfast food.", "output": "name[The Mill], eatType[pub], food[English], priceRange[less than \u00a320], area[riverside]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Loch Fyne is a kid friendly Chinese restaurant with a medium-high price range.", "output": "name[Loch Fyne], eatType[restaurant], food[Chinese], priceRange[\u00a320-25], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The moderately priced, kids friendly establishment The Punter can be found near The Portland Arms in the riverside area.", "output": "name[The Punter], priceRange[moderate], area[riverside], familyFriendly[yes], near[The Portland Arms]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Mill coffee shop in riverside near The Sorrento  serves Japanese food priced at less than \u00a320.", "output": "name[The Mill], eatType[coffee shop], food[Japanese], priceRange[less than \u00a320], area[riverside], near[The Sorrento]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Bakers which has a price range of less than \u00a320 was given an average rating by the Giraffe for a non family-friendly coffee shop", "output": "name[Giraffe], eatType[coffee shop], priceRange[less than \u00a320], customer rating[average], familyFriendly[no], near[The Bakers]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Wildwood is a highly rated Japanese coffee shop near Ranch.  Prices are average.", "output": "name[Wildwood], eatType[coffee shop], food[Japanese], priceRange[\u00a320-25], customer rating[high], near[Ranch]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Child friendly French coffee shop near The Portland Arms, The Cricketers is child friendly and highly rated.", "output": "name[The Cricketers], eatType[coffee shop], food[French], customer rating[high], familyFriendly[yes], near[The Portland Arms]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The high-end riverside restaurant The Rice Boat is located near the Express by Holiday Inn hotel. It caters for families.", "output": "name[The Rice Boat], food[English], priceRange[high], customer rating[1 out of 5], area[riverside], familyFriendly[yes], near[Express by Holiday Inn]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Featuring Chinese food priced less than 20 pounds, The Golden Curry is a a family friendly restaurant located near The Bakers.", "output": "name[The Golden Curry], food[Chinese], priceRange[less than \u00a320], familyFriendly[yes], near[The Bakers]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Zizzi is a pub that serves French food.  It is family friendly and has an average customer rating.", "output": "name[Zizzi], eatType[pub], food[French], customer rating[average], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Punter is an expensive restaurant that serves sushi.", "output": "name[The Punter], food[Japanese], priceRange[more than \u00a330]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Plough is a kid friendly pub located near the Caf\u00e9 Rouge. Its price range is \u00a320-25.", "output": "name[The Plough], eatType[pub], food[Fast food], priceRange[\u00a320-25], familyFriendly[yes], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Zizzi is a family friendly pub with a five star rating serving Italian food.", "output": "name[Zizzi], eatType[pub], food[Italian], customer rating[5 out of 5], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Offering a family-friendly environment, The Twenty Two serves Italian food in the city centre.", "output": "name[The Twenty Two], food[Italian], area[city centre], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Blue Spice has a high customer rating and is kids friendly. It is in the riverside area and had a price range of \u00a320-\u00a325.", "output": "name[Blue Spice], priceRange[\u00a320-25], customer rating[high], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Cricketers is a children friendly coffee shop which serves Italian food, and has a high customer rating, located near The Portland Arms.", "output": "name[The Cricketers], eatType[coffee shop], food[Italian], customer rating[high], familyFriendly[yes], near[The Portland Arms]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Waterman offers Chinese food at a cheap price range. The rating is average and it is located in the city centre. They are family friendly.", "output": "name[The Waterman], food[Chinese], priceRange[cheap], customer rating[average], area[city centre], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Loch Fyne is a 1 star Japanese restaurant located close to The Rice Boat. It is located in the city centre.", "output": "name[Loch Fyne], food[Japanese], customer rating[low], area[riverside], near[The Rice Boat]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Giraffe is a family-friendly pub ,serving high quality French food. It is located in the city centre.", "output": "name[Giraffe], eatType[pub], food[French], area[city centre], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Vaults is kid friendly, and the Fast food is moderately priced.", "output": "name[The Vaults], food[Fast food], priceRange[moderate], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Wrestlers is a non kid friendly. moderately priced fast food restaurant with a customer rating of 3 out of 5.", "output": "name[The Wrestlers], food[Fast food], priceRange[moderate], customer rating[3 out of 5], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "A coffee shop that serves French food and highly rated is Browns Cambridge. It is not family-friendly, but it is by the riverside near Crowne Plaza Hotel.", "output": "name[Browns Cambridge], eatType[coffee shop], food[French], customer rating[5 out of 5], area[riverside], familyFriendly[no], near[Crowne Plaza Hotel]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "In the centre of the city, there is a restaurant called The Waterman.  It is a highly recommended, yet inexpensive, restaurant for families.", "output": "name[The Waterman], food[French], priceRange[cheap], customer rating[5 out of 5], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Waterman is a cheap Indian food restaurant near the city centre. It has an average customer rating and is not family friendly.", "output": "name[The Waterman], food[Indian], priceRange[cheap], customer rating[average], area[city centre], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Cotto is near the Ranch. Plus, the food is children friendly and its English.", "output": "name[Cotto], food[English], customer rating[average], familyFriendly[yes], near[Ranch]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Alimentum is a family friendly burger joint that is cheap.", "output": "name[Alimentum], food[Fast food], priceRange[less than \u00a320], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Waterman is a family friendly French restaurant, located in the riverside area. It has an average customer service rating and prices less than \u00a320.", "output": "name[The Waterman], food[French], priceRange[less than \u00a320], customer rating[average], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Rice Boat near Express by Holiday Inn in city centre offers French food at a higher price range", "output": "name[The Rice Boat], food[French], priceRange[more than \u00a330], customer rating[5 out of 5], area[city centre], familyFriendly[no], near[Express by Holiday Inn]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Located near Caf\u00e9 Rouge is the Midsummer House, providing 3 star meals.", "output": "name[Midsummer House], food[Italian], customer rating[average], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "I love the food at Wildwood pub. They have the best burgers.", "output": "name[Wildwood], eatType[pub], food[Fast food], priceRange[more than \u00a330], customer rating[high]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Located near Caf\u00e9 Sicilia, The Punter is a child friendly coffee shop which serves French food at a price range of \u00a330 and over, and has a customer rating of 5 out of 5.", "output": "name[The Punter], eatType[coffee shop], food[French], priceRange[more than \u00a330], customer rating[5 out of 5], familyFriendly[yes], near[Caf\u00e9 Sicilia]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Mill is a coffee shop located in City centre, near The Sorrento, that serves average-priced Italian cuisine.", "output": "name[The Mill], eatType[coffee shop], food[Italian], priceRange[moderate], area[riverside], near[The Sorrento]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Family oriented Cocum coffee shop offers a five star, moderately priced lunch or dinner menu.", "output": "name[Cocum], eatType[coffee shop], food[Fast food], priceRange[\u00a320-25], customer rating[high], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Located near the Rainbow Vegetarian Caf\u00e9, The Golden Palace offers high priced pub food in the Riverside area.", "output": "name[The Golden Palace], eatType[pub], priceRange[high], area[riverside], near[Rainbow Vegetarian Caf\u00e9]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There is a pub that serves Japanese food with a customer rating of 5 out of 5 called The Waterman.", "output": "name[The Waterman], eatType[pub], food[Japanese], customer rating[5 out of 5], area[city centre]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Strada has a low customer rating is family friendly and offers selections for less than \u00a320.", "output": "name[Strada], priceRange[less than \u00a320], customer rating[low], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Irresistible Cocum and succulent combo, a hamburger quality, addictive chips, and soda are cool and calm your hungry beast", "output": "name[Cocum], eatType[coffee shop], food[Fast food], priceRange[moderate], customer rating[1 out of 5], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Serving Japanese food, in the high price range, The Wrestlers is child friendly and has a customer rating of 5 out of 5.", "output": "name[The Wrestlers], food[Japanese], priceRange[more than \u00a330], customer rating[5 out of 5], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Rice Boat serves English food and is highly rated by its customers. The prices are average but it is easily located close to the Express by Holiday Inn in Riverside.", "output": "name[The Rice Boat], food[English], priceRange[\u00a320-25], customer rating[high], area[riverside], familyFriendly[yes], near[Express by Holiday Inn]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Strada provides Chinese food in the cheap price range. It is near Rainbow Vegetarian Caf\u00e9. Its customer rating is average.", "output": "name[Strada], food[Chinese], priceRange[cheap], customer rating[average], familyFriendly[yes], near[Rainbow Vegetarian Caf\u00e9]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Serving Japanese food, The Wrestlers comes with a high customer rating. The price range is \u00a320-25. It is not kid friendly,", "output": "name[The Wrestlers], food[Japanese], priceRange[\u00a320-25], customer rating[high], familyFriendly[no]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "A restaurant in the city centre with a low customer rating is called The Golden Palace.", "output": "name[The Golden Palace], eatType[restaurant], customer rating[low], area[city centre]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Priced at more than L30, the family friendly pub The Plough is currently serving Indian food near Caf\u00e9 Rouge.", "output": "name[The Plough], eatType[pub], food[Indian], priceRange[more than \u00a330], familyFriendly[yes], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There's an inexpensive pub called Wildwood that sells a decent British breakfast.", "output": "name[Wildwood], eatType[pub], food[English], priceRange[cheap], customer rating[average]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Punter is a fast food coffee shop near Caf\u00e9 Sicilia. It has a high customer rating and is not children friendly. Prices range at more than 30 pounds.", "output": "name[The Punter], eatType[coffee shop], food[Fast food], priceRange[more than \u00a330], customer rating[high], familyFriendly[no], near[Caf\u00e9 Sicilia]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "In the riverside area is a fast food coffee shop called The Golden Palace that has a moderate price range and a 3 out of 5  rating.", "output": "name[The Golden Palace], eatType[coffee shop], food[Fast food], priceRange[moderate], customer rating[3 out of 5], area[riverside]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Browns Cambridge, the coffee shop, can be found near Crowne Plaza Hotel, in City Centre, but it is not family-friendly and has low ratings.", "output": "name[Browns Cambridge], eatType[coffee shop], food[Italian], customer rating[low], area[city centre], familyFriendly[no], near[Crowne Plaza Hotel]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Rice Boat is a kid friendly English restaurant on the riverside with high customer ratings.", "output": "name[The Rice Boat], food[English], customer rating[high], area[riverside], familyFriendly[yes]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "A French coffee shop, The Punter, is not family-friendly, provides average service at less than \u00a320 near Caf\u00e9 Sicilia", "output": "name[The Punter], eatType[coffee shop], food[French], priceRange[less than \u00a320], customer rating[average], familyFriendly[no], near[Caf\u00e9 Sicilia]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Cotto is a coffee shop in the low price range. It is located near to The Portland Arms.", "output": "name[Cotto], eatType[coffee shop], food[Italian], priceRange[less than \u00a320], customer rating[low], area[riverside], near[The Portland Arms]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Golden Curry is a highly-rated kids friendly English food place near Caf\u00e9 Rouge in the area of riverside.", "output": "name[The Golden Curry], food[English], customer rating[high], area[riverside], familyFriendly[yes], near[Caf\u00e9 Rouge]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "The Cambridge Blue is a French pub located near Caf\u00e9 Brazil in the \u00a320-25 price range.", "output": "name[The Cambridge Blue], eatType[pub], food[French], priceRange[\u00a320-25], near[Caf\u00e9 Brazil]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "There is child friendly perfect rated French coffee shop near Crowne Plaza Hotel in the riverside area.  Its named Browns Cambridge.", "output": "name[Browns Cambridge], eatType[coffee shop], food[French], customer rating[5 out of 5], area[riverside], familyFriendly[yes], near[Crowne Plaza Hotel]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Strada is a pub located near of Yippee Noodle Bar.", "output": "name[Strada], eatType[pub], food[English], customer rating[1 out of 5], near[Yippee Noodle Bar]", "category": "Information Extraction 1574.json"}, {"instruction": "In this task, we ask you to parse restaurant descriptions into a structured data table of key-value pairs. Here are the attributes (keys) and their examples values. You should preserve this order when creating the answer: \n name: The Eagle,... \n eatType: restaurant, coffee shop,... \n food: French, Italian,... \n priceRange: cheap, expensive,... \n customerRating: 1 of 5 (low), 4 of 5 (high) \n area: riverside, city center, ... \n familyFriendly: Yes / No \n near: Panda Express,...\n The output table may contain all or only some of the attributes but must not contain unlisted attributes. For the output to be considered correct, it also must parse all of the attributes existant in the input sentence; in other words, incomplete parsing would be considered incorrect.", "input": "Blue Spice by a riverside serving English food with a moderate price Range.", "output": "name[Blue Spice], food[English], priceRange[moderate], area[riverside]", "category": "Information Extraction 1574.json"}]