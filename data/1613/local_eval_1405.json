[{"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return bethany hamilton \n#2 return where  was  #1 born", "output": "where was bethany hamilton born?, where in the us was bethany hamilton born?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return the  left image \n#2 return the  fox in  #1 \n#3 return area in  #1 \n#4 return #3 that is barren \n#5 return #4 that is sandy \n#6 return if  #2 is standing in  #5", "output": "If the fox in the image on the left is standing in a barren sandy area.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return trains \n#2 return #1 that are  facing left \n#3 return number of #2 \n#4 return if  #3 is  equal to two", "output": "If both trains are facing left", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return champions league titles \n#2 return who  won #1 \n#3 return number of  #1 for each  #2 \n#4 return #2 where  #3 is the  highest", "output": "who won the most champions league titles?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return the  title Director for Multilateral Affairs \n#2 return person of #1 \n#3 return who  inspired #2", "output": "Who inspired the person with the title Director for Multilateral Affairs?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return dog \n#2 return grass \n#3 return #1 that is lying down on #2 \n#4 return if  #3 is in  one image", "output": "If the dog in one of the images is lying down on the grass.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return Liang Shiyi 's cabinet formation \n#2 return his resignation \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return which is lowest of #3 ,  #4", "output": "Which happened first, Liang Shiyi's cabinet formation or his resignation?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return lipstick \n#2 return #1 that is red \n#3 return tube \n#4 return #3 that is silver \n#5 return #2 in  #4 \n#6 return cap \n#7 return #6 that is black \n#8 return #7 that is upright \n#9 return if  #5 is level to  #8 \n#10 return if  #5 is alongside #8 \n#11 return if  both  #9 and #10 is true", "output": "If a red lipstick in a silver tube is displayed level to and alongside of its upright black cap.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return purple cylinders \n#2 return #1 that are rubber \n#3 return blue cylinders \n#4 return #2 to  the left of #3 \n#5 return number of  #4", "output": "How many purple rubber cylinders are to the left of the blue cylinders?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return cities \n#2 return #1 in ohio \n#3 return major #2", "output": "what are the major cities in ohio ", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return the  game \n#2 return the  beginning of #1 \n#3 return who  was  ahead in  #2", "output": "Who was ahead in the beginning of the game?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return Ryan Longwell \n#2 return field goals of #1 \n#3 return yards of #2 \n#4 return longest of #3 \n#5 return Steven Hauschka \n#6 return field goal  of #5 \n#7 return yards of #6 \n#8 return difference of #4 and  #7", "output": "How many yards longer was Ryan Longwell's longest field goal compared to Steven Hauschka's only successful field goal?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return hawaii \n#2 return senators of #1 \n#3 return representatives of #1 \n#4 return #2 , #3", "output": "who are the current senators and representatives of hawaii?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return staircase \n#2 return #1 that is curved \n#3 return the  number of  #2 \n#4 return if  #3 is equal to  one", "output": "If there is exactly one curved staircase.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return right image \n#2 return vase in  #1 \n#3 return number of  #2 \n#4 return if  #3 is equal to  one", "output": "If there is one vase on the right image", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return movies \n#2 return years released of  #1 \n#3 return #1 where #2 is  2000 or  earlier \n#4 return worldwide gross of  #1 \n#5 return #1 where #4 is  highest \n#6 return #3 or  #5 \n#7 return title of  #6 \n#8 return director of  #6 \n#9 return #7 ,  #8", "output": "Return the title and director of the movie released in the year 2000 or earlier that had the highest worldwide gross.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return cylinder \n#2 return tiny object to the right of #1 \n#3 return material of #2", "output": "What material is the tiny object to the right of the cylinder?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return field goals \n#2 return yards of #1 \n#3 return #1 where #2 is 23 yards \n#4 return kicker of #3", "output": "Which kicker kicked a 23 yard field goal?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return Tom Brady \n#2 return touchdown passes of #1 \n#3 return #2 in  the  first half \n#4 return number of  #3", "output": "How many touchdown passes did Tom Brady have in the first half?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return purple cylinder \n#2 return spheres behind #1 \n#3 return number of #2", "output": "How many spheres are behind the purple cylinder?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return cubes \n#2 return objects \n#3 return #2 that  are big \n#4 return number of  #1 \n#5 return number of  #3 \n#6 return if  #4 is  more than  #5", "output": "Are there more cubes than big objects?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return animal \n#2 return birds \n#3 return #1 with #2 \n#4 return if  #3 is in  one of the  images", "output": "If one of the images shows an animal with the birds.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return states \n#2 return #1 with surrounding states \n#3 return #1 besides  #2 \n#4 return names of  #3", "output": "name the states which have no surrounding states ", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return objects \n#2 return #1 that  are large \n#3 return #2 that  are rubber \n#4 return number of  #3", "output": "how many objects are large and rubber?, How many large rubber objects?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return peterson \n#2 return yards of #1 \n#3 return sum of #2", "output": "how many yards did peterson make?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return balls \n#2 return #1 that  are pictured \n#3 return number of #2", "output": "How many balls are pictured?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return thomas jefferson was  vice-president under john adams \n#2 return years of #1", "output": "what years was thomas jefferson vice-president under john adams?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return sphere \n#2 return #1 that  is  blue \n#3 return #2 that  is  metallic \n#4 return object \n#5 return #4 present behind #3 \n#6 return shape of #5", "output": "what is the shape of the object present behind the blue metallic  sphere ?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return Diego Silang declared independence of Ilocandia \n#2 return Diego Silang did die \n#3 return when  was  #1 \n#4 return when  was  #2 \n#5 return difference of #4 and  #3 in  days", "output": "How many days after Diego Silang declared independence of Ilocandia did he die?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return Archa Beer \n#2 return country of #1 \n#3 return type of currency of  #2", "output": "What type currency is used in the country where Archa Beer is produced?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return Hanson \n#2 return field goals that #1 kicks \n#3 return #2 in  the  second quarter \n#4 return number of  #3", "output": "How many field goals did Hanson kick in the second quarter?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return the  record for 18 total wins in  a season \n#2 return teams of #1", "output": "Which three teams hold the record for 18 total wins in a season?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return objects \n#2 return #1 that are purple \n#3 return shape \n#4 return #3 that is between #2", "output": "What shape is between the purple objects?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return yellow items \n#2 return are there  any #1", "output": "Are there any yellow items?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return drinking bottles \n#2 return #1 that are glass \n#3 return left image \n#4 return right image \n#5 return #2 that are in  #3 \n#6 return #2 that are in  #4 \n#7 return number of  #5 \n#8 return number of  #6 \n#9 return if  #7 is equal to  #8", "output": "If the left and right image contains the same number of glass drinking bottles.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return gray cylinder \n#2 return color further away from  #1", "output": "which color is further away from the gray cylinder?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return Brown \n#2 return field goals of #1 \n#3 return #2 in  the  fourth quarter \n#4 return first of #3 \n#5 return second of #3 \n#6 return yards of #4 \n#7 return yards of #5 \n#8 return difference of #6 and  #7", "output": "How many yards longer was Brown's first field goal kick of the fourth quarter than his second?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return saxophones \n#2 return musicians \n#3 return #1 that are with #2 \n#4 return #1 besides  #3 \n#5 return #4 that are lying down \n#6 return number of  #5 \n#7 return if  #6 is equal to  two", "output": "If two saxophones with no musicians are lying down.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return Matt Prater \n#2 return field goal kicks of #1 \n#3 return yards of #2 \n#4 return sum of #3", "output": "How many total yards did Matt Prater have on field goal kicks?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return most of the  English communities were destroyed \n#2 return the  island become a battleground again \n#3 return year of #1 \n#4 return year of #2 \n#5 return the  difference of #4 and  #3", "output": "How many years after most of the English communities were destroyed did the island become a battleground again?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return flights \n#2 return #1 from atlanta \n#3 return #2 to  oakland california \n#4 return #3 on thursday after 1600 hours", "output": "please show me flights from atlanta to oakland california on thursday after 1600 hours ", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return Massimo Moratti \n#2 return organization of #1 \n#3 return coach of #2", "output": "Who is the coach of the organization with Massimo Moratti?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return dogs \n#2 return leash \n#3 return #1 that has #2 attached \n#4 return mouth of #1 \n#5 return #1 where  #4 is open \n#6 return #5 where  #4 is non-snarling \n#7 return number of  #3 \n#8 return number of  #6 \n#9 return if  #7 is at least one \n#10 return if  #8 is at least one \n#11 return if  both  #9 and #10 are true", "output": "If at least one dog has a leash attached, and at least one dog has an open, non-snarling mouth.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return left image \n#2 return graduates in  #1 \n#3 return the  number of #2 \n#4 return If #3 is  at most two", "output": "If there are at most two graduates in the left image.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return musicians \n#2 return saxophones \n#3 return #1 that hold #2 \n#4 return images \n#5 return number of  #3 for each  #4 \n#6 return #4 where  #5 is at least four \n#7 return number of  #6 \n#8 return if  #7 is equal to  one", "output": "If at least four musicians hold saxophones in one image.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return the   gray sphere \n#2 return the   red cube \n#3 return the   green cylinder \n#4 return the   view of #3 \n#5 return if  #4 would be obstructed If #1 swapped places with  #2", "output": "If the gray sphere swapped places with the red cube, would the view of the green cylinder be obstructed?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return colleges \n#2 return student populations of  #1 \n#3 return #1 where #2 is  higher than 15000 \n#4 return number of  #3", "output": "What is the number of colleges with a student population greater than 15000?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return workshop groups \n#2 return #1 in which services are  performed \n#3 return phones of  #2 \n#4 return emails of  #2 \n#5 return #3 ,  #4", "output": "What are the phones and emails of workshop groups in which services are performed?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return lefthand image \n#2 return bakery in  #1 \n#3 return sign in  #1 \n#4 return #3 that is  rectangular \n#5 return #4 that is  white \n#6 return #5 that is  with  lettering only \n#7 return If #2 is  with  #6", "output": "If lefthand image features a bakery with a white rectangular sign with lettering only.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return cities \n#2 return areas of #1 \n#3 return the  average of #2 \n#4 return districts \n#5 return areas of #4 \n#6 return #4 where #5 is higher than #3 \n#7 return populations of #6 \n#8 return sum of #7", "output": "What is the total population for all the districts that have an area larger tahn the average city area?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return left image \n#2 return dogs in  #1 \n#3 return right image \n#4 return dogs in  #3 \n#5 return number of #2 \n#6 return number of #4 \n#7 return If #5 is  equal to one \n#8 return If #6 is  higher than one \n#9 return If both  #7 and #8 are  true", "output": "If there is one dog in the left image and multiple dogs in the right image.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return right image \n#2 return gorilla in  #1 \n#3 return #2 that is an adult \n#4 return #3 that is male \n#5 return arms of #4 \n#6 return ground in  #1 \n#7 return #5 that are extended down to  #6 \n#8 return body of #4 \n#9 return #7 that are in  front of #8 \n#10 return #2 that has #9 \n#11 return number of  #10 \n#12 return if  #11 is equal to  one \n#13 return number of  #2 \n#14 return if  #13 is equal to  one \n#15 return if  both  #14 and #12 are true", "output": "If the right image contains one gorilla, an adult male with its arms extended down to the ground in front of its body.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return groups \n#2 return #1 that are Hispanic \n#3 return #1 that are Latino \n#4 return #2 ,  #3 \n#5 return %S of #4 \n#6 return #4 where #5 lower than 1 \n#7 return #6 where #5 higher than .6", "output": "Which Hispanic or Latino groups hold less than 1% of the total population but more than .6%?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return teams \n#2 return #1 that has mascot Bailey \n#3 return when  did #2 win a playoff \n#4 return which is last of #3", "output": "When was the last time the team with the mascot Bailey win a playoff?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return customers \n#2 return #1 who  have  accounts \n#3 return #1 besides #2 \n#4 return number of #3", "output": "How many customers don't have an account?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return the  nobel prize for literature \n#2 return who  win #1 \n#3 return #2 that are women \n#4 return #3 that are african-american \n#5 return the  first of #4", "output": "what women was the first african-american to win the nobel prize for literature?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return objects \n#2 return #1 that  are farthest to  the   left \n#3 return shape of #2", "output": "What is the shape of the object farthest to the left?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return the  Fourth Hand \n#2 return author of #1 \n#3 return other works of #2", "output": "\"The Fourth Hand\" author also wrote what other works?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return caribbean \n#2 return islands of #1 \n#3 return the  size of #2 \n#4 return #2 where  #3 is the  largest", "output": "what is the largest island of the caribbeans?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return woody harrelson \n#2 return wesley snipes \n#3 return #1 as nyc transit cop \n#4 return #2 as nyc transit cop \n#5 return movie of both  #3 and #4", "output": "which movie starred woody harrelson and wesley snipes as nyc transit cops?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return wines \n#2 return prices of  #1 \n#3 return #1 where  #2 is higher than 100 \n#4 return grapes of  #3 \n#5 return wineries of  #3 \n#6 return years of  #3 \n#7 return #4 ,  #5 , #6 \n#8 return #7 sorted by #6", "output": "List the grape, winery and year of the wines whose price is bigger than 100 ordered by year.", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return matte objects \n#2 return #1 that is the biggest", "output": "Which matte object is the biggest?  ", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return objects \n#2 return #1 that  is  closest \n#3 return color of #2", "output": "What color is the object that is closest?", "category": "Question Generation 811.json"}, {"instruction": "In this task, you will be given a set of steps that are required to answer a specific question. Your job is to generate that question. Each given step refers to either an entity (known or unknown), a propery of an entity or a query operation (count, group, union, etc.) Knowing those operations and how they appear in the input may help you generate more accurate questions.\n Select: A select step is used to return a set of objects. There are no references to previous steps in a select step. template: Return [attributes]\n Filter: A filter step is used to return results from a previous step to which a certain condition applies. template: Return [#step] [condition]\n Project: A project step should return certain attributes of the results of a previous step. template: Return [attributes] of [#step]\n Aggregate: An aggregate step returns an aggregator function applied on a step's result. template: Return the [aggregator] of [#step].\n Group: A group step is an aggregator applied on attributes. template: Return the [aggregator] of [#step] for each [attribute]\n Superlative: A superlative step is used to return the result with a highest/lowest attribute among other results. template: Return [#step1] [where] [#step2] [is] [highest / lowest]\n Comparative: A comparative step is used when we need to compare an attribute with a number to filter results. template: Return [#step1] [where] [#step2] [comparator] [number] \n Union: A union step is used to return results of two steps together. template: Return [#step1] [or / ,] [#step2]\n Intersection: An intersection step returns the result that two steps have in common. template: Return [attribute] of both [#step1] and [#step2]\n Discard: A discard step returns result of a step and excludes result of another step from it. template: Return [#step1] besides [#step2]\n Sort: A sort returns result of another step in a specific order. template: Return [#step1] [ordered / sorted by] [#step2]\n Is true: An is true step checks a condition on another result and returns a true or false. template: Return [is / if] [condition]\n Arithmetic: An arithmatic step operates an arithmatic operation on one or more steps. template: Return the [arithmetic op.] of [#step1] [and] [#step2].", "input": "#1 return object \n#2 return #1 that  is  small \n#3 return other items \n#4 return material of #2 \n#5 return material of #3 \n#6 return #1 where  #4 is  different than  #5 \n#7 return color of #6", "output": "What color is the small object that is a different material than the other items?", "category": "Question Generation 811.json"}]